{"ast":null,"code":"// // // import React, { useEffect, useState } from 'react';\n// // // import { getAllAccounts } from '../utils/api';\n// // // import AccountDetails from './AccountDetails'; // assuming you have this\n\n// // // function AccountDashboard() {\n// // //   const [accounts, setAccounts] = useState([]);\n// // //   const [selectedAccountId, setSelectedAccountId] = useState(null);\n// // //   const [loading, setLoading] = useState(true);\n// // //   const [error, setError] = useState(null);\n\n// // //   useEffect(() => {\n// // //     getAllAccounts()\n// // //       .then(response => {\n// // //         setAccounts(response.data);\n// // //         setLoading(false);\n// // //       })\n// // //       .catch(() => {\n// // //         setError('Failed to load accounts');\n// // //         setLoading(false);\n// // //       });\n// // //   }, []);\n\n// // //   if (loading) return <p>Loading accounts...</p>;\n// // //   if (error) return <p>{error}</p>;\n\n// // //   return (\n// // //     <div>\n// // //       <h1>Account Dashboard</h1>\n// // //       <ul>\n// // //         {accounts.map(acc => (\n// // //           <li key={acc.accountId}>\n// // //             <button onClick={() => setSelectedAccountId(acc.accountId)}>\n// // //               {acc.accountHolderName} - {acc.accountNumber}\n// // //             </button>\n// // //           </li>\n// // //         ))}\n// // //       </ul>\n\n// // //       {selectedAccountId && <AccountDetails accountId={selectedAccountId} />}\n// // //     </div>\n// // //   );\n// // // }\n\n// // // export default AccountDashboard;\n// // import React, { useEffect, useState } from 'react';\n// // import { getAllAccounts } from '../utils/api';\n// // import AccountDetails from './AccountDetails';\n// //  // assuming you have this\n\n// // function AccountDashboard() {\n// //   const [accounts, setAccounts] = useState([]);\n// //   const [selectedAccountId, setSelectedAccountId] = useState(null);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n\n// //   useEffect(() => {\n// //     getAllAccounts()\n// //       .then(response => {\n// //         setAccounts(response.data);\n// //         setLoading(false);\n// //       })\n// //       .catch(() => {\n// //         setError('Failed to load accounts');\n// //         setLoading(false);\n// //       });\n// //   }, []);\n\n// //   if (loading) return <p style={styles.message}>Loading accounts...</p>;\n// //   if (error) return <p style={styles.message}>{error}</p>;\n\n// //   return (\n// //     <div style={styles.container}>\n// //       <h1 style={styles.heading}>Account Dashboard</h1>\n// //       <ul style={styles.list}>\n// //         {accounts.map(acc => (\n// //           <li key={acc.accountId} style={styles.listItem}>\n// //             <button\n// //               onClick={() => setSelectedAccountId(acc.accountId)}\n// //               style={{\n// //                 ...styles.button,\n// //                 ...(selectedAccountId === acc.accountId ? styles.buttonSelected : {}),\n// //               }}\n// //               onMouseEnter={(e) => {\n// //                 if (selectedAccountId !== acc.accountId) {\n// //                   e.target.style.backgroundColor = '#3730a3';\n// //                   e.target.style.transform = 'translateY(-2px)';\n// //                   e.target.style.boxShadow = '0 8px 25px rgba(79, 70, 229, 0.3)';\n// //                 }\n// //               }}\n// //               onMouseLeave={(e) => {\n// //                 if (selectedAccountId !== acc.accountId) {\n// //                   e.target.style.backgroundColor = '#4f46e5';\n// //                   e.target.style.transform = 'translateY(0)';\n// //                   e.target.style.boxShadow = '0 4px 15px rgba(79, 70, 229, 0.2)';\n// //                 }\n// //               }}\n// //             >\n// //               {acc.accountHolderName} - {acc.accountNumber}\n// //             </button>\n// //           </li>\n// //         ))}\n// //       </ul>\n\n// //       {selectedAccountId && (\n// //         <div style={styles.detailsContainer}>\n// //           <AccountDetails accountId={selectedAccountId} />\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// // // Enhanced inline style object with attractive modern design\n// // const styles = {\n// //   container: {\n// //     padding: '32px',\n// //     maxWidth: '900px',\n// //     margin: '40px auto',\n// //     background: 'linear-gradient(135deg, #ffffff 0%, #f8fafc 100%)',\n// //     boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.05)',\n// //     borderRadius: '24px',\n// //     fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n// //     position: 'relative',\n// //     overflow: 'hidden',\n// //   },\n// //   heading: {\n// //     textAlign: 'center',\n// //     background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n// //     WebkitBackgroundClip: 'text',\n// //     WebkitTextFillColor: 'transparent',\n// //     backgroundClip: 'text',\n// //     fontSize: '2.5rem',\n// //     fontWeight: '700',\n// //     marginBottom: '32px',\n// //     letterSpacing: '-0.02em',\n// //     position: 'relative',\n// //   },\n// //   list: {\n// //     listStyle: 'none',\n// //     padding: 0,\n// //     margin: 0,\n// //     display: 'grid',\n// //     gap: '16px',\n// //   },\n// //   listItem: {\n// //     marginBottom: '0',\n// //     position: 'relative',\n// //   },\n// //   button: {\n// //     background: 'linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)',\n// //     color: '#ffffff',\n// //     border: 'none',\n// //     padding: '16px 24px',\n// //     fontSize: '16px',\n// //     fontWeight: '500',\n// //     borderRadius: '16px',\n// //     cursor: 'pointer',\n// //     width: '100%',\n// //     textAlign: 'left',\n// //     transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n// //     position: 'relative',\n// //     overflow: 'hidden',\n// //     boxShadow: '0 4px 15px rgba(79, 70, 229, 0.2)',\n// //     backdropFilter: 'blur(10px)',\n// //     letterSpacing: '0.01em',\n// //     lineHeight: '1.5',\n// //   },\n// //   buttonSelected: {\n// //     background: 'linear-gradient(135deg, #059669 0%, #0d9488 100%)',\n// //     boxShadow: '0 8px 25px rgba(5, 150, 105, 0.3)',\n// //     transform: 'translateY(-2px)',\n// //   },\n// //   message: {\n// //     textAlign: 'center',\n// //     color: '#6b7280',\n// //     fontSize: '18px',\n// //     fontWeight: '500',\n// //     padding: '60px 20px',\n// //     background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\n// //     borderRadius: '20px',\n// //     margin: '40px auto',\n// //     maxWidth: '600px',\n// //     boxShadow: '0 10px 30px rgba(0, 0, 0, 0.08)',\n// //     border: '1px solid rgba(255, 255, 255, 0.2)',\n// //   },\n// //   detailsContainer: {\n// //     marginTop: '32px',\n// //     padding: '24px',\n// //     background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(248, 250, 252, 0.9) 100%)',\n// //     borderRadius: '20px',\n// //     border: '1px solid rgba(255, 255, 255, 0.2)',\n// //     boxShadow: '0 10px 30px rgba(0, 0, 0, 0.08)',\n// //     backdropFilter: 'blur(10px)',\n// //     position: 'relative',\n// //     overflow: 'hidden',\n// //   },\n// // };\n\n// // export default AccountDashboard;\n\n// import React, { useEffect, useState } from 'react';\n// import { getAllAccounts } from '../utils/api';\n// import AccountDetails from './AccountDetails';\n\n// function AccountDashboard() {\n//   const [accounts, setAccounts] = useState([]);\n//   const [selectedAccountId, setSelectedAccountId] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     getAllAccounts()\n//       .then(response => {\n//         setAccounts(response.data);\n//         setLoading(false);\n//       })\n//       .catch(() => {\n//         setError('Failed to load accounts');\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   const filteredAccounts = accounts.filter(acc =>\n//     acc.accountHolderName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     acc.accountNumber.toString().includes(searchTerm)\n//   );\n\n//   const formatAccountNumber = (accountNumber) => {\n//     const str = accountNumber.toString();\n//     return str.replace(/(\\d{4})(?=\\d)/g, '$1 ');\n//   };\n\n//   const formatCurrency = (amount) => {\n//     return new Intl.NumberFormat('en-US', {\n//       style: 'currency',\n//       currency: 'USD',\n//       minimumFractionDigits: 2\n//     }).format(amount || 0);\n//   };\n\n//   const getAccountTypeIcon = (type) => {\n//     switch(type?.toLowerCase()) {\n//       case 'checking': return 'üí≥';\n//       case 'savings': return 'üè¶';\n//       case 'business': return 'üè¢';\n//       case 'credit': return 'üíé';\n//       default: return 'üí∞';\n//     }\n//   };\n\n//   const getBalanceColor = (balance) => {\n//     if (balance >= 10000) return '#059669';\n//     if (balance >= 1000) return '#0891b2';\n//     if (balance >= 0) return '#6366f1';\n//     return '#ef4444';\n//   };\n\n//   if (loading) {\n//     return (\n//       <div style={styles.loadingContainer}>\n//         <div style={styles.spinner}></div>\n//         <p style={styles.loadingText}>Loading your accounts...</p>\n//       </div>\n//     );\n//   }\n\n//   if (error) {\n//     return (\n//       <div style={styles.errorContainer}>\n//         <div style={styles.errorIcon}>‚ö†Ô∏è</div>\n//         <p style={styles.errorText}>{error}</p>\n//         <button style={styles.retryButton} onClick={() => window.location.reload()}>\n//           Retry\n//         </button>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Header Section */}\n//       <div style={styles.header}>\n//         <div style={styles.headerContent}>\n//           <h1 style={styles.heading}>\n//             <span style={styles.headingIcon}>üèõÔ∏è</span>\n//             Account Overview\n//           </h1>\n//           <p style={styles.subheading}>\n//             Manage your accounts ‚Ä¢ {accounts.length} account{accounts.length !== 1 ? 's' : ''} found\n//           </p>\n//         </div>\n\n//         {/* Quick Stats */}\n//         <div style={styles.statsContainer}>\n//           <div style={styles.statCard}>\n//             <div style={styles.statIcon}>üí∞</div>\n//             <div>\n//               <div style={styles.statValue}>{formatCurrency(accounts.reduce((sum, acc) => sum + (acc.balance || 0), 0))}</div>\n//               <div style={styles.statLabel}>Total Balance</div>\n//             </div>\n//           </div>\n//           <div style={styles.statCard}>\n//             <div style={styles.statIcon}>üìä</div>\n//             <div>\n//               <div style={styles.statValue}>{accounts.length}</div>\n//               <div style={styles.statLabel}>Active Accounts</div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Search Bar */}\n//       <div style={styles.searchContainer}>\n//         <div style={styles.searchWrapper}>\n//           <span style={styles.searchIcon}>üîç</span>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search accounts by name or number...\"\n//             value={searchTerm}\n//             onChange={(e) => setSearchTerm(e.target.value)}\n//             style={styles.searchInput}\n//           />\n//           {searchTerm && (\n//             <button\n//               onClick={() => setSearchTerm('')}\n//               style={styles.clearButton}\n//             >\n//               ‚úï\n//             </button>\n//           )}\n//         </div>\n//       </div>\n\n//       {/* Accounts Grid */}\n//       <div style={styles.accountsGrid}>\n//         {filteredAccounts.map(acc => (\n//           <div\n//             key={acc.accountId}\n//             style={{\n//               ...styles.accountCard,\n//               ...(selectedAccountId === acc.accountId ? styles.accountCardSelected : {})\n//             }}\n//             onClick={() => setSelectedAccountId(acc.accountId)}\n//             onMouseEnter={(e) => {\n//               if (selectedAccountId !== acc.accountId) {\n//                 e.currentTarget.style.transform = 'translateY(-8px)';\n//                 e.currentTarget.style.boxShadow = '0 20px 40px rgba(0, 0, 0, 0.15)';\n//               }\n//             }}\n//             onMouseLeave={(e) => {\n//               if (selectedAccountId !== acc.accountId) {\n//                 e.currentTarget.style.transform = 'translateY(0)';\n//                 e.currentTarget.style.boxShadow = '0 10px 30px rgba(0, 0, 0, 0.1)';\n//               }\n//             }}\n//           >\n//             <div style={styles.accountCardHeader}>\n//               <div style={styles.accountTypeIcon}>\n//                 {getAccountTypeIcon(acc.accountType)}\n//               </div>\n//               <div style={styles.accountStatus}>\n//                 <div style={styles.statusDot}></div>\n//                 Active\n//               </div>\n//             </div>\n\n//             <div style={styles.accountInfo}>\n//               <h3 style={styles.accountHolderName}>{acc.accountHolderName}</h3>\n//               <p style={styles.accountNumber}>\n//                 <span style={styles.accountNumberLabel}>Account No:</span>\n//                 {formatAccountNumber(acc.accountNumber)}\n//               </p>\n//               <p style={styles.accountType}>\n//                 {acc.accountType || 'Checking'} Account\n//               </p>\n//             </div>\n\n//             <div style={styles.balanceSection}>\n//               <div style={styles.balanceLabel}>Available Balance</div>\n//               <div \n//                 style={{\n//                   ...styles.balanceAmount,\n//                   color: getBalanceColor(acc.balance)\n//                 }}\n//               >\n//                 {formatCurrency(acc.balance)}\n//               </div>\n//             </div>\n\n//             <div style={styles.accountActions}>\n//               <button style={styles.actionButton}>\n//                 <span>üìä</span>\n//                 View Details\n//               </button>\n\n//             </div>\n\n//             {selectedAccountId === acc.accountId && (\n//               <div style={styles.selectedIndicator}>\n//                 <span>‚úì</span>\n//               </div>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n\n//       {filteredAccounts.length === 0 && searchTerm && (\n//         <div style={styles.noResults}>\n//           <div style={styles.noResultsIcon}>üîç</div>\n//           <p style={styles.noResultsText}>No accounts found matching \"{searchTerm}\"</p>\n//           <button\n//             onClick={() => setSearchTerm('')}\n//             style={styles.clearSearchButton}\n//           >\n//             Clear Search\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Account Details Panel */}\n//       {selectedAccountId && (\n//         <div style={styles.detailsContainer}>\n//           <div style={styles.detailsHeader}>\n//             <h2 style={styles.detailsTitle}>Account Details</h2>\n//             <button\n//               onClick={() => setSelectedAccountId(null)}\n//               style={styles.closeButton}\n//             >\n//               ‚úï\n//             </button>\n//           </div>\n//           <AccountDetails accountId={selectedAccountId} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// // Modern banking system styles\n// const styles = {\n//   container: {\n//     padding: '24px',\n//     maxWidth: '1400px',\n//     margin: '0 auto',\n//     fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n//     background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\n//     minHeight: '100vh',\n//   },\n\n//   // Header Styles\n//   header: {\n//     background: 'linear-gradient(135deg, #1e293b 0%, #334155 100%)',\n//     borderRadius: '24px',\n//     padding: '32px',\n//     marginBottom: '32px',\n//     color: 'white',\n//     position: 'relative',\n//     overflow: 'hidden',\n//   },\n\n//   headerContent: {\n//     marginBottom: '24px',\n//   },\n\n//   heading: {\n//     fontSize: '2.5rem',\n//     fontWeight: '700',\n//     margin: '0 0 8px 0',\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '16px',\n//   },\n\n//   headingIcon: {\n//     fontSize: '2rem',\n//   },\n\n//   subheading: {\n//     fontSize: '1.1rem',\n//     opacity: '0.8',\n//     margin: '0',\n//     fontWeight: '400',\n//   },\n\n//   statsContainer: {\n//     display: 'grid',\n//     gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n//     gap: '20px',\n//   },\n\n//   statCard: {\n//     background: 'rgba(255, 255, 255, 0.1)',\n//     borderRadius: '16px',\n//     padding: '20px',\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '16px',\n//     backdropFilter: 'blur(10px)',\n//     border: '1px solid rgba(255, 255, 255, 0.1)',\n//   },\n\n//   statIcon: {\n//     fontSize: '2rem',\n//     background: 'rgba(255, 255, 255, 0.2)',\n//     borderRadius: '12px',\n//     width: '60px',\n//     height: '60px',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n\n//   statValue: {\n//     fontSize: '1.8rem',\n//     fontWeight: '700',\n//     margin: '0 0 4px 0',\n//   },\n\n//   statLabel: {\n//     fontSize: '0.9rem',\n//     opacity: '0.7',\n//   },\n\n//   // Search Styles\n//   searchContainer: {\n//     marginBottom: '32px',\n//   },\n\n//   searchWrapper: {\n//     position: 'relative',\n//     maxWidth: '500px',\n//     margin: '0 auto',\n//   },\n\n//   searchIcon: {\n//     position: 'absolute',\n//     left: '16px',\n//     top: '50%',\n//     transform: 'translateY(-50%)',\n//     fontSize: '1.2rem',\n//     opacity: '0.5',\n//   },\n\n//   searchInput: {\n//     width: '100%',\n//     padding: '16px 20px 16px 50px',\n//     fontSize: '16px',\n//     border: '2px solid #e2e8f0',\n//     borderRadius: '50px',\n//     background: 'white',\n//     outline: 'none',\n//     transition: 'all 0.3s ease',\n//     boxShadow: '0 4px 20px rgba(0, 0, 0, 0.05)',\n//   },\n\n//   clearButton: {\n//     position: 'absolute',\n//     right: '12px',\n//     top: '50%',\n//     transform: 'translateY(-50%)',\n//     background: '#ef4444',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '50%',\n//     width: '28px',\n//     height: '28px',\n//     cursor: 'pointer',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontSize: '14px',\n//   },\n\n//   // Account Grid Styles\n//   accountsGrid: {\n//     display: 'grid',\n//     gridTemplateColumns: 'repeat(auto-fill, minmax(380px, 1fr))',\n//     gap: '24px',\n//     marginBottom: '32px',\n//   },\n\n//   accountCard: {\n//     background: 'white',\n//     borderRadius: '20px',\n//     padding: '24px',\n//     cursor: 'pointer',\n//     transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n//     boxShadow: '0 10px 30px rgba(0, 0, 0, 0.1)',\n//     border: '2px solid transparent',\n//     position: 'relative',\n//     overflow: 'hidden',\n//   },\n\n//   accountCardSelected: {\n//     border: '2px solid #3b82f6',\n//     transform: 'translateY(-4px)',\n//     boxShadow: '0 20px 40px rgba(59, 130, 246, 0.2)',\n//   },\n\n//   accountCardHeader: {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     marginBottom: '20px',\n//   },\n\n//   accountTypeIcon: {\n//     fontSize: '2rem',\n//     background: 'linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%)',\n//     borderRadius: '12px',\n//     width: '60px',\n//     height: '60px',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n\n//   accountStatus: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '8px',\n//     color: '#059669',\n//     fontSize: '14px',\n//     fontWeight: '600',\n//   },\n\n//   statusDot: {\n//     width: '8px',\n//     height: '8px',\n//     borderRadius: '50%',\n//     background: '#059669',\n//   },\n\n//   accountInfo: {\n//     marginBottom: '20px',\n//   },\n\n//   accountHolderName: {\n//     fontSize: '1.4rem',\n//     fontWeight: '700',\n//     margin: '0 0 8px 0',\n//     color: '#1f2937',\n//   },\n\n//   accountNumber: {\n//     fontSize: '1rem',\n//     color: '#6b7280',\n//     margin: '0 0 4px 0',\n//     fontFamily: 'monospace',\n//   },\n\n//   accountNumberLabel: {\n//     fontWeight: '600',\n//     marginRight: '8px',\n//   },\n\n//   accountType: {\n//     fontSize: '0.9rem',\n//     color: '#9ca3af',\n//     margin: '0',\n//     textTransform: 'uppercase',\n//     letterSpacing: '0.5px',\n//     fontWeight: '600',\n//   },\n\n//   balanceSection: {\n//     marginBottom: '24px',\n//     padding: '16px',\n//     background: 'linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%)',\n//     borderRadius: '12px',\n//     border: '1px solid #e2e8f0',\n//   },\n\n//   balanceLabel: {\n//     fontSize: '0.9rem',\n//     color: '#6b7280',\n//     marginBottom: '4px',\n//     fontWeight: '500',\n//   },\n\n//   balanceAmount: {\n//     fontSize: '2rem',\n//     fontWeight: '800',\n//     fontFamily: 'monospace',\n//   },\n\n//   accountActions: {\n//     display: 'flex',\n//     gap: '12px',\n//   },\n\n//   actionButton: {\n//     flex: '1',\n//     background: 'linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%)',\n//     border: '1px solid #d1d5db',\n//     borderRadius: '10px',\n//     padding: '10px 16px',\n//     fontSize: '14px',\n//     fontWeight: '600',\n//     cursor: 'pointer',\n//     transition: 'all 0.2s ease',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     gap: '6px',\n//   },\n\n//   selectedIndicator: {\n//     position: 'absolute',\n//     top: '16px',\n//     right: '16px',\n//     background: '#3b82f6',\n//     color: 'white',\n//     borderRadius: '50%',\n//     width: '32px',\n//     height: '32px',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontSize: '16px',\n//     fontWeight: '700',\n//   },\n\n//   // Loading & Error Styles\n//   loadingContainer: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     padding: '80px 20px',\n//     background: 'white',\n//     borderRadius: '20px',\n//     margin: '40px auto',\n//     maxWidth: '500px',\n//     boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',\n//   },\n\n//   spinner: {\n//     width: '50px',\n//     height: '50px',\n//     border: '4px solid #f3f4f6',\n//     borderTop: '4px solid #3b82f6',\n//     borderRadius: '50%',\n//     animation: 'spin 1s linear infinite',\n//     marginBottom: '24px',\n//   },\n\n//   loadingText: {\n//     fontSize: '1.2rem',\n//     color: '#6b7280',\n//     fontWeight: '500',\n//   },\n\n//   errorContainer: {\n//     textAlign: 'center',\n//     padding: '80px 20px',\n//     background: 'white',\n//     borderRadius: '20px',\n//     margin: '40px auto',\n//     maxWidth: '500px',\n//     boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',\n//   },\n\n//   errorIcon: {\n//     fontSize: '4rem',\n//     marginBottom: '24px',\n//   },\n\n//   errorText: {\n//     fontSize: '1.2rem',\n//     color: '#ef4444',\n//     fontWeight: '600',\n//     marginBottom: '24px',\n//   },\n\n//   retryButton: {\n//     background: '#ef4444',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '12px',\n//     padding: '12px 24px',\n//     fontSize: '16px',\n//     fontWeight: '600',\n//     cursor: 'pointer',\n//     transition: 'all 0.3s ease',\n//   },\n\n//   // No Results Styles\n//   noResults: {\n//     textAlign: 'center',\n//     padding: '60px 20px',\n//     background: 'white',\n//     borderRadius: '20px',\n//     boxShadow: '0 10px 30px rgba(0, 0, 0, 0.1)',\n//   },\n\n//   noResultsIcon: {\n//     fontSize: '3rem',\n//     marginBottom: '16px',\n//     opacity: '0.5',\n//   },\n\n//   noResultsText: {\n//     fontSize: '1.1rem',\n//     color: '#6b7280',\n//     marginBottom: '24px',\n//   },\n\n//   clearSearchButton: {\n//     background: '#3b82f6',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '12px',\n//     padding: '12px 24px',\n//     fontSize: '16px',\n//     fontWeight: '600',\n//     cursor: 'pointer',\n//     transition: 'all 0.3s ease',\n//   },\n\n//   // Details Panel Styles\n//   detailsContainer: {\n//     background: 'white',\n//     borderRadius: '20px',\n//     overflow: 'hidden',\n//     boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',\n//     border: '2px solid #e2e8f0',\n//   },\n\n//   detailsHeader: {\n//     background: 'linear-gradient(135deg, #1e293b 0%, #334155 100%)',\n//     color: 'white',\n//     padding: '24px',\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//   },\n\n//   detailsTitle: {\n//     fontSize: '1.5rem',\n//     fontWeight: '700',\n//     margin: '0',\n//   },\n\n//   closeButton: {\n//     background: 'rgba(255, 255, 255, 0.2)',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '8px',\n//     width: '32px',\n//     height: '32px',\n//     cursor: 'pointer',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontSize: '18px',\n//     transition: 'all 0.3s ease',\n//   },\n// };\n\n// // Add keyframes for spinner animation\n// const styleSheet = document.createElement('style');\n// styleSheet.textContent = `\n//   @keyframes spin {\n//     0% { transform: rotate(0deg); }\n//     100% { transform: rotate(360deg); }\n//   }\n// `;\n// document.head.appendChild(styleSheet);\n\n// export default AccountDashboard;","map":{"version":3,"names":[],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/AccountDashboard.js"],"sourcesContent":["// // // import React, { useEffect, useState } from 'react';\r\n// // // import { getAllAccounts } from '../utils/api';\r\n// // // import AccountDetails from './AccountDetails'; // assuming you have this\r\n\r\n// // // function AccountDashboard() {\r\n// // //   const [accounts, setAccounts] = useState([]);\r\n// // //   const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n// // //   const [loading, setLoading] = useState(true);\r\n// // //   const [error, setError] = useState(null);\r\n\r\n// // //   useEffect(() => {\r\n// // //     getAllAccounts()\r\n// // //       .then(response => {\r\n// // //         setAccounts(response.data);\r\n// // //         setLoading(false);\r\n// // //       })\r\n// // //       .catch(() => {\r\n// // //         setError('Failed to load accounts');\r\n// // //         setLoading(false);\r\n// // //       });\r\n// // //   }, []);\r\n\r\n// // //   if (loading) return <p>Loading accounts...</p>;\r\n// // //   if (error) return <p>{error}</p>;\r\n\r\n// // //   return (\r\n// // //     <div>\r\n// // //       <h1>Account Dashboard</h1>\r\n// // //       <ul>\r\n// // //         {accounts.map(acc => (\r\n// // //           <li key={acc.accountId}>\r\n// // //             <button onClick={() => setSelectedAccountId(acc.accountId)}>\r\n// // //               {acc.accountHolderName} - {acc.accountNumber}\r\n// // //             </button>\r\n// // //           </li>\r\n// // //         ))}\r\n// // //       </ul>\r\n\r\n// // //       {selectedAccountId && <AccountDetails accountId={selectedAccountId} />}\r\n// // //     </div>\r\n// // //   );\r\n// // // }\r\n\r\n// // // export default AccountDashboard;\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import { getAllAccounts } from '../utils/api';\r\n// // import AccountDetails from './AccountDetails';\r\n// //  // assuming you have this\r\n\r\n// // function AccountDashboard() {\r\n// //   const [accounts, setAccounts] = useState([]);\r\n// //   const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [error, setError] = useState(null);\r\n\r\n// //   useEffect(() => {\r\n// //     getAllAccounts()\r\n// //       .then(response => {\r\n// //         setAccounts(response.data);\r\n// //         setLoading(false);\r\n// //       })\r\n// //       .catch(() => {\r\n// //         setError('Failed to load accounts');\r\n// //         setLoading(false);\r\n// //       });\r\n// //   }, []);\r\n\r\n// //   if (loading) return <p style={styles.message}>Loading accounts...</p>;\r\n// //   if (error) return <p style={styles.message}>{error}</p>;\r\n\r\n// //   return (\r\n// //     <div style={styles.container}>\r\n// //       <h1 style={styles.heading}>Account Dashboard</h1>\r\n// //       <ul style={styles.list}>\r\n// //         {accounts.map(acc => (\r\n// //           <li key={acc.accountId} style={styles.listItem}>\r\n// //             <button\r\n// //               onClick={() => setSelectedAccountId(acc.accountId)}\r\n// //               style={{\r\n// //                 ...styles.button,\r\n// //                 ...(selectedAccountId === acc.accountId ? styles.buttonSelected : {}),\r\n// //               }}\r\n// //               onMouseEnter={(e) => {\r\n// //                 if (selectedAccountId !== acc.accountId) {\r\n// //                   e.target.style.backgroundColor = '#3730a3';\r\n// //                   e.target.style.transform = 'translateY(-2px)';\r\n// //                   e.target.style.boxShadow = '0 8px 25px rgba(79, 70, 229, 0.3)';\r\n// //                 }\r\n// //               }}\r\n// //               onMouseLeave={(e) => {\r\n// //                 if (selectedAccountId !== acc.accountId) {\r\n// //                   e.target.style.backgroundColor = '#4f46e5';\r\n// //                   e.target.style.transform = 'translateY(0)';\r\n// //                   e.target.style.boxShadow = '0 4px 15px rgba(79, 70, 229, 0.2)';\r\n// //                 }\r\n// //               }}\r\n// //             >\r\n// //               {acc.accountHolderName} - {acc.accountNumber}\r\n// //             </button>\r\n// //           </li>\r\n// //         ))}\r\n// //       </ul>\r\n\r\n// //       {selectedAccountId && (\r\n// //         <div style={styles.detailsContainer}>\r\n// //           <AccountDetails accountId={selectedAccountId} />\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // // Enhanced inline style object with attractive modern design\r\n// // const styles = {\r\n// //   container: {\r\n// //     padding: '32px',\r\n// //     maxWidth: '900px',\r\n// //     margin: '40px auto',\r\n// //     background: 'linear-gradient(135deg, #ffffff 0%, #f8fafc 100%)',\r\n// //     boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.05)',\r\n// //     borderRadius: '24px',\r\n// //     fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\r\n// //     position: 'relative',\r\n// //     overflow: 'hidden',\r\n// //   },\r\n// //   heading: {\r\n// //     textAlign: 'center',\r\n// //     background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n// //     WebkitBackgroundClip: 'text',\r\n// //     WebkitTextFillColor: 'transparent',\r\n// //     backgroundClip: 'text',\r\n// //     fontSize: '2.5rem',\r\n// //     fontWeight: '700',\r\n// //     marginBottom: '32px',\r\n// //     letterSpacing: '-0.02em',\r\n// //     position: 'relative',\r\n// //   },\r\n// //   list: {\r\n// //     listStyle: 'none',\r\n// //     padding: 0,\r\n// //     margin: 0,\r\n// //     display: 'grid',\r\n// //     gap: '16px',\r\n// //   },\r\n// //   listItem: {\r\n// //     marginBottom: '0',\r\n// //     position: 'relative',\r\n// //   },\r\n// //   button: {\r\n// //     background: 'linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)',\r\n// //     color: '#ffffff',\r\n// //     border: 'none',\r\n// //     padding: '16px 24px',\r\n// //     fontSize: '16px',\r\n// //     fontWeight: '500',\r\n// //     borderRadius: '16px',\r\n// //     cursor: 'pointer',\r\n// //     width: '100%',\r\n// //     textAlign: 'left',\r\n// //     transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n// //     position: 'relative',\r\n// //     overflow: 'hidden',\r\n// //     boxShadow: '0 4px 15px rgba(79, 70, 229, 0.2)',\r\n// //     backdropFilter: 'blur(10px)',\r\n// //     letterSpacing: '0.01em',\r\n// //     lineHeight: '1.5',\r\n// //   },\r\n// //   buttonSelected: {\r\n// //     background: 'linear-gradient(135deg, #059669 0%, #0d9488 100%)',\r\n// //     boxShadow: '0 8px 25px rgba(5, 150, 105, 0.3)',\r\n// //     transform: 'translateY(-2px)',\r\n// //   },\r\n// //   message: {\r\n// //     textAlign: 'center',\r\n// //     color: '#6b7280',\r\n// //     fontSize: '18px',\r\n// //     fontWeight: '500',\r\n// //     padding: '60px 20px',\r\n// //     background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\r\n// //     borderRadius: '20px',\r\n// //     margin: '40px auto',\r\n// //     maxWidth: '600px',\r\n// //     boxShadow: '0 10px 30px rgba(0, 0, 0, 0.08)',\r\n// //     border: '1px solid rgba(255, 255, 255, 0.2)',\r\n// //   },\r\n// //   detailsContainer: {\r\n// //     marginTop: '32px',\r\n// //     padding: '24px',\r\n// //     background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(248, 250, 252, 0.9) 100%)',\r\n// //     borderRadius: '20px',\r\n// //     border: '1px solid rgba(255, 255, 255, 0.2)',\r\n// //     boxShadow: '0 10px 30px rgba(0, 0, 0, 0.08)',\r\n// //     backdropFilter: 'blur(10px)',\r\n// //     position: 'relative',\r\n// //     overflow: 'hidden',\r\n// //   },\r\n// // };\r\n\r\n// // export default AccountDashboard;\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { getAllAccounts } from '../utils/api';\r\n// import AccountDetails from './AccountDetails';\r\n\r\n// function AccountDashboard() {\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     getAllAccounts()\r\n//       .then(response => {\r\n//         setAccounts(response.data);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch(() => {\r\n//         setError('Failed to load accounts');\r\n//         setLoading(false);\r\n//       });\r\n//   }, []);\r\n\r\n//   const filteredAccounts = accounts.filter(acc =>\r\n//     acc.accountHolderName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//     acc.accountNumber.toString().includes(searchTerm)\r\n//   );\r\n\r\n//   const formatAccountNumber = (accountNumber) => {\r\n//     const str = accountNumber.toString();\r\n//     return str.replace(/(\\d{4})(?=\\d)/g, '$1 ');\r\n//   };\r\n\r\n//   const formatCurrency = (amount) => {\r\n//     return new Intl.NumberFormat('en-US', {\r\n//       style: 'currency',\r\n//       currency: 'USD',\r\n//       minimumFractionDigits: 2\r\n//     }).format(amount || 0);\r\n//   };\r\n\r\n//   const getAccountTypeIcon = (type) => {\r\n//     switch(type?.toLowerCase()) {\r\n//       case 'checking': return 'üí≥';\r\n//       case 'savings': return 'üè¶';\r\n//       case 'business': return 'üè¢';\r\n//       case 'credit': return 'üíé';\r\n//       default: return 'üí∞';\r\n//     }\r\n//   };\r\n\r\n//   const getBalanceColor = (balance) => {\r\n//     if (balance >= 10000) return '#059669';\r\n//     if (balance >= 1000) return '#0891b2';\r\n//     if (balance >= 0) return '#6366f1';\r\n//     return '#ef4444';\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <div style={styles.loadingContainer}>\r\n//         <div style={styles.spinner}></div>\r\n//         <p style={styles.loadingText}>Loading your accounts...</p>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <div style={styles.errorContainer}>\r\n//         <div style={styles.errorIcon}>‚ö†Ô∏è</div>\r\n//         <p style={styles.errorText}>{error}</p>\r\n//         <button style={styles.retryButton} onClick={() => window.location.reload()}>\r\n//           Retry\r\n//         </button>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       {/* Header Section */}\r\n//       <div style={styles.header}>\r\n//         <div style={styles.headerContent}>\r\n//           <h1 style={styles.heading}>\r\n//             <span style={styles.headingIcon}>üèõÔ∏è</span>\r\n//             Account Overview\r\n//           </h1>\r\n//           <p style={styles.subheading}>\r\n//             Manage your accounts ‚Ä¢ {accounts.length} account{accounts.length !== 1 ? 's' : ''} found\r\n//           </p>\r\n//         </div>\r\n        \r\n//         {/* Quick Stats */}\r\n//         <div style={styles.statsContainer}>\r\n//           <div style={styles.statCard}>\r\n//             <div style={styles.statIcon}>üí∞</div>\r\n//             <div>\r\n//               <div style={styles.statValue}>{formatCurrency(accounts.reduce((sum, acc) => sum + (acc.balance || 0), 0))}</div>\r\n//               <div style={styles.statLabel}>Total Balance</div>\r\n//             </div>\r\n//           </div>\r\n//           <div style={styles.statCard}>\r\n//             <div style={styles.statIcon}>üìä</div>\r\n//             <div>\r\n//               <div style={styles.statValue}>{accounts.length}</div>\r\n//               <div style={styles.statLabel}>Active Accounts</div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Search Bar */}\r\n//       <div style={styles.searchContainer}>\r\n//         <div style={styles.searchWrapper}>\r\n//           <span style={styles.searchIcon}>üîç</span>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Search accounts by name or number...\"\r\n//             value={searchTerm}\r\n//             onChange={(e) => setSearchTerm(e.target.value)}\r\n//             style={styles.searchInput}\r\n//           />\r\n//           {searchTerm && (\r\n//             <button\r\n//               onClick={() => setSearchTerm('')}\r\n//               style={styles.clearButton}\r\n//             >\r\n//               ‚úï\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Accounts Grid */}\r\n//       <div style={styles.accountsGrid}>\r\n//         {filteredAccounts.map(acc => (\r\n//           <div\r\n//             key={acc.accountId}\r\n//             style={{\r\n//               ...styles.accountCard,\r\n//               ...(selectedAccountId === acc.accountId ? styles.accountCardSelected : {})\r\n//             }}\r\n//             onClick={() => setSelectedAccountId(acc.accountId)}\r\n//             onMouseEnter={(e) => {\r\n//               if (selectedAccountId !== acc.accountId) {\r\n//                 e.currentTarget.style.transform = 'translateY(-8px)';\r\n//                 e.currentTarget.style.boxShadow = '0 20px 40px rgba(0, 0, 0, 0.15)';\r\n//               }\r\n//             }}\r\n//             onMouseLeave={(e) => {\r\n//               if (selectedAccountId !== acc.accountId) {\r\n//                 e.currentTarget.style.transform = 'translateY(0)';\r\n//                 e.currentTarget.style.boxShadow = '0 10px 30px rgba(0, 0, 0, 0.1)';\r\n//               }\r\n//             }}\r\n//           >\r\n//             <div style={styles.accountCardHeader}>\r\n//               <div style={styles.accountTypeIcon}>\r\n//                 {getAccountTypeIcon(acc.accountType)}\r\n//               </div>\r\n//               <div style={styles.accountStatus}>\r\n//                 <div style={styles.statusDot}></div>\r\n//                 Active\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div style={styles.accountInfo}>\r\n//               <h3 style={styles.accountHolderName}>{acc.accountHolderName}</h3>\r\n//               <p style={styles.accountNumber}>\r\n//                 <span style={styles.accountNumberLabel}>Account No:</span>\r\n//                 {formatAccountNumber(acc.accountNumber)}\r\n//               </p>\r\n//               <p style={styles.accountType}>\r\n//                 {acc.accountType || 'Checking'} Account\r\n//               </p>\r\n//             </div>\r\n\r\n//             <div style={styles.balanceSection}>\r\n//               <div style={styles.balanceLabel}>Available Balance</div>\r\n//               <div \r\n//                 style={{\r\n//                   ...styles.balanceAmount,\r\n//                   color: getBalanceColor(acc.balance)\r\n//                 }}\r\n//               >\r\n//                 {formatCurrency(acc.balance)}\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div style={styles.accountActions}>\r\n//               <button style={styles.actionButton}>\r\n//                 <span>üìä</span>\r\n//                 View Details\r\n//               </button>\r\n             \r\n//             </div>\r\n\r\n//             {selectedAccountId === acc.accountId && (\r\n//               <div style={styles.selectedIndicator}>\r\n//                 <span>‚úì</span>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {filteredAccounts.length === 0 && searchTerm && (\r\n//         <div style={styles.noResults}>\r\n//           <div style={styles.noResultsIcon}>üîç</div>\r\n//           <p style={styles.noResultsText}>No accounts found matching \"{searchTerm}\"</p>\r\n//           <button\r\n//             onClick={() => setSearchTerm('')}\r\n//             style={styles.clearSearchButton}\r\n//           >\r\n//             Clear Search\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Account Details Panel */}\r\n//       {selectedAccountId && (\r\n//         <div style={styles.detailsContainer}>\r\n//           <div style={styles.detailsHeader}>\r\n//             <h2 style={styles.detailsTitle}>Account Details</h2>\r\n//             <button\r\n//               onClick={() => setSelectedAccountId(null)}\r\n//               style={styles.closeButton}\r\n//             >\r\n//               ‚úï\r\n//             </button>\r\n//           </div>\r\n//           <AccountDetails accountId={selectedAccountId} />\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // Modern banking system styles\r\n// const styles = {\r\n//   container: {\r\n//     padding: '24px',\r\n//     maxWidth: '1400px',\r\n//     margin: '0 auto',\r\n//     fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\r\n//     background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\r\n//     minHeight: '100vh',\r\n//   },\r\n\r\n//   // Header Styles\r\n//   header: {\r\n//     background: 'linear-gradient(135deg, #1e293b 0%, #334155 100%)',\r\n//     borderRadius: '24px',\r\n//     padding: '32px',\r\n//     marginBottom: '32px',\r\n//     color: 'white',\r\n//     position: 'relative',\r\n//     overflow: 'hidden',\r\n//   },\r\n\r\n//   headerContent: {\r\n//     marginBottom: '24px',\r\n//   },\r\n\r\n//   heading: {\r\n//     fontSize: '2.5rem',\r\n//     fontWeight: '700',\r\n//     margin: '0 0 8px 0',\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     gap: '16px',\r\n//   },\r\n\r\n//   headingIcon: {\r\n//     fontSize: '2rem',\r\n//   },\r\n\r\n//   subheading: {\r\n//     fontSize: '1.1rem',\r\n//     opacity: '0.8',\r\n//     margin: '0',\r\n//     fontWeight: '400',\r\n//   },\r\n\r\n//   statsContainer: {\r\n//     display: 'grid',\r\n//     gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\r\n//     gap: '20px',\r\n//   },\r\n\r\n//   statCard: {\r\n//     background: 'rgba(255, 255, 255, 0.1)',\r\n//     borderRadius: '16px',\r\n//     padding: '20px',\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     gap: '16px',\r\n//     backdropFilter: 'blur(10px)',\r\n//     border: '1px solid rgba(255, 255, 255, 0.1)',\r\n//   },\r\n\r\n//   statIcon: {\r\n//     fontSize: '2rem',\r\n//     background: 'rgba(255, 255, 255, 0.2)',\r\n//     borderRadius: '12px',\r\n//     width: '60px',\r\n//     height: '60px',\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//   },\r\n\r\n//   statValue: {\r\n//     fontSize: '1.8rem',\r\n//     fontWeight: '700',\r\n//     margin: '0 0 4px 0',\r\n//   },\r\n\r\n//   statLabel: {\r\n//     fontSize: '0.9rem',\r\n//     opacity: '0.7',\r\n//   },\r\n\r\n//   // Search Styles\r\n//   searchContainer: {\r\n//     marginBottom: '32px',\r\n//   },\r\n\r\n//   searchWrapper: {\r\n//     position: 'relative',\r\n//     maxWidth: '500px',\r\n//     margin: '0 auto',\r\n//   },\r\n\r\n//   searchIcon: {\r\n//     position: 'absolute',\r\n//     left: '16px',\r\n//     top: '50%',\r\n//     transform: 'translateY(-50%)',\r\n//     fontSize: '1.2rem',\r\n//     opacity: '0.5',\r\n//   },\r\n\r\n//   searchInput: {\r\n//     width: '100%',\r\n//     padding: '16px 20px 16px 50px',\r\n//     fontSize: '16px',\r\n//     border: '2px solid #e2e8f0',\r\n//     borderRadius: '50px',\r\n//     background: 'white',\r\n//     outline: 'none',\r\n//     transition: 'all 0.3s ease',\r\n//     boxShadow: '0 4px 20px rgba(0, 0, 0, 0.05)',\r\n//   },\r\n\r\n//   clearButton: {\r\n//     position: 'absolute',\r\n//     right: '12px',\r\n//     top: '50%',\r\n//     transform: 'translateY(-50%)',\r\n//     background: '#ef4444',\r\n//     color: 'white',\r\n//     border: 'none',\r\n//     borderRadius: '50%',\r\n//     width: '28px',\r\n//     height: '28px',\r\n//     cursor: 'pointer',\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//     fontSize: '14px',\r\n//   },\r\n\r\n//   // Account Grid Styles\r\n//   accountsGrid: {\r\n//     display: 'grid',\r\n//     gridTemplateColumns: 'repeat(auto-fill, minmax(380px, 1fr))',\r\n//     gap: '24px',\r\n//     marginBottom: '32px',\r\n//   },\r\n\r\n//   accountCard: {\r\n//     background: 'white',\r\n//     borderRadius: '20px',\r\n//     padding: '24px',\r\n//     cursor: 'pointer',\r\n//     transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n//     boxShadow: '0 10px 30px rgba(0, 0, 0, 0.1)',\r\n//     border: '2px solid transparent',\r\n//     position: 'relative',\r\n//     overflow: 'hidden',\r\n//   },\r\n\r\n//   accountCardSelected: {\r\n//     border: '2px solid #3b82f6',\r\n//     transform: 'translateY(-4px)',\r\n//     boxShadow: '0 20px 40px rgba(59, 130, 246, 0.2)',\r\n//   },\r\n\r\n//   accountCardHeader: {\r\n//     display: 'flex',\r\n//     justifyContent: 'space-between',\r\n//     alignItems: 'center',\r\n//     marginBottom: '20px',\r\n//   },\r\n\r\n//   accountTypeIcon: {\r\n//     fontSize: '2rem',\r\n//     background: 'linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%)',\r\n//     borderRadius: '12px',\r\n//     width: '60px',\r\n//     height: '60px',\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//   },\r\n\r\n//   accountStatus: {\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     gap: '8px',\r\n//     color: '#059669',\r\n//     fontSize: '14px',\r\n//     fontWeight: '600',\r\n//   },\r\n\r\n//   statusDot: {\r\n//     width: '8px',\r\n//     height: '8px',\r\n//     borderRadius: '50%',\r\n//     background: '#059669',\r\n//   },\r\n\r\n//   accountInfo: {\r\n//     marginBottom: '20px',\r\n//   },\r\n\r\n//   accountHolderName: {\r\n//     fontSize: '1.4rem',\r\n//     fontWeight: '700',\r\n//     margin: '0 0 8px 0',\r\n//     color: '#1f2937',\r\n//   },\r\n\r\n//   accountNumber: {\r\n//     fontSize: '1rem',\r\n//     color: '#6b7280',\r\n//     margin: '0 0 4px 0',\r\n//     fontFamily: 'monospace',\r\n//   },\r\n\r\n//   accountNumberLabel: {\r\n//     fontWeight: '600',\r\n//     marginRight: '8px',\r\n//   },\r\n\r\n//   accountType: {\r\n//     fontSize: '0.9rem',\r\n//     color: '#9ca3af',\r\n//     margin: '0',\r\n//     textTransform: 'uppercase',\r\n//     letterSpacing: '0.5px',\r\n//     fontWeight: '600',\r\n//   },\r\n\r\n//   balanceSection: {\r\n//     marginBottom: '24px',\r\n//     padding: '16px',\r\n//     background: 'linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%)',\r\n//     borderRadius: '12px',\r\n//     border: '1px solid #e2e8f0',\r\n//   },\r\n\r\n//   balanceLabel: {\r\n//     fontSize: '0.9rem',\r\n//     color: '#6b7280',\r\n//     marginBottom: '4px',\r\n//     fontWeight: '500',\r\n//   },\r\n\r\n//   balanceAmount: {\r\n//     fontSize: '2rem',\r\n//     fontWeight: '800',\r\n//     fontFamily: 'monospace',\r\n//   },\r\n\r\n//   accountActions: {\r\n//     display: 'flex',\r\n//     gap: '12px',\r\n//   },\r\n\r\n//   actionButton: {\r\n//     flex: '1',\r\n//     background: 'linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%)',\r\n//     border: '1px solid #d1d5db',\r\n//     borderRadius: '10px',\r\n//     padding: '10px 16px',\r\n//     fontSize: '14px',\r\n//     fontWeight: '600',\r\n//     cursor: 'pointer',\r\n//     transition: 'all 0.2s ease',\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//     gap: '6px',\r\n//   },\r\n\r\n//   selectedIndicator: {\r\n//     position: 'absolute',\r\n//     top: '16px',\r\n//     right: '16px',\r\n//     background: '#3b82f6',\r\n//     color: 'white',\r\n//     borderRadius: '50%',\r\n//     width: '32px',\r\n//     height: '32px',\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//     fontSize: '16px',\r\n//     fontWeight: '700',\r\n//   },\r\n\r\n//   // Loading & Error Styles\r\n//   loadingContainer: {\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//     padding: '80px 20px',\r\n//     background: 'white',\r\n//     borderRadius: '20px',\r\n//     margin: '40px auto',\r\n//     maxWidth: '500px',\r\n//     boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',\r\n//   },\r\n\r\n//   spinner: {\r\n//     width: '50px',\r\n//     height: '50px',\r\n//     border: '4px solid #f3f4f6',\r\n//     borderTop: '4px solid #3b82f6',\r\n//     borderRadius: '50%',\r\n//     animation: 'spin 1s linear infinite',\r\n//     marginBottom: '24px',\r\n//   },\r\n\r\n//   loadingText: {\r\n//     fontSize: '1.2rem',\r\n//     color: '#6b7280',\r\n//     fontWeight: '500',\r\n//   },\r\n\r\n//   errorContainer: {\r\n//     textAlign: 'center',\r\n//     padding: '80px 20px',\r\n//     background: 'white',\r\n//     borderRadius: '20px',\r\n//     margin: '40px auto',\r\n//     maxWidth: '500px',\r\n//     boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',\r\n//   },\r\n\r\n//   errorIcon: {\r\n//     fontSize: '4rem',\r\n//     marginBottom: '24px',\r\n//   },\r\n\r\n//   errorText: {\r\n//     fontSize: '1.2rem',\r\n//     color: '#ef4444',\r\n//     fontWeight: '600',\r\n//     marginBottom: '24px',\r\n//   },\r\n\r\n//   retryButton: {\r\n//     background: '#ef4444',\r\n//     color: 'white',\r\n//     border: 'none',\r\n//     borderRadius: '12px',\r\n//     padding: '12px 24px',\r\n//     fontSize: '16px',\r\n//     fontWeight: '600',\r\n//     cursor: 'pointer',\r\n//     transition: 'all 0.3s ease',\r\n//   },\r\n\r\n//   // No Results Styles\r\n//   noResults: {\r\n//     textAlign: 'center',\r\n//     padding: '60px 20px',\r\n//     background: 'white',\r\n//     borderRadius: '20px',\r\n//     boxShadow: '0 10px 30px rgba(0, 0, 0, 0.1)',\r\n//   },\r\n\r\n//   noResultsIcon: {\r\n//     fontSize: '3rem',\r\n//     marginBottom: '16px',\r\n//     opacity: '0.5',\r\n//   },\r\n\r\n//   noResultsText: {\r\n//     fontSize: '1.1rem',\r\n//     color: '#6b7280',\r\n//     marginBottom: '24px',\r\n//   },\r\n\r\n//   clearSearchButton: {\r\n//     background: '#3b82f6',\r\n//     color: 'white',\r\n//     border: 'none',\r\n//     borderRadius: '12px',\r\n//     padding: '12px 24px',\r\n//     fontSize: '16px',\r\n//     fontWeight: '600',\r\n//     cursor: 'pointer',\r\n//     transition: 'all 0.3s ease',\r\n//   },\r\n\r\n//   // Details Panel Styles\r\n//   detailsContainer: {\r\n//     background: 'white',\r\n//     borderRadius: '20px',\r\n//     overflow: 'hidden',\r\n//     boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',\r\n//     border: '2px solid #e2e8f0',\r\n//   },\r\n\r\n//   detailsHeader: {\r\n//     background: 'linear-gradient(135deg, #1e293b 0%, #334155 100%)',\r\n//     color: 'white',\r\n//     padding: '24px',\r\n//     display: 'flex',\r\n//     justifyContent: 'space-between',\r\n//     alignItems: 'center',\r\n//   },\r\n\r\n//   detailsTitle: {\r\n//     fontSize: '1.5rem',\r\n//     fontWeight: '700',\r\n//     margin: '0',\r\n//   },\r\n\r\n//   closeButton: {\r\n//     background: 'rgba(255, 255, 255, 0.2)',\r\n//     color: 'white',\r\n//     border: 'none',\r\n//     borderRadius: '8px',\r\n//     width: '32px',\r\n//     height: '32px',\r\n//     cursor: 'pointer',\r\n//     display: 'flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//     fontSize: '18px',\r\n//     transition: 'all 0.3s ease',\r\n//   },\r\n// };\r\n\r\n// // Add keyframes for spinner animation\r\n// const styleSheet = document.createElement('style');\r\n// styleSheet.textContent = `\r\n//   @keyframes spin {\r\n//     0% { transform: rotate(0deg); }\r\n//     100% { transform: rotate(360deg); }\r\n//   }\r\n// `;\r\n// document.head.appendChild(styleSheet);\r\n\r\n// export default AccountDashboard;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}