{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishnu\\\\project\\\\OnlineBankingDashboard\\\\cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb\\\\reactapp\\\\src\\\\components\\\\DepositForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { depositMoney } from '../utils/api';\n\n// function DepositForm() {\n//   const [accountId, setAccountId] = useState('');\n//   const [date, setDate] = useState('');\n//   const [amount, setAmount] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [recipientAccount, setRecipientAccount] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setMessage('');\n\n//     if (!date) {\n//       setMessage('Please select a date.');\n//       return;\n//     }\n\n//     try {\n//       const response = await depositMoney({\n//         accountId: parseInt(accountId),\n//         amount: parseFloat(amount),\n//         description,\n//         date, // send date if supported by backend\n//         recipient_account: recipientAccount ? parseInt(recipientAccount) : undefined, // optional\n//       });\n//       setMessage(`Deposit successful! New balance: ${response.data.balance}`);\n\n//       // Reset form\n//       setAccountId('');\n//       setDate('');\n//       setAmount('');\n//       setDescription('');\n//       setRecipientAccount('');\n//     } catch (error) {\n//       setMessage(`Deposit failed: ${error.response?.data?.message || error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Deposit Money</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>\n//             Type: <br />\n//             <input type=\"text\" value=\"Deposit\" readOnly />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label>\n//             Date: <br />\n//             <input\n//               type=\"date\"\n//               value={date}\n//               onChange={(e) => setDate(e.target.value)}\n//               required\n//             />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label>\n//             Account ID: <br />\n//             <input\n//               type=\"number\"\n//               placeholder=\"Account ID\"\n//               value={accountId}\n//               onChange={(e) => setAccountId(e.target.value)}\n//               required\n//             />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label>\n//             Amount: <br />\n//             <input\n//               type=\"number\"\n//               min=\"0.01\"\n//               step=\"0.01\"\n//               placeholder=\"Amount\"\n//               value={amount}\n//               onChange={(e) => setAmount(e.target.value)}\n//               required\n//             />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label>\n//             Description: <br />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Description\"\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               required\n//             />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label>\n//             Recipient Account (optional): <br />\n//             <input\n//               type=\"number\"\n//               placeholder=\"Recipient Account ID\"\n//               value={recipientAccount}\n//               onChange={(e) => setRecipientAccount(e.target.value)}\n//             />\n//           </label>\n//         </div>\n\n//         <button type=\"submit\">Deposit</button>\n//       </form>\n\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default DepositForm;\n\nimport React, { useState } from 'react';\nimport { depositMoney } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DepositForm() {\n  _s();\n  const [accountId, setAccountId] = useState('');\n  const [date, setDate] = useState('');\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n  const [recipientAccount, setRecipientAccount] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    if (!date) {\n      setMessage('Please select a date.');\n      return;\n    }\n    try {\n      const response = await depositMoney({\n        accountId: parseInt(accountId),\n        amount: parseFloat(amount),\n        description,\n        date,\n        // send date if supported by backend\n        recipient_account: recipientAccount ? parseInt(recipientAccount) : undefined // optional\n      });\n      setMessage(`Deposit successful! New balance: ${response.data.balance}`);\n\n      // Reset form\n      setAccountId('');\n      setDate('');\n      setAmount('');\n      setDescription('');\n      setRecipientAccount('');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(`Deposit failed: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"Deposit Money\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: [\"Type: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: \"Deposit\",\n            readOnly: true,\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: [\"Date: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            required: true,\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: [\"Account ID: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Account ID\",\n            value: accountId,\n            onChange: e => setAccountId(e.target.value),\n            required: true,\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: [\"Amount: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            placeholder: \"Amount\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            required: true,\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: [\"Description: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description\",\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            required: true,\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: [\"Recipient Account (optional): \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Recipient Account ID\",\n            value: recipientAccount,\n            onChange: e => setRecipientAccount(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: message.startsWith('Deposit successful') ? styles.successMessage : styles.errorMessage,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(DepositForm, \"edA9NzYFRdvFLxWjrewb8T9fP1E=\");\n_c = DepositForm;\nconst styles = {\n  container: {\n    maxWidth: '400px',\n    margin: '20px auto',\n    padding: '20px',\n    backgroundColor: '#f9fafb',\n    borderRadius: '8px',\n    fontFamily: 'Arial, sans-serif',\n    boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n  },\n  heading: {\n    marginBottom: '16px',\n    color: '#1f2937'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  formGroup: {\n    marginBottom: '16px'\n  },\n  label: {\n    fontWeight: '600',\n    color: '#374151',\n    marginBottom: '6px',\n    display: 'block'\n  },\n  input: {\n    width: '100%',\n    padding: '8px 10px',\n    fontSize: '16px',\n    borderRadius: '4px',\n    border: '1px solid #d1d5db',\n    boxSizing: 'border-box',\n    outline: 'none'\n  },\n  button: {\n    backgroundColor: '#2563eb',\n    color: '#fff',\n    padding: '12px',\n    fontSize: '16px',\n    fontWeight: '700',\n    border: 'none',\n    borderRadius: '6px',\n    cursor: 'pointer',\n    transition: 'background-color 0.3s ease'\n  },\n  successMessage: {\n    color: '#16a34a',\n    marginTop: '16px',\n    fontWeight: '600'\n  },\n  errorMessage: {\n    color: '#dc2626',\n    marginTop: '16px',\n    fontWeight: '600'\n  }\n};\nexport default DepositForm;\nvar _c;\n$RefreshReg$(_c, \"DepositForm\");","map":{"version":3,"names":["React","useState","depositMoney","jsxDEV","_jsxDEV","DepositForm","_s","accountId","setAccountId","date","setDate","amount","setAmount","description","setDescription","recipientAccount","setRecipientAccount","message","setMessage","handleSubmit","e","preventDefault","response","parseInt","parseFloat","recipient_account","undefined","data","balance","error","_error$response","_error$response$data","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","formGroup","label","type","value","readOnly","input","onChange","target","required","placeholder","min","step","button","startsWith","successMessage","errorMessage","_c","maxWidth","margin","padding","backgroundColor","borderRadius","fontFamily","boxShadow","marginBottom","color","display","flexDirection","fontWeight","width","fontSize","border","boxSizing","outline","cursor","transition","marginTop","$RefreshReg$"],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/DepositForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { depositMoney } from '../utils/api';\r\n\r\n// function DepositForm() {\r\n//   const [accountId, setAccountId] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [amount, setAmount] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [recipientAccount, setRecipientAccount] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setMessage('');\r\n\r\n//     if (!date) {\r\n//       setMessage('Please select a date.');\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await depositMoney({\r\n//         accountId: parseInt(accountId),\r\n//         amount: parseFloat(amount),\r\n//         description,\r\n//         date, // send date if supported by backend\r\n//         recipient_account: recipientAccount ? parseInt(recipientAccount) : undefined, // optional\r\n//       });\r\n//       setMessage(`Deposit successful! New balance: ${response.data.balance}`);\r\n\r\n//       // Reset form\r\n//       setAccountId('');\r\n//       setDate('');\r\n//       setAmount('');\r\n//       setDescription('');\r\n//       setRecipientAccount('');\r\n//     } catch (error) {\r\n//       setMessage(`Deposit failed: ${error.response?.data?.message || error.message}`);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Deposit Money</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>\r\n//             Type: <br />\r\n//             <input type=\"text\" value=\"Deposit\" readOnly />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>\r\n//             Date: <br />\r\n//             <input\r\n//               type=\"date\"\r\n//               value={date}\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>\r\n//             Account ID: <br />\r\n//             <input\r\n//               type=\"number\"\r\n//               placeholder=\"Account ID\"\r\n//               value={accountId}\r\n//               onChange={(e) => setAccountId(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>\r\n//             Amount: <br />\r\n//             <input\r\n//               type=\"number\"\r\n//               min=\"0.01\"\r\n//               step=\"0.01\"\r\n//               placeholder=\"Amount\"\r\n//               value={amount}\r\n//               onChange={(e) => setAmount(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>\r\n//             Description: <br />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Description\"\r\n//               value={description}\r\n//               onChange={(e) => setDescription(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>\r\n//             Recipient Account (optional): <br />\r\n//             <input\r\n//               type=\"number\"\r\n//               placeholder=\"Recipient Account ID\"\r\n//               value={recipientAccount}\r\n//               onChange={(e) => setRecipientAccount(e.target.value)}\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <button type=\"submit\">Deposit</button>\r\n//       </form>\r\n\r\n//       {message && <p>{message}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default DepositForm;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { depositMoney } from '../utils/api';\r\n\r\nfunction DepositForm() {\r\n  const [accountId, setAccountId] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [recipientAccount, setRecipientAccount] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n\r\n    if (!date) {\r\n      setMessage('Please select a date.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await depositMoney({\r\n        accountId: parseInt(accountId),\r\n        amount: parseFloat(amount),\r\n        description,\r\n        date, // send date if supported by backend\r\n        recipient_account: recipientAccount ? parseInt(recipientAccount) : undefined, // optional\r\n      });\r\n      setMessage(`Deposit successful! New balance: ${response.data.balance}`);\r\n\r\n      // Reset form\r\n      setAccountId('');\r\n      setDate('');\r\n      setAmount('');\r\n      setDescription('');\r\n      setRecipientAccount('');\r\n    } catch (error) {\r\n      setMessage(`Deposit failed: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>Deposit Money</h2>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>\r\n            Type: <br />\r\n            <input type=\"text\" value=\"Deposit\" readOnly style={styles.input} />\r\n          </label>\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>\r\n            Date: <br />\r\n            <input\r\n              type=\"date\"\r\n              value={date}\r\n              onChange={(e) => setDate(e.target.value)}\r\n              required\r\n              style={styles.input}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>\r\n            Account ID: <br />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Account ID\"\r\n              value={accountId}\r\n              onChange={(e) => setAccountId(e.target.value)}\r\n              required\r\n              style={styles.input}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>\r\n            Amount: <br />\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              placeholder=\"Amount\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              required\r\n              style={styles.input}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>\r\n            Description: <br />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              required\r\n              style={styles.input}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>\r\n            Recipient Account (optional): <br />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Recipient Account ID\"\r\n              value={recipientAccount}\r\n              onChange={(e) => setRecipientAccount(e.target.value)}\r\n              style={styles.input}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button type=\"submit\" style={styles.button}>Deposit</button>\r\n      </form>\r\n\r\n      {message && <p style={message.startsWith('Deposit successful') ? styles.successMessage : styles.errorMessage}>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    maxWidth: '400px',\r\n    margin: '20px auto',\r\n    padding: '20px',\r\n    backgroundColor: '#f9fafb',\r\n    borderRadius: '8px',\r\n    fontFamily: 'Arial, sans-serif',\r\n    boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n  },\r\n  heading: {\r\n    marginBottom: '16px',\r\n    color: '#1f2937',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  formGroup: {\r\n    marginBottom: '16px',\r\n  },\r\n  label: {\r\n    fontWeight: '600',\r\n    color: '#374151',\r\n    marginBottom: '6px',\r\n    display: 'block',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: '8px 10px',\r\n    fontSize: '16px',\r\n    borderRadius: '4px',\r\n    border: '1px solid #d1d5db',\r\n    boxSizing: 'border-box',\r\n    outline: 'none',\r\n  },\r\n  button: {\r\n    backgroundColor: '#2563eb',\r\n    color: '#fff',\r\n    padding: '12px',\r\n    fontSize: '16px',\r\n    fontWeight: '700',\r\n    border: 'none',\r\n    borderRadius: '6px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s ease',\r\n  },\r\n  successMessage: {\r\n    color: '#16a34a',\r\n    marginTop: '16px',\r\n    fontWeight: '600',\r\n  },\r\n  errorMessage: {\r\n    color: '#dc2626',\r\n    marginTop: '16px',\r\n    fontWeight: '600',\r\n  },\r\n};\r\n\r\nexport default DepositForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}