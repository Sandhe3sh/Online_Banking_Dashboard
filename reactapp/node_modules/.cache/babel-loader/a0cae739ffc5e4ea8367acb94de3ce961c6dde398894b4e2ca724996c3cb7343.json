{"ast":null,"code":"// import React, { useState } from 'react';\n// import { createAccount } from '../utils/api';\n\n// function CreateAccountForm() {\n//   const [formData, setFormData] = useState({\n//     accountNumber: '',\n//     accountHolderName: '',\n//     balance: '',\n//     accountType: 'Savings',\n//     creationDate: new Date().toISOString().split('T')[0], // default to today\n//     recipientAccount: '', // optional field\n//   });\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await createAccount({\n//         accountNumber: formData.accountNumber,\n//         accountHolderName: formData.accountHolderName,\n//         balance: parseFloat(formData.balance),\n//         accountType: formData.accountType,\n//         creationDate: formData.creationDate,\n//         recipientAccount: formData.recipientAccount,\n//       });\n\n//       alert('Account Created! ID: ' + response.data.accountId);\n\n//       // Reset form after successful submission\n//       setFormData({\n//         accountNumber: '',\n//         accountHolderName: '',\n//         balance: '',\n//         accountType: 'Savings',\n//         creationDate: new Date().toISOString().split('T')[0],\n//         recipientAccount: '',\n//       });\n//     } catch (error) {\n//       alert('Failed to create account: ' + (error.response?.data?.message || error.message));\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label>accountNumber</label><br/>\n//         <input\n//           name=\"accountNumber\"\n//           placeholder=\"Account Number\"\n//           value={formData.accountNumber}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n\n//       <div>\n//         <label>accountHolderName</label><br/>\n//         <input\n//           name=\"accountHolderName\"\n//           placeholder=\"Account Holder Name\"\n//           value={formData.accountHolderName}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n\n//       <div>\n//         <label>balance</label><br/>\n//         <input\n//           name=\"balance\"\n//           placeholder=\"Balance\"\n//           type=\"number\"\n//           min=\"0\"\n//           step=\"0.01\"\n//           value={formData.balance}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n\n//       <div>\n//         <label>accountType</label><br/>\n//         <select\n//           name=\"accountType\"\n//           value={formData.accountType}\n//           onChange={handleChange}\n//         >\n//           <option value=\"Savings\">Savings</option>\n//           <option value=\"Current\">Current</option>\n//         </select>\n//       </div>\n\n//       <div>\n//         <label>\n//           Creation Date: <br />\n//           <input\n//             type=\"date\"\n//             name=\"creationDate\"\n//             value={formData.creationDate}\n//             onChange={handleChange}\n//             required\n//           />\n//         </label>\n//       </div>\n\n//       <div>\n// <label>recipientAccount</label><br/>\n//         <input\n//           name=\"recipientAccount\"\n//           placeholder=\"Recipient Account (optional)\"\n//           value={formData.recipientAccount}\n//           onChange={handleChange}\n//         />\n//       </div>\n\n//       <div>\n//         <button type=\"submit\">Create Account</button>\n//       </div>\n//     </form>\n//   );\n// }\n\n// export default CreateAccountForm;\n\n// import React, { useState } from 'react';\n// import { createAccount } from '../utils/api';\n\n// function CreateAccountForm() {\n//   const [formData, setFormData] = useState({\n//     accountNumber: '',\n//     accountHolderName: '',\n//     balance: '',\n//     accountType: 'Savings',\n//     creationDate: new Date().toISOString().split('T')[0], // default to today\n//     recipientAccount: '',\n//   });\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await createAccount({\n//         accountNumber: formData.accountNumber,\n//         accountHolderName: formData.accountHolderName,\n//         balance: parseFloat(formData.balance),\n//         accountType: formData.accountType,\n//         creationDate: formData.creationDate,\n//         recipientAccount: formData.recipientAccount,\n//       });\n\n//       alert('Account Created! ID: ' + response.data.accountId);\n\n//       setFormData({\n//         accountNumber: '',\n//         accountHolderName: '',\n//         balance: '',\n//         accountType: 'Savings',\n//         creationDate: new Date().toISOString().split('T')[0],\n//         recipientAccount: '',\n//       });\n//     } catch (error) {\n//       alert('Failed to create account: ' + (error.response?.data?.message || error.message));\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} style={styles.form}>\n//       <div style={styles.formGroup}>\n//         <label style={styles.label}>Account Number</label>\n//         <input\n//           name=\"accountNumber\"\n//           placeholder=\"Account Number\"\n//           value={formData.accountNumber}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//       </div>\n\n//       <div style={styles.formGroup}>\n//         <label style={styles.label}>Account Holder Name</label>\n//         <input\n//           name=\"accountHolderName\"\n//           placeholder=\"Account Holder Name\"\n//           value={formData.accountHolderName}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//       </div>\n\n//       <div style={styles.formGroup}>\n//         <label style={styles.label}>Balance</label>\n//         <input\n//           name=\"balance\"\n//           placeholder=\"Balance\"\n//           type=\"number\"\n//           min=\"0\"\n//           step=\"0.01\"\n//           value={formData.balance}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//       </div>\n\n//       <div style={styles.formGroup}>\n//         <label style={styles.label}>Account Type</label>\n//         <select\n//           name=\"accountType\"\n//           value={formData.accountType}\n//           onChange={handleChange}\n//           style={styles.select}\n//         >\n//           <option value=\"Savings\">Savings</option>\n//           <option value=\"Current\">Current</option>\n//         </select>\n//       </div>\n\n//       <div style={styles.formGroup}>\n//         <label style={styles.label}>Creation Date</label>\n//         <input\n//           type=\"date\"\n//           name=\"creationDate\"\n//           value={formData.creationDate}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//       </div>\n\n//       <div style={styles.formGroup}>\n//         <label style={styles.label}>Recipient Account (optional)</label>\n//         <input\n//           name=\"recipientAccount\"\n//           placeholder=\"Recipient Account (optional)\"\n//           value={formData.recipientAccount}\n//           onChange={handleChange}\n//           style={styles.input}\n//         />\n//       </div>\n\n//       <div style={styles.formGroup}>\n//         <button type=\"submit\" style={styles.button}>Create Account</button>\n//       </div>\n//     </form>\n//   );\n// }\n\n// const styles = {\n//   form: {\n//     maxWidth: '400px',\n//     margin: '20px auto',\n//     padding: '20px',\n//     backgroundColor: '#f3f4f6',\n//     borderRadius: '8px',\n//     fontFamily: 'Arial, sans-serif',\n//     boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n//   },\n//   formGroup: {\n//     marginBottom: '16px',\n//   },\n//   label: {\n//     display: 'block',\n//     marginBottom: '6px',\n//     fontWeight: '600',\n//     color: '#374151',\n//   },\n//   input: {\n//     width: '100%',\n//     padding: '8px 10px',\n//     fontSize: '16px',\n//     borderRadius: '4px',\n//     border: '1px solid #d1d5db',\n//     outline: 'none',\n//     boxSizing: 'border-box',\n//   },\n//   select: {\n//     width: '100%',\n//     padding: '8px 10px',\n//     fontSize: '16px',\n//     borderRadius: '4px',\n//     border: '1px solid #d1d5db',\n//     outline: 'none',\n//     boxSizing: 'border-box',\n//     backgroundColor: '#fff',\n//   },\n//   button: {\n//     width: '100%',\n//     padding: '10px 0',\n//     fontSize: '16px',\n//     fontWeight: '700',\n//     color: '#fff',\n//     backgroundColor: '#4f46e5',\n//     border: 'none',\n//     borderRadius: '6px',\n//     cursor: 'pointer',\n//     transition: 'background-color 0.3s ease',\n//   },\n// };\n\n// export default CreateAccountForm;","map":{"version":3,"names":[],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/CreateAccountForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { createAccount } from '../utils/api';\r\n\r\n// function CreateAccountForm() {\r\n//   const [formData, setFormData] = useState({\r\n//     accountNumber: '',\r\n//     accountHolderName: '',\r\n//     balance: '',\r\n//     accountType: 'Savings',\r\n//     creationDate: new Date().toISOString().split('T')[0], // default to today\r\n//     recipientAccount: '', // optional field\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const response = await createAccount({\r\n//         accountNumber: formData.accountNumber,\r\n//         accountHolderName: formData.accountHolderName,\r\n//         balance: parseFloat(formData.balance),\r\n//         accountType: formData.accountType,\r\n//         creationDate: formData.creationDate,\r\n//         recipientAccount: formData.recipientAccount,\r\n//       });\r\n\r\n//       alert('Account Created! ID: ' + response.data.accountId);\r\n\r\n//       // Reset form after successful submission\r\n//       setFormData({\r\n//         accountNumber: '',\r\n//         accountHolderName: '',\r\n//         balance: '',\r\n//         accountType: 'Savings',\r\n//         creationDate: new Date().toISOString().split('T')[0],\r\n//         recipientAccount: '',\r\n//       });\r\n//     } catch (error) {\r\n//       alert('Failed to create account: ' + (error.response?.data?.message || error.message));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <div>\r\n//         <label>accountNumber</label><br/>\r\n//         <input\r\n//           name=\"accountNumber\"\r\n//           placeholder=\"Account Number\"\r\n//           value={formData.accountNumber}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label>accountHolderName</label><br/>\r\n//         <input\r\n//           name=\"accountHolderName\"\r\n//           placeholder=\"Account Holder Name\"\r\n//           value={formData.accountHolderName}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label>balance</label><br/>\r\n//         <input\r\n//           name=\"balance\"\r\n//           placeholder=\"Balance\"\r\n//           type=\"number\"\r\n//           min=\"0\"\r\n//           step=\"0.01\"\r\n//           value={formData.balance}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label>accountType</label><br/>\r\n//         <select\r\n//           name=\"accountType\"\r\n//           value={formData.accountType}\r\n//           onChange={handleChange}\r\n//         >\r\n//           <option value=\"Savings\">Savings</option>\r\n//           <option value=\"Current\">Current</option>\r\n//         </select>\r\n//       </div>\r\n\r\n//       <div>\r\n//         <label>\r\n//           Creation Date: <br />\r\n//           <input\r\n//             type=\"date\"\r\n//             name=\"creationDate\"\r\n//             value={formData.creationDate}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </label>\r\n//       </div>\r\n\r\n//       <div>\r\n// <label>recipientAccount</label><br/>\r\n//         <input\r\n//           name=\"recipientAccount\"\r\n//           placeholder=\"Recipient Account (optional)\"\r\n//           value={formData.recipientAccount}\r\n//           onChange={handleChange}\r\n//         />\r\n//       </div>\r\n\r\n//       <div>\r\n//         <button type=\"submit\">Create Account</button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// export default CreateAccountForm;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { createAccount } from '../utils/api';\r\n\r\n// function CreateAccountForm() {\r\n//   const [formData, setFormData] = useState({\r\n//     accountNumber: '',\r\n//     accountHolderName: '',\r\n//     balance: '',\r\n//     accountType: 'Savings',\r\n//     creationDate: new Date().toISOString().split('T')[0], // default to today\r\n//     recipientAccount: '',\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const response = await createAccount({\r\n//         accountNumber: formData.accountNumber,\r\n//         accountHolderName: formData.accountHolderName,\r\n//         balance: parseFloat(formData.balance),\r\n//         accountType: formData.accountType,\r\n//         creationDate: formData.creationDate,\r\n//         recipientAccount: formData.recipientAccount,\r\n//       });\r\n\r\n//       alert('Account Created! ID: ' + response.data.accountId);\r\n\r\n//       setFormData({\r\n//         accountNumber: '',\r\n//         accountHolderName: '',\r\n//         balance: '',\r\n//         accountType: 'Savings',\r\n//         creationDate: new Date().toISOString().split('T')[0],\r\n//         recipientAccount: '',\r\n//       });\r\n//     } catch (error) {\r\n//       alert('Failed to create account: ' + (error.response?.data?.message || error.message));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit} style={styles.form}>\r\n//       <div style={styles.formGroup}>\r\n//         <label style={styles.label}>Account Number</label>\r\n//         <input\r\n//           name=\"accountNumber\"\r\n//           placeholder=\"Account Number\"\r\n//           value={formData.accountNumber}\r\n//           onChange={handleChange}\r\n//           required\r\n//           style={styles.input}\r\n//         />\r\n//       </div>\r\n\r\n//       <div style={styles.formGroup}>\r\n//         <label style={styles.label}>Account Holder Name</label>\r\n//         <input\r\n//           name=\"accountHolderName\"\r\n//           placeholder=\"Account Holder Name\"\r\n//           value={formData.accountHolderName}\r\n//           onChange={handleChange}\r\n//           required\r\n//           style={styles.input}\r\n//         />\r\n//       </div>\r\n\r\n//       <div style={styles.formGroup}>\r\n//         <label style={styles.label}>Balance</label>\r\n//         <input\r\n//           name=\"balance\"\r\n//           placeholder=\"Balance\"\r\n//           type=\"number\"\r\n//           min=\"0\"\r\n//           step=\"0.01\"\r\n//           value={formData.balance}\r\n//           onChange={handleChange}\r\n//           required\r\n//           style={styles.input}\r\n//         />\r\n//       </div>\r\n\r\n//       <div style={styles.formGroup}>\r\n//         <label style={styles.label}>Account Type</label>\r\n//         <select\r\n//           name=\"accountType\"\r\n//           value={formData.accountType}\r\n//           onChange={handleChange}\r\n//           style={styles.select}\r\n//         >\r\n//           <option value=\"Savings\">Savings</option>\r\n//           <option value=\"Current\">Current</option>\r\n//         </select>\r\n//       </div>\r\n\r\n//       <div style={styles.formGroup}>\r\n//         <label style={styles.label}>Creation Date</label>\r\n//         <input\r\n//           type=\"date\"\r\n//           name=\"creationDate\"\r\n//           value={formData.creationDate}\r\n//           onChange={handleChange}\r\n//           required\r\n//           style={styles.input}\r\n//         />\r\n//       </div>\r\n\r\n//       <div style={styles.formGroup}>\r\n//         <label style={styles.label}>Recipient Account (optional)</label>\r\n//         <input\r\n//           name=\"recipientAccount\"\r\n//           placeholder=\"Recipient Account (optional)\"\r\n//           value={formData.recipientAccount}\r\n//           onChange={handleChange}\r\n//           style={styles.input}\r\n//         />\r\n//       </div>\r\n\r\n//       <div style={styles.formGroup}>\r\n//         <button type=\"submit\" style={styles.button}>Create Account</button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// const styles = {\r\n//   form: {\r\n//     maxWidth: '400px',\r\n//     margin: '20px auto',\r\n//     padding: '20px',\r\n//     backgroundColor: '#f3f4f6',\r\n//     borderRadius: '8px',\r\n//     fontFamily: 'Arial, sans-serif',\r\n//     boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n//   },\r\n//   formGroup: {\r\n//     marginBottom: '16px',\r\n//   },\r\n//   label: {\r\n//     display: 'block',\r\n//     marginBottom: '6px',\r\n//     fontWeight: '600',\r\n//     color: '#374151',\r\n//   },\r\n//   input: {\r\n//     width: '100%',\r\n//     padding: '8px 10px',\r\n//     fontSize: '16px',\r\n//     borderRadius: '4px',\r\n//     border: '1px solid #d1d5db',\r\n//     outline: 'none',\r\n//     boxSizing: 'border-box',\r\n//   },\r\n//   select: {\r\n//     width: '100%',\r\n//     padding: '8px 10px',\r\n//     fontSize: '16px',\r\n//     borderRadius: '4px',\r\n//     border: '1px solid #d1d5db',\r\n//     outline: 'none',\r\n//     boxSizing: 'border-box',\r\n//     backgroundColor: '#fff',\r\n//   },\r\n//   button: {\r\n//     width: '100%',\r\n//     padding: '10px 0',\r\n//     fontSize: '16px',\r\n//     fontWeight: '700',\r\n//     color: '#fff',\r\n//     backgroundColor: '#4f46e5',\r\n//     border: 'none',\r\n//     borderRadius: '6px',\r\n//     cursor: 'pointer',\r\n//     transition: 'background-color 0.3s ease',\r\n//   },\r\n// };\r\n\r\n// export default CreateAccountForm;\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}