{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishnu\\\\project\\\\OnlineBankingDashboard\\\\cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb\\\\reactapp\\\\src\\\\components\\\\TransferForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// function TransferForm({ accountId }) {\n//   const [date, setDate] = useState('');\n//   const [recipientAccount, setRecipientAccount] = useState('');\n//   const [amount, setAmount] = useState('');\n//   const [description, setDescription] = useState('');\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!date || !recipientAccount || !amount) {\n//       alert('Please fill in all required fields.');\n//       return;\n//     }\n\n//     alert(`Transfer Details:\n//     Type: Transfer\n//     Date: ${date}\n//     From Account: ${accountId}\n//     Recipient Account: ${recipientAccount}\n//     Amount: $${amount}\n//     Description: ${description}`);\n\n//     // Reset form\n//     setDate('');\n//     setRecipientAccount('');\n//     setAmount('');\n//     setDescription('');\n//   };\n\n//   return (\n//     <div>\n//       <h2>Transfer Money</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>\n//             Type: <br />\n//             <input type=\"text\" value=\"Transfer\" readOnly />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label>\n//             Date: <br />\n//             <input\n//               type=\"date\"\n//               value={date}\n//               onChange={(e) => setDate(e.target.value)}\n//               required\n//             />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label>\n//             From Account ID: <br />\n//             <input type=\"text\" value={accountId} readOnly />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label>\n//             Recipient Account: <br />\n//             <input\n//               type=\"text\"\n//               value={recipientAccount}\n//               onChange={(e) => setRecipientAccount(e.target.value)}\n//               placeholder=\"Recipient Account ID\"\n//               required\n//             />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label>\n//             Amount: <br />\n//             <input\n//               type=\"number\"\n//               min=\"0.01\"\n//               step=\"0.01\"\n//               value={amount}\n//               onChange={(e) => setAmount(e.target.value)}\n//               placeholder=\"Amount\"\n//               required\n//             />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label>\n//             Description: <br />\n//             <textarea\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder=\"Optional description\"\n//             />\n//           </label>\n//         </div>\n\n//         <button type=\"submit\">Transfer</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default TransferForm;\n\n// import React, { useState, useEffect } from 'react';\n\n// function TransferForm({ accountId }) {\n//   const [fromAccountId, setFromAccountId] = useState(accountId || '');\n//   const [date, setDate] = useState('');\n//   const [recipientAccount, setRecipientAccount] = useState('');\n//   const [amount, setAmount] = useState('');\n//   const [description, setDescription] = useState('');\n\n//   // Keep fromAccountId in sync if accountId prop changes\n//   useEffect(() => {\n//     if (accountId) {\n//       setFromAccountId(accountId);\n//     }\n//   }, [accountId]);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (!date || !recipientAccount || !amount || !fromAccountId) {\n//       alert('Please fill in all required fields.');\n//       return;\n//     }\n\n//     alert(`Transfer Details:\n//     Type: Transfer\n//     Date: ${date}\n//     From Account: ${fromAccountId}\n//     Recipient Account: ${recipientAccount}\n//     Amount: $${amount}\n//     Description: ${description}`);\n\n//     // Reset form except fromAccountId (optional)\n//     setDate('');\n//     setRecipientAccount('');\n//     setAmount('');\n//     setDescription('');\n//   };\n\n//   const inputStyle = {\n//     width: '100%',\n//     padding: '8px',\n//     marginTop: '4px',\n//     marginBottom: '12px',\n//     borderRadius: '4px',\n//     border: '1px solid #ccc',\n//     fontSize: '14px',\n//   };\n\n//   const labelStyle = {\n//     fontWeight: '600',\n//     color: '#333',\n//   };\n\n//   const buttonStyle = {\n//     padding: '10px 20px',\n//     backgroundColor: '#007bff',\n//     border: 'none',\n//     borderRadius: '5px',\n//     color: 'white',\n//     cursor: 'pointer',\n//     fontSize: '16px',\n//   };\n\n//   const formStyle = {\n//     maxWidth: '400px',\n//     margin: '20px auto',\n//     padding: '15px',\n//     border: '1px solid #ddd',\n//     borderRadius: '8px',\n//     backgroundColor: '#fafafa',\n//     boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n//     fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n//   };\n\n//   return (\n//     <div style={formStyle}>\n//       <h2 style={{ color: '#222', marginBottom: '20px' }}>Transfer Money</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label style={labelStyle}>\n//             Type:\n//             <br />\n//             <input type=\"text\" value=\"Transfer\" readOnly style={inputStyle} />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label style={labelStyle}>\n//             Date:\n//             <br />\n//             <input\n//               type=\"date\"\n//               value={date}\n//               onChange={(e) => setDate(e.target.value)}\n//               required\n//               style={inputStyle}\n//             />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label style={labelStyle}>\n//             From Account ID:\n//             <br />\n//             <input\n//               type=\"text\"\n//               value={fromAccountId}\n//               onChange={(e) => setFromAccountId(e.target.value)}\n//               placeholder=\"From Account ID\"\n//               required\n//               style={inputStyle}\n//             />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label style={labelStyle}>\n//             Recipient Account:\n//             <br />\n//             <input\n//               type=\"text\"\n//               value={recipientAccount}\n//               onChange={(e) => setRecipientAccount(e.target.value)}\n//               placeholder=\"Recipient Account ID\"\n//               required\n//               style={inputStyle}\n//             />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label style={labelStyle}>\n//             Amount:\n//             <br />\n//             <input\n//               type=\"number\"\n//               min=\"0.01\"\n//               step=\"0.01\"\n//               value={amount}\n//               onChange={(e) => setAmount(e.target.value)}\n//               placeholder=\"Amount\"\n//               required\n//               style={inputStyle}\n//             />\n//           </label>\n//         </div>\n\n//         <div>\n//           <label style={labelStyle}>\n//             Description:\n//             <br />\n//             <textarea\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               placeholder=\"Optional description\"\n//               style={{ ...inputStyle, height: '80px', resize: 'vertical' }}\n//             />\n//           </label>\n//         </div>\n\n//         <button type=\"submit\" style={buttonStyle}>\n//           Transfer\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default TransferForm;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransferForm({\n  accountId\n}) {\n  _s();\n  const [fromAccountId, setFromAccountId] = useState(accountId || '');\n  const [date, setDate] = useState('');\n  const [recipientAccount, setRecipientAccount] = useState('');\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n\n  // Keep fromAccountId in sync if accountId prop changes\n  useEffect(() => {\n    if (accountId) {\n      setFromAccountId(accountId);\n    }\n  }, [accountId]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!date || !recipientAccount || !amount || !fromAccountId) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n    const amountValue = parseFloat(amount);\n    if (isNaN(amountValue) || amountValue <= 0) {\n      alert('Please enter a valid amount greater than 0.');\n      return;\n    }\n    alert(`Transfer Details:\nType: Transfer\nDate: ${date}\nFrom Account: ${fromAccountId}\nRecipient Account: ${recipientAccount}\nAmount: $${amountValue.toFixed(2)}\nDescription: ${description || 'N/A'}`);\n\n    // Reset form except fromAccountId (optional)\n    setDate('');\n    setRecipientAccount('');\n    setAmount('');\n    setDescription('');\n  };\n  const inputStyle = {\n    width: '100%',\n    padding: '8px',\n    marginTop: '4px',\n    marginBottom: '12px',\n    borderRadius: '4px',\n    border: '1px solid #ccc',\n    fontSize: '14px'\n  };\n  const labelStyle = {\n    fontWeight: '600',\n    color: '#333'\n  };\n  const buttonStyle = {\n    padding: '10px 20px',\n    backgroundColor: '#007bff',\n    border: 'none',\n    borderRadius: '5px',\n    color: 'white',\n    cursor: 'pointer',\n    fontSize: '16px'\n  };\n  const formStyle = {\n    maxWidth: '400px',\n    margin: '20px auto',\n    padding: '15px',\n    border: '1px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: '#fafafa',\n    boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: formStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#222',\n        marginBottom: '20px'\n      },\n      children: \"Transfer Money\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"type\",\n          style: labelStyle,\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"type\",\n          type: \"text\",\n          value: \"Transfer\",\n          readOnly: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          style: labelStyle,\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fromAccountId\",\n          style: labelStyle,\n          children: \"From Account ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fromAccountId\",\n          type: \"text\",\n          value: fromAccountId,\n          onChange: e => setFromAccountId(e.target.value),\n          placeholder: \"From Account ID\",\n          required: true,\n          style: inputStyle,\n          readOnly: !!accountId // prevent editing if accountId prop exists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipientAccount\",\n          style: labelStyle,\n          children: \"Recipient Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"recipientAccount\",\n          type: \"text\",\n          value: recipientAccount,\n          onChange: e => setRecipientAccount(e.target.value),\n          placeholder: \"Recipient Account ID\",\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          style: labelStyle,\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"amount\",\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          placeholder: \"Amount\",\n          required: true,\n          style: inputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          style: labelStyle,\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Optional description\",\n          style: {\n            ...inputStyle,\n            height: '80px',\n            resize: 'vertical'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: buttonStyle,\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n}\n_s(TransferForm, \"gruSzJ3DzONffbZKjp4AWV1G+x8=\");\n_c = TransferForm;\nexport default TransferForm;\nvar _c;\n$RefreshReg$(_c, \"TransferForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransferForm","accountId","_s","fromAccountId","setFromAccountId","date","setDate","recipientAccount","setRecipientAccount","amount","setAmount","description","setDescription","handleSubmit","e","preventDefault","alert","amountValue","parseFloat","isNaN","toFixed","inputStyle","width","padding","marginTop","marginBottom","borderRadius","border","fontSize","labelStyle","fontWeight","color","buttonStyle","backgroundColor","cursor","formStyle","maxWidth","margin","boxShadow","fontFamily","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","readOnly","onChange","target","required","placeholder","min","step","height","resize","_c","$RefreshReg$"],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/TransferForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// function TransferForm({ accountId }) {\r\n//   const [date, setDate] = useState('');\r\n//   const [recipientAccount, setRecipientAccount] = useState('');\r\n//   const [amount, setAmount] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!date || !recipientAccount || !amount) {\r\n//       alert('Please fill in all required fields.');\r\n//       return;\r\n//     }\r\n\r\n//     alert(`Transfer Details:\r\n//     Type: Transfer\r\n//     Date: ${date}\r\n//     From Account: ${accountId}\r\n//     Recipient Account: ${recipientAccount}\r\n//     Amount: $${amount}\r\n//     Description: ${description}`);\r\n\r\n//     // Reset form\r\n//     setDate('');\r\n//     setRecipientAccount('');\r\n//     setAmount('');\r\n//     setDescription('');\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Transfer Money</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>\r\n//             Type: <br />\r\n//             <input type=\"text\" value=\"Transfer\" readOnly />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>\r\n//             Date: <br />\r\n//             <input\r\n//               type=\"date\"\r\n//               value={date}\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>\r\n//             From Account ID: <br />\r\n//             <input type=\"text\" value={accountId} readOnly />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>\r\n//             Recipient Account: <br />\r\n//             <input\r\n//               type=\"text\"\r\n//               value={recipientAccount}\r\n//               onChange={(e) => setRecipientAccount(e.target.value)}\r\n//               placeholder=\"Recipient Account ID\"\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>\r\n//             Amount: <br />\r\n//             <input\r\n//               type=\"number\"\r\n//               min=\"0.01\"\r\n//               step=\"0.01\"\r\n//               value={amount}\r\n//               onChange={(e) => setAmount(e.target.value)}\r\n//               placeholder=\"Amount\"\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label>\r\n//             Description: <br />\r\n//             <textarea\r\n//               value={description}\r\n//               onChange={(e) => setDescription(e.target.value)}\r\n//               placeholder=\"Optional description\"\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <button type=\"submit\">Transfer</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TransferForm;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// function TransferForm({ accountId }) {\r\n//   const [fromAccountId, setFromAccountId] = useState(accountId || '');\r\n//   const [date, setDate] = useState('');\r\n//   const [recipientAccount, setRecipientAccount] = useState('');\r\n//   const [amount, setAmount] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n\r\n//   // Keep fromAccountId in sync if accountId prop changes\r\n//   useEffect(() => {\r\n//     if (accountId) {\r\n//       setFromAccountId(accountId);\r\n//     }\r\n//   }, [accountId]);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!date || !recipientAccount || !amount || !fromAccountId) {\r\n//       alert('Please fill in all required fields.');\r\n//       return;\r\n//     }\r\n\r\n//     alert(`Transfer Details:\r\n//     Type: Transfer\r\n//     Date: ${date}\r\n//     From Account: ${fromAccountId}\r\n//     Recipient Account: ${recipientAccount}\r\n//     Amount: $${amount}\r\n//     Description: ${description}`);\r\n\r\n//     // Reset form except fromAccountId (optional)\r\n//     setDate('');\r\n//     setRecipientAccount('');\r\n//     setAmount('');\r\n//     setDescription('');\r\n//   };\r\n\r\n//   const inputStyle = {\r\n//     width: '100%',\r\n//     padding: '8px',\r\n//     marginTop: '4px',\r\n//     marginBottom: '12px',\r\n//     borderRadius: '4px',\r\n//     border: '1px solid #ccc',\r\n//     fontSize: '14px',\r\n//   };\r\n\r\n//   const labelStyle = {\r\n//     fontWeight: '600',\r\n//     color: '#333',\r\n//   };\r\n\r\n//   const buttonStyle = {\r\n//     padding: '10px 20px',\r\n//     backgroundColor: '#007bff',\r\n//     border: 'none',\r\n//     borderRadius: '5px',\r\n//     color: 'white',\r\n//     cursor: 'pointer',\r\n//     fontSize: '16px',\r\n//   };\r\n\r\n//   const formStyle = {\r\n//     maxWidth: '400px',\r\n//     margin: '20px auto',\r\n//     padding: '15px',\r\n//     border: '1px solid #ddd',\r\n//     borderRadius: '8px',\r\n//     backgroundColor: '#fafafa',\r\n//     boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\r\n//     fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n//   };\r\n\r\n//   return (\r\n//     <div style={formStyle}>\r\n//       <h2 style={{ color: '#222', marginBottom: '20px' }}>Transfer Money</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label style={labelStyle}>\r\n//             Type:\r\n//             <br />\r\n//             <input type=\"text\" value=\"Transfer\" readOnly style={inputStyle} />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label style={labelStyle}>\r\n//             Date:\r\n//             <br />\r\n//             <input\r\n//               type=\"date\"\r\n//               value={date}\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//               required\r\n//               style={inputStyle}\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label style={labelStyle}>\r\n//             From Account ID:\r\n//             <br />\r\n//             <input\r\n//               type=\"text\"\r\n//               value={fromAccountId}\r\n//               onChange={(e) => setFromAccountId(e.target.value)}\r\n//               placeholder=\"From Account ID\"\r\n//               required\r\n//               style={inputStyle}\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label style={labelStyle}>\r\n//             Recipient Account:\r\n//             <br />\r\n//             <input\r\n//               type=\"text\"\r\n//               value={recipientAccount}\r\n//               onChange={(e) => setRecipientAccount(e.target.value)}\r\n//               placeholder=\"Recipient Account ID\"\r\n//               required\r\n//               style={inputStyle}\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label style={labelStyle}>\r\n//             Amount:\r\n//             <br />\r\n//             <input\r\n//               type=\"number\"\r\n//               min=\"0.01\"\r\n//               step=\"0.01\"\r\n//               value={amount}\r\n//               onChange={(e) => setAmount(e.target.value)}\r\n//               placeholder=\"Amount\"\r\n//               required\r\n//               style={inputStyle}\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <div>\r\n//           <label style={labelStyle}>\r\n//             Description:\r\n//             <br />\r\n//             <textarea\r\n//               value={description}\r\n//               onChange={(e) => setDescription(e.target.value)}\r\n//               placeholder=\"Optional description\"\r\n//               style={{ ...inputStyle, height: '80px', resize: 'vertical' }}\r\n//             />\r\n//           </label>\r\n//         </div>\r\n\r\n//         <button type=\"submit\" style={buttonStyle}>\r\n//           Transfer\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TransferForm;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction TransferForm({ accountId }) {\r\n  const [fromAccountId, setFromAccountId] = useState(accountId || '');\r\n  const [date, setDate] = useState('');\r\n  const [recipientAccount, setRecipientAccount] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // Keep fromAccountId in sync if accountId prop changes\r\n  useEffect(() => {\r\n    if (accountId) {\r\n      setFromAccountId(accountId);\r\n    }\r\n  }, [accountId]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!date || !recipientAccount || !amount || !fromAccountId) {\r\n      alert('Please fill in all required fields.');\r\n      return;\r\n    }\r\n\r\n    const amountValue = parseFloat(amount);\r\n    if (isNaN(amountValue) || amountValue <= 0) {\r\n      alert('Please enter a valid amount greater than 0.');\r\n      return;\r\n    }\r\n\r\n    alert(`Transfer Details:\r\nType: Transfer\r\nDate: ${date}\r\nFrom Account: ${fromAccountId}\r\nRecipient Account: ${recipientAccount}\r\nAmount: $${amountValue.toFixed(2)}\r\nDescription: ${description || 'N/A'}`);\r\n\r\n    // Reset form except fromAccountId (optional)\r\n    setDate('');\r\n    setRecipientAccount('');\r\n    setAmount('');\r\n    setDescription('');\r\n  };\r\n\r\n  const inputStyle = {\r\n    width: '100%',\r\n    padding: '8px',\r\n    marginTop: '4px',\r\n    marginBottom: '12px',\r\n    borderRadius: '4px',\r\n    border: '1px solid #ccc',\r\n    fontSize: '14px',\r\n  };\r\n\r\n  const labelStyle = {\r\n    fontWeight: '600',\r\n    color: '#333',\r\n  };\r\n\r\n  const buttonStyle = {\r\n    padding: '10px 20px',\r\n    backgroundColor: '#007bff',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    color: 'white',\r\n    cursor: 'pointer',\r\n    fontSize: '16px',\r\n  };\r\n\r\n  const formStyle = {\r\n    maxWidth: '400px',\r\n    margin: '20px auto',\r\n    padding: '15px',\r\n    border: '1px solid #ddd',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#fafafa',\r\n    boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\r\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n  };\r\n\r\n  return (\r\n    <div style={formStyle}>\r\n      <h2 style={{ color: '#222', marginBottom: '20px' }}>Transfer Money</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"type\" style={labelStyle}>\r\n            Type:\r\n          </label>\r\n          <br />\r\n          <input id=\"type\" type=\"text\" value=\"Transfer\" readOnly style={inputStyle} />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"date\" style={labelStyle}>\r\n            Date:\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"date\"\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            required\r\n            style={inputStyle}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"fromAccountId\" style={labelStyle}>\r\n            From Account ID:\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"fromAccountId\"\r\n            type=\"text\"\r\n            value={fromAccountId}\r\n            onChange={(e) => setFromAccountId(e.target.value)}\r\n            placeholder=\"From Account ID\"\r\n            required\r\n            style={inputStyle}\r\n            readOnly={!!accountId} // prevent editing if accountId prop exists\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"recipientAccount\" style={labelStyle}>\r\n            Recipient Account:\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"recipientAccount\"\r\n            type=\"text\"\r\n            value={recipientAccount}\r\n            onChange={(e) => setRecipientAccount(e.target.value)}\r\n            placeholder=\"Recipient Account ID\"\r\n            required\r\n            style={inputStyle}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"amount\" style={labelStyle}>\r\n            Amount:\r\n          </label>\r\n          <br />\r\n          <input\r\n            id=\"amount\"\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Amount\"\r\n            required\r\n            style={inputStyle}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"description\" style={labelStyle}>\r\n            Description:\r\n          </label>\r\n          <br />\r\n          <textarea\r\n            id=\"description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            placeholder=\"Optional description\"\r\n            style={{ ...inputStyle, height: '80px', resize: 'vertical' }}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" style={buttonStyle}>\r\n          Transfer\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransferForm;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}