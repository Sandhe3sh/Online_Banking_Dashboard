{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishnu\\\\project\\\\OnlineBankingDashboard\\\\cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb\\\\reactapp\\\\src\\\\components\\\\WithdrawForm.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { withdrawMoney } from '../utils/api';\n\n// // function WithdrawForm() {\n// //   const [accountId, setAccountId] = useState('');\n// //   const [amount, setAmount] = useState('');\n// //   const [description, setDescription] = useState('');\n// //   const [message, setMessage] = useState('');\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setMessage('');\n// //     try {\n// //       const response = await withdrawMoney({\n// //         accountId: parseInt(accountId),\n// //         amount: parseFloat(amount),\n// //         description,\n// //       });\n// //       setMessage(`Withdrawal successful! New balance: ${response.data.balance}`);\n// //     } catch (error) {\n// //       setMessage(`Withdrawal failed: ${error.response?.data?.message || error.message}`);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Withdraw Money</h2>\n// //       <form onSubmit={handleSubmit}>\n// //         <input\n// //           type=\"number\"\n// //           placeholder=\"Account ID\"\n// //           value={accountId}\n// //           onChange={(e) => setAccountId(e.target.value)}\n// //           required\n// //         />\n// //         <input\n// //           type=\"number\"\n// //           placeholder=\"Amount\"\n// //           value={amount}\n// //           onChange={(e) => setAmount(e.target.value)}\n// //           required\n// //         />\n// //         <input\n// //           type=\"text\"\n// //           placeholder=\"Description\"\n// //           value={description}\n// //           onChange={(e) => setDescription(e.target.value)}\n// //           required\n// //         />\n// //         <button type=\"submit\">Withdraw</button>\n// //       </form>\n// //       {message && <p>{message}</p>}\n// //     </div>\n// //   );\n// // }\n\n// // export default WithdrawForm;\n\n// import React, { useState } from 'react';\n// import { withdrawMoney } from '../utils/api';\n\n// function WithdrawForm() {\n//   const [accountId, setAccountId] = useState('');\n//   const [date, setDate] = useState('');\n//   const [amount, setAmount] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setMessage('');\n\n//     if (!date) {\n//       setMessage('Please select a date.');\n//       return;\n//     }\n\n//     try {\n//       const response = await withdrawMoney({\n//         accountId: parseInt(accountId),\n//         amount: parseFloat(amount),\n//         description,\n//         date, // pass date if your API supports it\n//       });\n//       setMessage(`Withdrawal successful! New balance: ${response.data.balance}`);\n//       // Reset form fields if needed\n//       setAccountId('');\n//       setDate('');\n//       setAmount('');\n//       setDescription('');\n//     } catch (error) {\n//       setMessage(`Withdrawal failed: ${error.response?.data?.message || error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Withdraw Money</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>\n//             Type: <br />\n//             <input type=\"text\" value=\"Withdraw\" readOnly />\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             Date: <br />\n//             <input\n//               type=\"date\"\n//               value={date}\n//               onChange={(e) => setDate(e.target.value)}\n//               required\n//             />\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             Account ID: <br />\n//             <input\n//               type=\"number\"\n//               placeholder=\"Account ID\"\n//               value={accountId}\n//               onChange={(e) => setAccountId(e.target.value)}\n//               required\n//             />\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             Amount: <br />\n//             <input\n//               type=\"number\"\n//               placeholder=\"Amount\"\n//               value={amount}\n//               onChange={(e) => setAmount(e.target.value)}\n//               required\n//               min=\"0.01\"\n//               step=\"0.01\"\n//             />\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             Description: <br />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Description\"\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               required\n//             />\n//           </label>\n//         </div>\n//         <button type=\"submit\">Withdraw</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default WithdrawForm;\n\nimport React, { useState } from 'react';\nimport { withdrawMoney } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WithdrawForm() {\n  _s();\n  const [accountId, setAccountId] = useState('');\n  const [date, setDate] = useState('');\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n  const [message, setMessage] = useState('');\n  const styles = {\n    form: {\n      maxWidth: '400px',\n      margin: '20px auto',\n      padding: '20px',\n      border: '1px solid #ddd',\n      borderRadius: '8px',\n      backgroundColor: '#fafafa',\n      boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n      fontFamily: 'Arial, sans-serif'\n    },\n    formGroup: {\n      marginBottom: '15px'\n    },\n    label: {\n      fontWeight: '600',\n      color: '#333',\n      display: 'block',\n      marginBottom: '5px'\n    },\n    input: {\n      width: '100%',\n      padding: '8px 10px',\n      border: '1px solid #ccc',\n      borderRadius: '5px',\n      fontSize: '14px',\n      boxSizing: 'border-box'\n    },\n    inputFocus: {\n      borderColor: '#007bff',\n      outline: 'none'\n    },\n    inputReadonly: {\n      backgroundColor: '#e9ecef',\n      cursor: 'not-allowed'\n    },\n    button: {\n      backgroundColor: '#007bff',\n      border: 'none',\n      padding: '10px 18px',\n      color: 'white',\n      fontWeight: '600',\n      fontSize: '16px',\n      borderRadius: '5px',\n      cursor: 'pointer',\n      width: '100%'\n    },\n    buttonHover: {\n      backgroundColor: '#0056b3'\n    },\n    message: {\n      maxWidth: '400px',\n      margin: '10px auto 0',\n      fontWeight: '600',\n      color: '#333'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Withdraw Money\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async e => {\n        e.preventDefault();\n        setMessage('');\n        if (!date) {\n          setMessage('Please select a date.');\n          return;\n        }\n        try {\n          const response = await withdrawMoney({\n            accountId: parseInt(accountId),\n            amount: parseFloat(amount),\n            description,\n            date\n          });\n          setMessage(`Withdrawal successful! New balance: ${response.data.balance}`);\n          setAccountId('');\n          setDate('');\n          setAmount('');\n          setDescription('');\n        } catch (error) {\n          var _error$response, _error$response$data;\n          setMessage(`Withdrawal failed: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n        }\n      },\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: \"Withdraw\",\n          readOnly: true,\n          style: {\n            ...styles.input,\n            ...styles.inputReadonly\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Account ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Account ID\",\n          value: accountId,\n          onChange: e => setAccountId(e.target.value),\n          required: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Amount\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true,\n          min: \"0.01\",\n          step: \"0.01\",\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.message,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_s(WithdrawForm, \"QsLq72ZQYomPSyLfnEkZwqLzbIo=\");\n_c = WithdrawForm;\nexport default WithdrawForm;\nvar _c;\n$RefreshReg$(_c, \"WithdrawForm\");","map":{"version":3,"names":["React","useState","withdrawMoney","jsxDEV","_jsxDEV","WithdrawForm","_s","accountId","setAccountId","date","setDate","amount","setAmount","description","setDescription","message","setMessage","styles","form","maxWidth","margin","padding","border","borderRadius","backgroundColor","boxShadow","fontFamily","formGroup","marginBottom","label","fontWeight","color","display","input","width","fontSize","boxSizing","inputFocus","borderColor","outline","inputReadonly","cursor","button","buttonHover","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","response","parseInt","parseFloat","data","balance","error","_error$response","_error$response$data","type","value","readOnly","onChange","target","required","placeholder","min","step","_c","$RefreshReg$"],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/WithdrawForm.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import { withdrawMoney } from '../utils/api';\r\n\r\n// // function WithdrawForm() {\r\n// //   const [accountId, setAccountId] = useState('');\r\n// //   const [amount, setAmount] = useState('');\r\n// //   const [description, setDescription] = useState('');\r\n// //   const [message, setMessage] = useState('');\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setMessage('');\r\n// //     try {\r\n// //       const response = await withdrawMoney({\r\n// //         accountId: parseInt(accountId),\r\n// //         amount: parseFloat(amount),\r\n// //         description,\r\n// //       });\r\n// //       setMessage(`Withdrawal successful! New balance: ${response.data.balance}`);\r\n// //     } catch (error) {\r\n// //       setMessage(`Withdrawal failed: ${error.response?.data?.message || error.message}`);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Withdraw Money</h2>\r\n// //       <form onSubmit={handleSubmit}>\r\n// //         <input\r\n// //           type=\"number\"\r\n// //           placeholder=\"Account ID\"\r\n// //           value={accountId}\r\n// //           onChange={(e) => setAccountId(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <input\r\n// //           type=\"number\"\r\n// //           placeholder=\"Amount\"\r\n// //           value={amount}\r\n// //           onChange={(e) => setAmount(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <input\r\n// //           type=\"text\"\r\n// //           placeholder=\"Description\"\r\n// //           value={description}\r\n// //           onChange={(e) => setDescription(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <button type=\"submit\">Withdraw</button>\r\n// //       </form>\r\n// //       {message && <p>{message}</p>}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default WithdrawForm;\r\n\r\n// import React, { useState } from 'react';\r\n// import { withdrawMoney } from '../utils/api';\r\n\r\n// function WithdrawForm() {\r\n//   const [accountId, setAccountId] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [amount, setAmount] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setMessage('');\r\n\r\n//     if (!date) {\r\n//       setMessage('Please select a date.');\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await withdrawMoney({\r\n//         accountId: parseInt(accountId),\r\n//         amount: parseFloat(amount),\r\n//         description,\r\n//         date, // pass date if your API supports it\r\n//       });\r\n//       setMessage(`Withdrawal successful! New balance: ${response.data.balance}`);\r\n//       // Reset form fields if needed\r\n//       setAccountId('');\r\n//       setDate('');\r\n//       setAmount('');\r\n//       setDescription('');\r\n//     } catch (error) {\r\n//       setMessage(`Withdrawal failed: ${error.response?.data?.message || error.message}`);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Withdraw Money</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>\r\n//             Type: <br />\r\n//             <input type=\"text\" value=\"Withdraw\" readOnly />\r\n//           </label>\r\n//         </div>\r\n//         <div>\r\n//           <label>\r\n//             Date: <br />\r\n//             <input\r\n//               type=\"date\"\r\n//               value={date}\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n//         <div>\r\n//           <label>\r\n//             Account ID: <br />\r\n//             <input\r\n//               type=\"number\"\r\n//               placeholder=\"Account ID\"\r\n//               value={accountId}\r\n//               onChange={(e) => setAccountId(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n//         <div>\r\n//           <label>\r\n//             Amount: <br />\r\n//             <input\r\n//               type=\"number\"\r\n//               placeholder=\"Amount\"\r\n//               value={amount}\r\n//               onChange={(e) => setAmount(e.target.value)}\r\n//               required\r\n//               min=\"0.01\"\r\n//               step=\"0.01\"\r\n//             />\r\n//           </label>\r\n//         </div>\r\n//         <div>\r\n//           <label>\r\n//             Description: <br />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Description\"\r\n//               value={description}\r\n//               onChange={(e) => setDescription(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n//         <button type=\"submit\">Withdraw</button>\r\n//       </form>\r\n//       {message && <p>{message}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default WithdrawForm;\r\n\r\nimport React, { useState } from 'react';\r\nimport { withdrawMoney } from '../utils/api';\r\n\r\nfunction WithdrawForm() {\r\n  const [accountId, setAccountId] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const styles = {\r\n    form: {\r\n      maxWidth: '400px',\r\n      margin: '20px auto',\r\n      padding: '20px',\r\n      border: '1px solid #ddd',\r\n      borderRadius: '8px',\r\n      backgroundColor: '#fafafa',\r\n      boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n      fontFamily: 'Arial, sans-serif',\r\n    },\r\n    formGroup: {\r\n      marginBottom: '15px',\r\n    },\r\n    label: {\r\n      fontWeight: '600',\r\n      color: '#333',\r\n      display: 'block',\r\n      marginBottom: '5px',\r\n    },\r\n    input: {\r\n      width: '100%',\r\n      padding: '8px 10px',\r\n      border: '1px solid #ccc',\r\n      borderRadius: '5px',\r\n      fontSize: '14px',\r\n      boxSizing: 'border-box',\r\n    },\r\n    inputFocus: {\r\n      borderColor: '#007bff',\r\n      outline: 'none',\r\n    },\r\n    inputReadonly: {\r\n      backgroundColor: '#e9ecef',\r\n      cursor: 'not-allowed',\r\n    },\r\n    button: {\r\n      backgroundColor: '#007bff',\r\n      border: 'none',\r\n      padding: '10px 18px',\r\n      color: 'white',\r\n      fontWeight: '600',\r\n      fontSize: '16px',\r\n      borderRadius: '5px',\r\n      cursor: 'pointer',\r\n      width: '100%',\r\n    },\r\n    buttonHover: {\r\n      backgroundColor: '#0056b3',\r\n    },\r\n    message: {\r\n      maxWidth: '400px',\r\n      margin: '10px auto 0',\r\n      fontWeight: '600',\r\n      color: '#333',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{ textAlign: 'center' }}>Withdraw Money</h2>\r\n      <form\r\n        onSubmit={async (e) => {\r\n          e.preventDefault();\r\n          setMessage('');\r\n          if (!date) {\r\n            setMessage('Please select a date.');\r\n            return;\r\n          }\r\n          try {\r\n            const response = await withdrawMoney({\r\n              accountId: parseInt(accountId),\r\n              amount: parseFloat(amount),\r\n              description,\r\n              date,\r\n            });\r\n            setMessage(`Withdrawal successful! New balance: ${response.data.balance}`);\r\n            setAccountId('');\r\n            setDate('');\r\n            setAmount('');\r\n            setDescription('');\r\n          } catch (error) {\r\n            setMessage(`Withdrawal failed: ${error.response?.data?.message || error.message}`);\r\n          }\r\n        }}\r\n        style={styles.form}\r\n      >\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>Type:</label>\r\n          <input\r\n            type=\"text\"\r\n            value=\"Withdraw\"\r\n            readOnly\r\n            style={{ ...styles.input, ...styles.inputReadonly }}\r\n          />\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            required\r\n            style={styles.input}\r\n          />\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>Account ID:</label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Account ID\"\r\n            value={accountId}\r\n            onChange={(e) => setAccountId(e.target.value)}\r\n            required\r\n            style={styles.input}\r\n          />\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>Amount:</label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Amount\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            required\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            style={styles.input}\r\n          />\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>Description:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            required\r\n            style={styles.input}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" style={styles.button}>\r\n          Withdraw\r\n        </button>\r\n      </form>\r\n\r\n      {message && <p style={styles.message}>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WithdrawForm;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,Q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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}