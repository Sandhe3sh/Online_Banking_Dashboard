{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n\n// function AdminDashboard() {\n//   const [selectedItem, setSelectedItem] = useState(null);\n//   const [weatherData, setWeatherData] = useState({\n//     temperature: '24¬∞C',\n//     condition: 'Sunny',\n//     humidity: '65%',\n//     windSpeed: '12 km/h'\n//   });\n\n//   const [alerts] = useState([\n//     { id: 1, type: 'warning', message: 'Solar panel efficiency decreased by 5%', time: '2 hours ago' },\n//     { id: 2, type: 'info', message: 'System maintenance scheduled for tomorrow', time: '4 hours ago' },\n//     { id: 3, type: 'success', message: 'Energy savings target achieved', time: '1 day ago' }\n//   ]);\n\n//   const [systemItems] = useState([\n//     {\n//       id: 'solar',\n//       name: 'Solar Panels',\n//       icon: '‚òÄÔ∏è',\n//       status: 'Active',\n//       details: {\n//         efficiency: '92%',\n//         powerOutput: '4.2 kW',\n//         dailyGeneration: '28.5 kWh',\n//         monthlyGeneration: '850 kWh',\n//         carbonSaved: '425 kg CO2',\n//         panels: [\n//           { id: 1, location: 'Roof Section A', output: '1.2 kW', efficiency: '94%' },\n//           { id: 2, location: 'Roof Section B', output: '1.5 kW', efficiency: '91%' },\n//           { id: 3, location: 'Roof Section C', output: '1.5 kW', efficiency: '92%' }\n//         ]\n//       }\n//     },\n//     {\n//       id: 'battery',\n//       name: 'Battery Storage',\n//       icon: 'üîã',\n//       status: 'Charging',\n//       details: {\n//         capacity: '85%',\n//         voltage: '48.2V',\n//         current: '12.5A',\n//         temperature: '32¬∞C',\n//         cycleCount: '1,247',\n//         estimatedLife: '8.2 years remaining'\n//       }\n//     },\n//     {\n//       id: 'inverter',\n//       name: 'Power Inverter',\n//       icon: '‚ö°',\n//       status: 'Online',\n//       details: {\n//         efficiency: '96.8%',\n//         inputVoltage: '48V DC',\n//         outputVoltage: '230V AC',\n//         frequency: '50 Hz',\n//         temperature: '45¬∞C',\n//         totalHours: '12,450 hrs'\n//       }\n//     }\n//   ]);\n\n//   const getAlertIcon = (type) => {\n//     switch(type) {\n//       case 'warning': return '‚ö†Ô∏è';\n//       case 'info': return '‚ÑπÔ∏è';\n//       case 'success': return '‚úÖ';\n//       default: return '‚ÑπÔ∏è';\n//     }\n//   };\n\n//   const getAlertColor = (type) => {\n//     switch(type) {\n//       case 'warning': return '#f59e0b';\n//       case 'info': return '#3b82f6';\n//       case 'success': return '#10b981';\n//       default: return '#6b7280';\n//     }\n//   };\n\n//   const renderHomeView = () => (\n//     <div style={styles.homeContainer}>\n//       {/* Weather Section */}\n//       <div style={styles.weatherCard}>\n//         <div style={styles.weatherHeader}>\n//           <h2 style={styles.sectionTitle}>\n//             <span style={styles.weatherIcon}>üå§Ô∏è</span>\n//             Weather Conditions\n//           </h2>\n//         </div>\n//         <div style={styles.weatherContent}>\n//           <div style={styles.weatherMain}>\n//             <div style={styles.temperature}>{weatherData.temperature}</div>\n//             <div style={styles.condition}>{weatherData.condition}</div>\n//           </div>\n//           <div style={styles.weatherDetails}>\n//             <div style={styles.weatherItem}>\n//               <span style={styles.weatherLabel}>Humidity</span>\n//               <span style={styles.weatherValue}>{weatherData.humidity}</span>\n//             </div>\n//             <div style={styles.weatherItem}>\n//               <span style={styles.weatherLabel}>Wind Speed</span>\n//               <span style={styles.weatherValue}>{weatherData.windSpeed}</span>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Alerts Section */}\n//       <div style={styles.alertsCard}>\n//         <h2 style={styles.sectionTitle}>\n//           <span style={styles.alertIcon}>üîî</span>\n//           System Alerts\n//         </h2>\n//         <div style={styles.alertsList}>\n//           {alerts.map(alert => (\n//             <div key={alert.id} style={styles.alertItem}>\n//               <div style={styles.alertContent}>\n//                 <span style={{...styles.alertTypeIcon, color: getAlertColor(alert.type)}}>\n//                   {getAlertIcon(alert.type)}\n//                 </span>\n//                 <div style={styles.alertText}>\n//                   <div style={styles.alertMessage}>{alert.message}</div>\n//                   <div style={styles.alertTime}>{alert.time}</div>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n\n//       {/* System Items Grid */}\n//       <div style={styles.systemGrid}>\n//         <h2 style={styles.sectionTitle}>\n//           <span style={styles.systemIcon}>‚öôÔ∏è</span>\n//           System Components\n//         </h2>\n//         <div style={styles.itemsGrid}>\n//           {systemItems.map(item => (\n//             <div\n//               key={item.id}\n//               style={styles.systemItem}\n//               onClick={() => setSelectedItem(item)}\n//               onMouseEnter={(e) => {\n//                 e.currentTarget.style.transform = 'translateY(-4px)';\n//                 e.currentTarget.style.boxShadow = '0 12px 30px rgba(0, 0, 0, 0.15)';\n//               }}\n//               onMouseLeave={(e) => {\n//                 e.currentTarget.style.transform = 'translateY(0)';\n//                 e.currentTarget.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.1)';\n//               }}\n//             >\n//               <div style={styles.itemIcon}>{item.icon}</div>\n//               <div style={styles.itemName}>{item.name}</div>\n//               <div style={styles.itemStatus}>\n//                 <div style={styles.statusDot}></div>\n//                 {item.status}\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n\n//   const renderDetailView = () => {\n//     const item = selectedItem;\n\n//     return (\n//       <div style={styles.detailContainer}>\n//         <div style={styles.detailHeader}>\n//           <button \n//             style={styles.backButton}\n//             onClick={() => setSelectedItem(null)}\n//           >\n//             ‚Üê Back to Dashboard\n//           </button>\n//           <h1 style={styles.detailTitle}>\n//             <span style={styles.detailIcon}>{item.icon}</span>\n//             {item.name} Details\n//           </h1>\n//         </div>\n\n//         <div style={styles.detailContent}>\n//           {item.id === 'solar' && (\n//             <>\n//               <div style={styles.metricsGrid}>\n//                 <div style={styles.metricCard}>\n//                   <div style={styles.metricValue}>{item.details.efficiency}</div>\n//                   <div style={styles.metricLabel}>Efficiency</div>\n//                 </div>\n//                 <div style={styles.metricCard}>\n//                   <div style={styles.metricValue}>{item.details.powerOutput}</div>\n//                   <div style={styles.metricLabel}>Current Output</div>\n//                 </div>\n//                 <div style={styles.metricCard}>\n//                   <div style={styles.metricValue}>{item.details.dailyGeneration}</div>\n//                   <div style={styles.metricLabel}>Daily Generation</div>\n//                 </div>\n//                 <div style={styles.metricCard}>\n//                   <div style={styles.metricValue}>{item.details.monthlyGeneration}</div>\n//                   <div style={styles.metricLabel}>Monthly Generation</div>\n//                 </div>\n//               </div>\n\n//               <div style={styles.panelsSection}>\n//                 <h3 style={styles.subsectionTitle}>Individual Panel Status</h3>\n//                 <div style={styles.panelsList}>\n//                   {item.details.panels.map(panel => (\n//                     <div key={panel.id} style={styles.panelItem}>\n//                       <div style={styles.panelInfo}>\n//                         <div style={styles.panelLocation}>{panel.location}</div>\n//                         <div style={styles.panelStats}>\n//                           <span>Output: {panel.output}</span>\n//                           <span>Efficiency: {panel.efficiency}</span>\n//                         </div>\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n//               </div>\n//             </>\n//           )}\n\n//           {item.id === 'battery' && (\n//             <div style={styles.metricsGrid}>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.capacity}</div>\n//                 <div style={styles.metricLabel}>Capacity</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.voltage}</div>\n//                 <div style={styles.metricLabel}>Voltage</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.current}</div>\n//                 <div style={styles.metricLabel}>Current</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.temperature}</div>\n//                 <div style={styles.metricLabel}>Temperature</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.cycleCount}</div>\n//                 <div style={styles.metricLabel}>Cycle Count</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.estimatedLife}</div>\n//                 <div style={styles.metricLabel}>Estimated Life</div>\n//               </div>\n//             </div>\n//           )}\n\n//           {item.id === 'inverter' && (\n//             <div style={styles.metricsGrid}>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.efficiency}</div>\n//                 <div style={styles.metricLabel}>Efficiency</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.inputVoltage}</div>\n//                 <div style={styles.metricLabel}>Input Voltage</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.outputVoltage}</div>\n//                 <div style={styles.metricLabel}>Output Voltage</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.frequency}</div>\n//                 <div style={styles.metricLabel}>Frequency</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.temperature}</div>\n//                 <div style={styles.metricLabel}>Temperature</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.totalHours}</div>\n//                 <div style={styles.metricLabel}>Total Hours</div>\n//               </div>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       {selectedItem ? renderDetailView() : renderHomeView()}\n//     </div>\n//   );\n// }\n\n// const styles = {\n//   container: {\n//     padding: '20px',\n//     maxWidth: '1200px',\n//     margin: '0 auto',\n//     fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n//   },\n\n//   // Home View Styles\n//   homeContainer: {\n//     display: 'grid',\n//     gap: '24px',\n//   },\n\n//   weatherCard: {\n//     background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n//     borderRadius: '16px',\n//     padding: '24px',\n//     color: 'white',\n//     boxShadow: '0 8px 25px rgba(0, 0, 0, 0.15)',\n//   },\n\n//   weatherHeader: {\n//     marginBottom: '20px',\n//   },\n\n//   sectionTitle: {\n//     fontSize: '1.5rem',\n//     fontWeight: '700',\n//     margin: '0',\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '12px',\n//   },\n\n//   weatherIcon: {\n//     fontSize: '1.8rem',\n//   },\n\n//   weatherContent: {\n//     display: 'grid',\n//     gridTemplateColumns: '1fr 1fr',\n//     gap: '24px',\n//     alignItems: 'center',\n//   },\n\n//   weatherMain: {\n//     textAlign: 'center',\n//   },\n\n//   temperature: {\n//     fontSize: '3rem',\n//     fontWeight: '800',\n//     marginBottom: '8px',\n//   },\n\n//   condition: {\n//     fontSize: '1.2rem',\n//     opacity: '0.9',\n//   },\n\n//   weatherDetails: {\n//     display: 'grid',\n//     gap: '12px',\n//   },\n\n//   weatherItem: {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     padding: '8px 0',\n//   },\n\n//   weatherLabel: {\n//     opacity: '0.8',\n//   },\n\n//   weatherValue: {\n//     fontWeight: '600',\n//   },\n\n//   // Alerts Styles\n//   alertsCard: {\n//     background: 'white',\n//     borderRadius: '16px',\n//     padding: '24px',\n//     boxShadow: '0 6px 20px rgba(0, 0, 0, 0.1)',\n//   },\n\n//   alertIcon: {\n//     fontSize: '1.5rem',\n//   },\n\n//   alertsList: {\n//     display: 'grid',\n//     gap: '12px',\n//     marginTop: '20px',\n//   },\n\n//   alertItem: {\n//     padding: '16px',\n//     background: '#f8fafc',\n//     borderRadius: '12px',\n//     border: '1px solid #e2e8f0',\n//   },\n\n//   alertContent: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '12px',\n//   },\n\n//   alertTypeIcon: {\n//     fontSize: '1.2rem',\n//   },\n\n//   alertText: {\n//     flex: '1',\n//   },\n\n//   alertMessage: {\n//     fontWeight: '500',\n//     marginBottom: '4px',\n//   },\n\n//   alertTime: {\n//     fontSize: '0.9rem',\n//     color: '#6b7280',\n//   },\n\n//   // System Grid Styles\n//   systemGrid: {\n//     background: 'white',\n//     borderRadius: '16px',\n//     padding: '24px',\n//     boxShadow: '0 6px 20px rgba(0, 0, 0, 0.1)',\n//   },\n\n//   systemIcon: {\n//     fontSize: '1.5rem',\n//   },\n\n//   itemsGrid: {\n//     display: 'grid',\n//     gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n//     gap: '20px',\n//     marginTop: '20px',\n//   },\n\n//   systemItem: {\n//     background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\n//     borderRadius: '12px',\n//     padding: '20px',\n//     textAlign: 'center',\n//     cursor: 'pointer',\n//     transition: 'all 0.3s ease',\n//     boxShadow: '0 6px 20px rgba(0, 0, 0, 0.1)',\n//     border: '1px solid #e2e8f0',\n//   },\n\n//   itemIcon: {\n//     fontSize: '2.5rem',\n//     marginBottom: '12px',\n//   },\n\n//   itemName: {\n//     fontSize: '1.1rem',\n//     fontWeight: '600',\n//     marginBottom: '8px',\n//     color: '#1f2937',\n//   },\n\n//   itemStatus: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     gap: '6px',\n//     fontSize: '0.9rem',\n//     color: '#059669',\n//     fontWeight: '500',\n//   },\n\n//   statusDot: {\n//     width: '8px',\n//     height: '8px',\n//     borderRadius: '50%',\n//     background: '#059669',\n//   },\n\n//   // Detail View Styles\n//   detailContainer: {\n//     background: 'white',\n//     borderRadius: '16px',\n//     overflow: 'hidden',\n//     boxShadow: '0 8px 25px rgba(0, 0, 0, 0.15)',\n//   },\n\n//   detailHeader: {\n//     background: 'linear-gradient(135deg, #1e293b 0%, #334155 100%)',\n//     padding: '24px',\n//     color: 'white',\n//   },\n\n//   backButton: {\n//     background: 'rgba(255, 255, 255, 0.2)',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '8px',\n//     padding: '8px 16px',\n//     cursor: 'pointer',\n//     marginBottom: '16px',\n//     fontSize: '14px',\n//     transition: 'all 0.3s ease',\n//   },\n\n//   detailTitle: {\n//     fontSize: '2rem',\n//     fontWeight: '700',\n//     margin: '0',\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '12px',\n//   },\n\n//   detailIcon: {\n//     fontSize: '2rem',\n//   },\n\n//   detailContent: {\n//     padding: '24px',\n//   },\n\n//   metricsGrid: {\n//     display: 'grid',\n//     gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n//     gap: '20px',\n//     marginBottom: '32px',\n//   },\n\n//   metricCard: {\n//     background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\n//     borderRadius: '12px',\n//     padding: '20px',\n//     textAlign: 'center',\n//     border: '1px solid #e2e8f0',\n//   },\n\n//   metricValue: {\n//     fontSize: '2rem',\n//     fontWeight: '800',\n//     color: '#1f2937',\n//     marginBottom: '8px',\n//   },\n\n//   metricLabel: {\n//     fontSize: '0.9rem',\n//     color: '#6b7280',\n//     fontWeight: '500',\n//   },\n\n//   panelsSection: {\n//     marginTop: '32px',\n//   },\n\n//   subsectionTitle: {\n//     fontSize: '1.3rem',\n//     fontWeight: '600',\n//     marginBottom: '16px',\n//     color: '#1f2937',\n//   },\n\n//   panelsList: {\n//     display: 'grid',\n//     gap: '12px',\n//   },\n\n//   panelItem: {\n//     background: '#f8fafc',\n//     borderRadius: '8px',\n//     padding: '16px',\n//     border: '1px solid #e2e8f0',\n//   },\n\n//   panelInfo: {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//   },\n\n//   panelLocation: {\n//     fontWeight: '600',\n//     color: '#1f2937',\n//   },\n\n//   panelStats: {\n//     display: 'flex',\n//     gap: '16px',\n//     fontSize: '0.9rem',\n//     color: '#6b7280',\n//   },\n// };\n\n// export default AdminDashboard;","map":{"version":3,"names":[],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/pages/AdminDashboard.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// function AdminDashboard() {\n//   const [selectedItem, setSelectedItem] = useState(null);\n//   const [weatherData, setWeatherData] = useState({\n//     temperature: '24¬∞C',\n//     condition: 'Sunny',\n//     humidity: '65%',\n//     windSpeed: '12 km/h'\n//   });\n  \n//   const [alerts] = useState([\n//     { id: 1, type: 'warning', message: 'Solar panel efficiency decreased by 5%', time: '2 hours ago' },\n//     { id: 2, type: 'info', message: 'System maintenance scheduled for tomorrow', time: '4 hours ago' },\n//     { id: 3, type: 'success', message: 'Energy savings target achieved', time: '1 day ago' }\n//   ]);\n\n//   const [systemItems] = useState([\n//     {\n//       id: 'solar',\n//       name: 'Solar Panels',\n//       icon: '‚òÄÔ∏è',\n//       status: 'Active',\n//       details: {\n//         efficiency: '92%',\n//         powerOutput: '4.2 kW',\n//         dailyGeneration: '28.5 kWh',\n//         monthlyGeneration: '850 kWh',\n//         carbonSaved: '425 kg CO2',\n//         panels: [\n//           { id: 1, location: 'Roof Section A', output: '1.2 kW', efficiency: '94%' },\n//           { id: 2, location: 'Roof Section B', output: '1.5 kW', efficiency: '91%' },\n//           { id: 3, location: 'Roof Section C', output: '1.5 kW', efficiency: '92%' }\n//         ]\n//       }\n//     },\n//     {\n//       id: 'battery',\n//       name: 'Battery Storage',\n//       icon: 'üîã',\n//       status: 'Charging',\n//       details: {\n//         capacity: '85%',\n//         voltage: '48.2V',\n//         current: '12.5A',\n//         temperature: '32¬∞C',\n//         cycleCount: '1,247',\n//         estimatedLife: '8.2 years remaining'\n//       }\n//     },\n//     {\n//       id: 'inverter',\n//       name: 'Power Inverter',\n//       icon: '‚ö°',\n//       status: 'Online',\n//       details: {\n//         efficiency: '96.8%',\n//         inputVoltage: '48V DC',\n//         outputVoltage: '230V AC',\n//         frequency: '50 Hz',\n//         temperature: '45¬∞C',\n//         totalHours: '12,450 hrs'\n//       }\n//     }\n//   ]);\n\n//   const getAlertIcon = (type) => {\n//     switch(type) {\n//       case 'warning': return '‚ö†Ô∏è';\n//       case 'info': return '‚ÑπÔ∏è';\n//       case 'success': return '‚úÖ';\n//       default: return '‚ÑπÔ∏è';\n//     }\n//   };\n\n//   const getAlertColor = (type) => {\n//     switch(type) {\n//       case 'warning': return '#f59e0b';\n//       case 'info': return '#3b82f6';\n//       case 'success': return '#10b981';\n//       default: return '#6b7280';\n//     }\n//   };\n\n//   const renderHomeView = () => (\n//     <div style={styles.homeContainer}>\n//       {/* Weather Section */}\n//       <div style={styles.weatherCard}>\n//         <div style={styles.weatherHeader}>\n//           <h2 style={styles.sectionTitle}>\n//             <span style={styles.weatherIcon}>üå§Ô∏è</span>\n//             Weather Conditions\n//           </h2>\n//         </div>\n//         <div style={styles.weatherContent}>\n//           <div style={styles.weatherMain}>\n//             <div style={styles.temperature}>{weatherData.temperature}</div>\n//             <div style={styles.condition}>{weatherData.condition}</div>\n//           </div>\n//           <div style={styles.weatherDetails}>\n//             <div style={styles.weatherItem}>\n//               <span style={styles.weatherLabel}>Humidity</span>\n//               <span style={styles.weatherValue}>{weatherData.humidity}</span>\n//             </div>\n//             <div style={styles.weatherItem}>\n//               <span style={styles.weatherLabel}>Wind Speed</span>\n//               <span style={styles.weatherValue}>{weatherData.windSpeed}</span>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Alerts Section */}\n//       <div style={styles.alertsCard}>\n//         <h2 style={styles.sectionTitle}>\n//           <span style={styles.alertIcon}>üîî</span>\n//           System Alerts\n//         </h2>\n//         <div style={styles.alertsList}>\n//           {alerts.map(alert => (\n//             <div key={alert.id} style={styles.alertItem}>\n//               <div style={styles.alertContent}>\n//                 <span style={{...styles.alertTypeIcon, color: getAlertColor(alert.type)}}>\n//                   {getAlertIcon(alert.type)}\n//                 </span>\n//                 <div style={styles.alertText}>\n//                   <div style={styles.alertMessage}>{alert.message}</div>\n//                   <div style={styles.alertTime}>{alert.time}</div>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n\n//       {/* System Items Grid */}\n//       <div style={styles.systemGrid}>\n//         <h2 style={styles.sectionTitle}>\n//           <span style={styles.systemIcon}>‚öôÔ∏è</span>\n//           System Components\n//         </h2>\n//         <div style={styles.itemsGrid}>\n//           {systemItems.map(item => (\n//             <div\n//               key={item.id}\n//               style={styles.systemItem}\n//               onClick={() => setSelectedItem(item)}\n//               onMouseEnter={(e) => {\n//                 e.currentTarget.style.transform = 'translateY(-4px)';\n//                 e.currentTarget.style.boxShadow = '0 12px 30px rgba(0, 0, 0, 0.15)';\n//               }}\n//               onMouseLeave={(e) => {\n//                 e.currentTarget.style.transform = 'translateY(0)';\n//                 e.currentTarget.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.1)';\n//               }}\n//             >\n//               <div style={styles.itemIcon}>{item.icon}</div>\n//               <div style={styles.itemName}>{item.name}</div>\n//               <div style={styles.itemStatus}>\n//                 <div style={styles.statusDot}></div>\n//                 {item.status}\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n\n//   const renderDetailView = () => {\n//     const item = selectedItem;\n    \n//     return (\n//       <div style={styles.detailContainer}>\n//         <div style={styles.detailHeader}>\n//           <button \n//             style={styles.backButton}\n//             onClick={() => setSelectedItem(null)}\n//           >\n//             ‚Üê Back to Dashboard\n//           </button>\n//           <h1 style={styles.detailTitle}>\n//             <span style={styles.detailIcon}>{item.icon}</span>\n//             {item.name} Details\n//           </h1>\n//         </div>\n\n//         <div style={styles.detailContent}>\n//           {item.id === 'solar' && (\n//             <>\n//               <div style={styles.metricsGrid}>\n//                 <div style={styles.metricCard}>\n//                   <div style={styles.metricValue}>{item.details.efficiency}</div>\n//                   <div style={styles.metricLabel}>Efficiency</div>\n//                 </div>\n//                 <div style={styles.metricCard}>\n//                   <div style={styles.metricValue}>{item.details.powerOutput}</div>\n//                   <div style={styles.metricLabel}>Current Output</div>\n//                 </div>\n//                 <div style={styles.metricCard}>\n//                   <div style={styles.metricValue}>{item.details.dailyGeneration}</div>\n//                   <div style={styles.metricLabel}>Daily Generation</div>\n//                 </div>\n//                 <div style={styles.metricCard}>\n//                   <div style={styles.metricValue}>{item.details.monthlyGeneration}</div>\n//                   <div style={styles.metricLabel}>Monthly Generation</div>\n//                 </div>\n//               </div>\n\n//               <div style={styles.panelsSection}>\n//                 <h3 style={styles.subsectionTitle}>Individual Panel Status</h3>\n//                 <div style={styles.panelsList}>\n//                   {item.details.panels.map(panel => (\n//                     <div key={panel.id} style={styles.panelItem}>\n//                       <div style={styles.panelInfo}>\n//                         <div style={styles.panelLocation}>{panel.location}</div>\n//                         <div style={styles.panelStats}>\n//                           <span>Output: {panel.output}</span>\n//                           <span>Efficiency: {panel.efficiency}</span>\n//                         </div>\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n//               </div>\n//             </>\n//           )}\n\n//           {item.id === 'battery' && (\n//             <div style={styles.metricsGrid}>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.capacity}</div>\n//                 <div style={styles.metricLabel}>Capacity</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.voltage}</div>\n//                 <div style={styles.metricLabel}>Voltage</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.current}</div>\n//                 <div style={styles.metricLabel}>Current</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.temperature}</div>\n//                 <div style={styles.metricLabel}>Temperature</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.cycleCount}</div>\n//                 <div style={styles.metricLabel}>Cycle Count</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.estimatedLife}</div>\n//                 <div style={styles.metricLabel}>Estimated Life</div>\n//               </div>\n//             </div>\n//           )}\n\n//           {item.id === 'inverter' && (\n//             <div style={styles.metricsGrid}>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.efficiency}</div>\n//                 <div style={styles.metricLabel}>Efficiency</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.inputVoltage}</div>\n//                 <div style={styles.metricLabel}>Input Voltage</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.outputVoltage}</div>\n//                 <div style={styles.metricLabel}>Output Voltage</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.frequency}</div>\n//                 <div style={styles.metricLabel}>Frequency</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.temperature}</div>\n//                 <div style={styles.metricLabel}>Temperature</div>\n//               </div>\n//               <div style={styles.metricCard}>\n//                 <div style={styles.metricValue}>{item.details.totalHours}</div>\n//                 <div style={styles.metricLabel}>Total Hours</div>\n//               </div>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       {selectedItem ? renderDetailView() : renderHomeView()}\n//     </div>\n//   );\n// }\n\n// const styles = {\n//   container: {\n//     padding: '20px',\n//     maxWidth: '1200px',\n//     margin: '0 auto',\n//     fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n//   },\n\n//   // Home View Styles\n//   homeContainer: {\n//     display: 'grid',\n//     gap: '24px',\n//   },\n\n//   weatherCard: {\n//     background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n//     borderRadius: '16px',\n//     padding: '24px',\n//     color: 'white',\n//     boxShadow: '0 8px 25px rgba(0, 0, 0, 0.15)',\n//   },\n\n//   weatherHeader: {\n//     marginBottom: '20px',\n//   },\n\n//   sectionTitle: {\n//     fontSize: '1.5rem',\n//     fontWeight: '700',\n//     margin: '0',\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '12px',\n//   },\n\n//   weatherIcon: {\n//     fontSize: '1.8rem',\n//   },\n\n//   weatherContent: {\n//     display: 'grid',\n//     gridTemplateColumns: '1fr 1fr',\n//     gap: '24px',\n//     alignItems: 'center',\n//   },\n\n//   weatherMain: {\n//     textAlign: 'center',\n//   },\n\n//   temperature: {\n//     fontSize: '3rem',\n//     fontWeight: '800',\n//     marginBottom: '8px',\n//   },\n\n//   condition: {\n//     fontSize: '1.2rem',\n//     opacity: '0.9',\n//   },\n\n//   weatherDetails: {\n//     display: 'grid',\n//     gap: '12px',\n//   },\n\n//   weatherItem: {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     padding: '8px 0',\n//   },\n\n//   weatherLabel: {\n//     opacity: '0.8',\n//   },\n\n//   weatherValue: {\n//     fontWeight: '600',\n//   },\n\n//   // Alerts Styles\n//   alertsCard: {\n//     background: 'white',\n//     borderRadius: '16px',\n//     padding: '24px',\n//     boxShadow: '0 6px 20px rgba(0, 0, 0, 0.1)',\n//   },\n\n//   alertIcon: {\n//     fontSize: '1.5rem',\n//   },\n\n//   alertsList: {\n//     display: 'grid',\n//     gap: '12px',\n//     marginTop: '20px',\n//   },\n\n//   alertItem: {\n//     padding: '16px',\n//     background: '#f8fafc',\n//     borderRadius: '12px',\n//     border: '1px solid #e2e8f0',\n//   },\n\n//   alertContent: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '12px',\n//   },\n\n//   alertTypeIcon: {\n//     fontSize: '1.2rem',\n//   },\n\n//   alertText: {\n//     flex: '1',\n//   },\n\n//   alertMessage: {\n//     fontWeight: '500',\n//     marginBottom: '4px',\n//   },\n\n//   alertTime: {\n//     fontSize: '0.9rem',\n//     color: '#6b7280',\n//   },\n\n//   // System Grid Styles\n//   systemGrid: {\n//     background: 'white',\n//     borderRadius: '16px',\n//     padding: '24px',\n//     boxShadow: '0 6px 20px rgba(0, 0, 0, 0.1)',\n//   },\n\n//   systemIcon: {\n//     fontSize: '1.5rem',\n//   },\n\n//   itemsGrid: {\n//     display: 'grid',\n//     gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n//     gap: '20px',\n//     marginTop: '20px',\n//   },\n\n//   systemItem: {\n//     background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\n//     borderRadius: '12px',\n//     padding: '20px',\n//     textAlign: 'center',\n//     cursor: 'pointer',\n//     transition: 'all 0.3s ease',\n//     boxShadow: '0 6px 20px rgba(0, 0, 0, 0.1)',\n//     border: '1px solid #e2e8f0',\n//   },\n\n//   itemIcon: {\n//     fontSize: '2.5rem',\n//     marginBottom: '12px',\n//   },\n\n//   itemName: {\n//     fontSize: '1.1rem',\n//     fontWeight: '600',\n//     marginBottom: '8px',\n//     color: '#1f2937',\n//   },\n\n//   itemStatus: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     gap: '6px',\n//     fontSize: '0.9rem',\n//     color: '#059669',\n//     fontWeight: '500',\n//   },\n\n//   statusDot: {\n//     width: '8px',\n//     height: '8px',\n//     borderRadius: '50%',\n//     background: '#059669',\n//   },\n\n//   // Detail View Styles\n//   detailContainer: {\n//     background: 'white',\n//     borderRadius: '16px',\n//     overflow: 'hidden',\n//     boxShadow: '0 8px 25px rgba(0, 0, 0, 0.15)',\n//   },\n\n//   detailHeader: {\n//     background: 'linear-gradient(135deg, #1e293b 0%, #334155 100%)',\n//     padding: '24px',\n//     color: 'white',\n//   },\n\n//   backButton: {\n//     background: 'rgba(255, 255, 255, 0.2)',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '8px',\n//     padding: '8px 16px',\n//     cursor: 'pointer',\n//     marginBottom: '16px',\n//     fontSize: '14px',\n//     transition: 'all 0.3s ease',\n//   },\n\n//   detailTitle: {\n//     fontSize: '2rem',\n//     fontWeight: '700',\n//     margin: '0',\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '12px',\n//   },\n\n//   detailIcon: {\n//     fontSize: '2rem',\n//   },\n\n//   detailContent: {\n//     padding: '24px',\n//   },\n\n//   metricsGrid: {\n//     display: 'grid',\n//     gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n//     gap: '20px',\n//     marginBottom: '32px',\n//   },\n\n//   metricCard: {\n//     background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\n//     borderRadius: '12px',\n//     padding: '20px',\n//     textAlign: 'center',\n//     border: '1px solid #e2e8f0',\n//   },\n\n//   metricValue: {\n//     fontSize: '2rem',\n//     fontWeight: '800',\n//     color: '#1f2937',\n//     marginBottom: '8px',\n//   },\n\n//   metricLabel: {\n//     fontSize: '0.9rem',\n//     color: '#6b7280',\n//     fontWeight: '500',\n//   },\n\n//   panelsSection: {\n//     marginTop: '32px',\n//   },\n\n//   subsectionTitle: {\n//     fontSize: '1.3rem',\n//     fontWeight: '600',\n//     marginBottom: '16px',\n//     color: '#1f2937',\n//   },\n\n//   panelsList: {\n//     display: 'grid',\n//     gap: '12px',\n//   },\n\n//   panelItem: {\n//     background: '#f8fafc',\n//     borderRadius: '8px',\n//     padding: '16px',\n//     border: '1px solid #e2e8f0',\n//   },\n\n//   panelInfo: {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//   },\n\n//   panelLocation: {\n//     fontWeight: '600',\n//     color: '#1f2937',\n//   },\n\n//   panelStats: {\n//     display: 'flex',\n//     gap: '16px',\n//     fontSize: '0.9rem',\n//     color: '#6b7280',\n//   },\n// };\n\n// export default AdminDashboard;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}