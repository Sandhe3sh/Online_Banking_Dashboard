{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { getAllAccounts } from '../utils/api';\n// import AccountDetails from './AccountDetails'; // assuming you have this\n\n// function AccountDashboard() {\n//   const [accounts, setAccounts] = useState([]);\n//   const [selectedAccountId, setSelectedAccountId] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     getAllAccounts()\n//       .then(response => {\n//         setAccounts(response.data);\n//         setLoading(false);\n//       })\n//       .catch(() => {\n//         setError('Failed to load accounts');\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) return <p>Loading accounts...</p>;\n//   if (error) return <p>{error}</p>;\n\n//   return (\n//     <div>\n//       <h1>Account Dashboard</h1>\n//       <ul>\n//         {accounts.map(acc => (\n//           <li key={acc.accountId}>\n//             <button onClick={() => setSelectedAccountId(acc.accountId)}>\n//               {acc.accountHolderName} - {acc.accountNumber}\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       {selectedAccountId && <AccountDetails accountId={selectedAccountId} />}\n//     </div>\n//   );\n// }\n\n// export default AccountDashboard;\n\n// import React, { useEffect, useState } from 'react';\n// import { getAllAccounts } from '../utils/api';\n// import AccountDetails from './AccountDetails';\n//  // assuming you have this\n\n// function AccountDashboard() {\n//   const [accounts, setAccounts] = useState([]);\n//   const [selectedAccountId, setSelectedAccountId] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     getAllAccounts()\n//       .then(response => {\n//         setAccounts(response.data);\n//         setLoading(false);\n//       })\n//       .catch(() => {\n//         setError('Failed to load accounts');\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) return <p style={styles.message}>Loading accounts...</p>;\n//   if (error) return <p style={styles.message}>{error}</p>;\n\n//   return (\n//     <div style={styles.container}>\n//       <h1 style={styles.heading}>Account Dashboard</h1>\n//       <ul style={styles.list}>\n//         {accounts.map(acc => (\n//           <li key={acc.accountId} style={styles.listItem}>\n//             <button\n//               onClick={() => setSelectedAccountId(acc.accountId)}\n//               style={styles.button}\n//             >\n//               {acc.accountHolderName} - {acc.accountNumber}\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       {selectedAccountId && (\n//         <div style={styles.detailsContainer}>\n//           <AccountDetails accountId={selectedAccountId} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// // Inline style object\n// const styles = {\n//   container: {\n//     padding: '20px',\n//     maxWidth: '800px',\n//     margin: '40px auto',\n//     backgroundColor: '#ffffff',\n//     boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\n//     borderRadius: '8px',\n//     fontFamily: 'Arial, sans-serif',\n//   },\n//   heading: {\n//     textAlign: 'center',\n//     color: '#333',\n//     marginBottom: '24px',\n//   },\n//   list: {\n//     listStyle: 'none',\n//     padding: 0,\n//   },\n//   listItem: {\n//     marginBottom: '12px',\n//   },\n//   button: {\n//     backgroundColor: '#4f46e5',\n//     color: '#ffffff',\n//     border: 'none',\n//     padding: '10px 16px',\n//     fontSize: '16px',\n//     borderRadius: '6px',\n//     cursor: 'pointer',\n//     width: '100%',\n//     textAlign: 'left',\n//     transition: 'background-color 0.3s ease',\n//   },\n//   message: {\n//     textAlign: 'center',\n//     color: '#666',\n//     fontSize: '16px',\n//   },\n//   detailsContainer: {\n//     marginTop: '20px',\n//   },\n// };\n\n// export default AccountDashboard;","map":{"version":3,"names":[],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/AccountDashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { getAllAccounts } from '../utils/api';\r\n// import AccountDetails from './AccountDetails'; // assuming you have this\r\n\r\n// function AccountDashboard() {\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     getAllAccounts()\r\n//       .then(response => {\r\n//         setAccounts(response.data);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch(() => {\r\n//         setError('Failed to load accounts');\r\n//         setLoading(false);\r\n//       });\r\n//   }, []);\r\n\r\n//   if (loading) return <p>Loading accounts...</p>;\r\n//   if (error) return <p>{error}</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Account Dashboard</h1>\r\n//       <ul>\r\n//         {accounts.map(acc => (\r\n//           <li key={acc.accountId}>\r\n//             <button onClick={() => setSelectedAccountId(acc.accountId)}>\r\n//               {acc.accountHolderName} - {acc.accountNumber}\r\n//             </button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       {selectedAccountId && <AccountDetails accountId={selectedAccountId} />}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AccountDashboard;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { getAllAccounts } from '../utils/api';\r\n// import AccountDetails from './AccountDetails';\r\n//  // assuming you have this\r\n\r\n// function AccountDashboard() {\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     getAllAccounts()\r\n//       .then(response => {\r\n//         setAccounts(response.data);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch(() => {\r\n//         setError('Failed to load accounts');\r\n//         setLoading(false);\r\n//       });\r\n//   }, []);\r\n\r\n//   if (loading) return <p style={styles.message}>Loading accounts...</p>;\r\n//   if (error) return <p style={styles.message}>{error}</p>;\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h1 style={styles.heading}>Account Dashboard</h1>\r\n//       <ul style={styles.list}>\r\n//         {accounts.map(acc => (\r\n//           <li key={acc.accountId} style={styles.listItem}>\r\n//             <button\r\n//               onClick={() => setSelectedAccountId(acc.accountId)}\r\n//               style={styles.button}\r\n//             >\r\n//               {acc.accountHolderName} - {acc.accountNumber}\r\n//             </button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       {selectedAccountId && (\r\n//         <div style={styles.detailsContainer}>\r\n//           <AccountDetails accountId={selectedAccountId} />\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // Inline style object\r\n// const styles = {\r\n//   container: {\r\n//     padding: '20px',\r\n//     maxWidth: '800px',\r\n//     margin: '40px auto',\r\n//     backgroundColor: '#ffffff',\r\n//     boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\r\n//     borderRadius: '8px',\r\n//     fontFamily: 'Arial, sans-serif',\r\n//   },\r\n//   heading: {\r\n//     textAlign: 'center',\r\n//     color: '#333',\r\n//     marginBottom: '24px',\r\n//   },\r\n//   list: {\r\n//     listStyle: 'none',\r\n//     padding: 0,\r\n//   },\r\n//   listItem: {\r\n//     marginBottom: '12px',\r\n//   },\r\n//   button: {\r\n//     backgroundColor: '#4f46e5',\r\n//     color: '#ffffff',\r\n//     border: 'none',\r\n//     padding: '10px 16px',\r\n//     fontSize: '16px',\r\n//     borderRadius: '6px',\r\n//     cursor: 'pointer',\r\n//     width: '100%',\r\n//     textAlign: 'left',\r\n//     transition: 'background-color 0.3s ease',\r\n//   },\r\n//   message: {\r\n//     textAlign: 'center',\r\n//     color: '#666',\r\n//     fontSize: '16px',\r\n//   },\r\n//   detailsContainer: {\r\n//     marginTop: '20px',\r\n//   },\r\n// };\r\n\r\n// export default AccountDashboard;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}