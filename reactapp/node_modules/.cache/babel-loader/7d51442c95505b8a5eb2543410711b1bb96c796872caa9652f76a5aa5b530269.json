{"ast":null,"code":"// import React, { useState } from 'react';\n// import { depositMoney } from '../utils/api';\n\n// function DepositForm() {\n//   const [accountId, setAccountId] = useState('');\n//   const [amount, setAmount] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await depositMoney({\n//         accountId: parseInt(accountId),\n//         amount: parseFloat(amount),\n//         description,\n//       });\n//       setMessage(`Deposit successful! New balance: ${response.data.balance}`);\n//     } catch (error) {\n//       setMessage(`Deposit failed: ${error.response?.data?.message || error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Deposit Money</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"number\"\n//           placeholder=\"Account ID\"\n//           value={accountId}\n//           onChange={(e) => setAccountId(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"number\"\n//           placeholder=\"Amount\"\n//           value={amount}\n//           onChange={(e) => setAmount(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Description\"\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           required\n//         />\n//         <button type=\"submit\">Deposit</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default DepositForm;","map":{"version":3,"names":[],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/DepositForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { depositMoney } from '../utils/api';\r\n\r\n// function DepositForm() {\r\n//   const [accountId, setAccountId] = useState('');\r\n//   const [amount, setAmount] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await depositMoney({\r\n//         accountId: parseInt(accountId),\r\n//         amount: parseFloat(amount),\r\n//         description,\r\n//       });\r\n//       setMessage(`Deposit successful! New balance: ${response.data.balance}`);\r\n//     } catch (error) {\r\n//       setMessage(`Deposit failed: ${error.response?.data?.message || error.message}`);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Deposit Money</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Account ID\"\r\n//           value={accountId}\r\n//           onChange={(e) => setAccountId(e.target.value)}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Amount\"\r\n//           value={amount}\r\n//           onChange={(e) => setAmount(e.target.value)}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Description\"\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           required\r\n//         />\r\n//         <button type=\"submit\">Deposit</button>\r\n//       </form>\r\n//       {message && <p>{message}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default DepositForm;\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}