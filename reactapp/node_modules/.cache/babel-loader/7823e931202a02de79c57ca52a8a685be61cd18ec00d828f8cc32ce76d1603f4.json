{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishnu\\\\project\\\\OnlineBankingDashboard\\\\cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb\\\\reactapp\\\\src\\\\components\\\\AccountDashboard.js\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from 'react';\n// // import { getAllAccounts } from '../utils/api';\n// // import AccountDetails from './AccountDetails'; // assuming you have this\n\n// // function AccountDashboard() {\n// //   const [accounts, setAccounts] = useState([]);\n// //   const [selectedAccountId, setSelectedAccountId] = useState(null);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n\n// //   useEffect(() => {\n// //     getAllAccounts()\n// //       .then(response => {\n// //         setAccounts(response.data);\n// //         setLoading(false);\n// //       })\n// //       .catch(() => {\n// //         setError('Failed to load accounts');\n// //         setLoading(false);\n// //       });\n// //   }, []);\n\n// //   if (loading) return <p>Loading accounts...</p>;\n// //   if (error) return <p>{error}</p>;\n\n// //   return (\n// //     <div>\n// //       <h1>Account Dashboard</h1>\n// //       <ul>\n// //         {accounts.map(acc => (\n// //           <li key={acc.accountId}>\n// //             <button onClick={() => setSelectedAccountId(acc.accountId)}>\n// //               {acc.accountHolderName} - {acc.accountNumber}\n// //             </button>\n// //           </li>\n// //         ))}\n// //       </ul>\n\n// //       {selectedAccountId && <AccountDetails accountId={selectedAccountId} />}\n// //     </div>\n// //   );\n// // }\n\n// // export default AccountDashboard;\n// import React, { useEffect, useState } from 'react';\n// import { getAllAccounts } from '../utils/api';\n// import AccountDetails from './AccountDetails';\n//  // assuming you have this\n\n// function AccountDashboard() {\n//   const [accounts, setAccounts] = useState([]);\n//   const [selectedAccountId, setSelectedAccountId] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     getAllAccounts()\n//       .then(response => {\n//         setAccounts(response.data);\n//         setLoading(false);\n//       })\n//       .catch(() => {\n//         setError('Failed to load accounts');\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) return <p style={styles.message}>Loading accounts...</p>;\n//   if (error) return <p style={styles.message}>{error}</p>;\n\n//   return (\n//     <div style={styles.container}>\n//       <h1 style={styles.heading}>Account Dashboard</h1>\n//       <ul style={styles.list}>\n//         {accounts.map(acc => (\n//           <li key={acc.accountId} style={styles.listItem}>\n//             <button\n//               onClick={() => setSelectedAccountId(acc.accountId)}\n//               style={{\n//                 ...styles.button,\n//                 ...(selectedAccountId === acc.accountId ? styles.buttonSelected : {}),\n//               }}\n//               onMouseEnter={(e) => {\n//                 if (selectedAccountId !== acc.accountId) {\n//                   e.target.style.backgroundColor = '#3730a3';\n//                   e.target.style.transform = 'translateY(-2px)';\n//                   e.target.style.boxShadow = '0 8px 25px rgba(79, 70, 229, 0.3)';\n//                 }\n//               }}\n//               onMouseLeave={(e) => {\n//                 if (selectedAccountId !== acc.accountId) {\n//                   e.target.style.backgroundColor = '#4f46e5';\n//                   e.target.style.transform = 'translateY(0)';\n//                   e.target.style.boxShadow = '0 4px 15px rgba(79, 70, 229, 0.2)';\n//                 }\n//               }}\n//             >\n//               {acc.accountHolderName} - {acc.accountNumber}\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       {selectedAccountId && (\n//         <div style={styles.detailsContainer}>\n//           <AccountDetails accountId={selectedAccountId} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// // Enhanced inline style object with attractive modern design\n// const styles = {\n//   container: {\n//     padding: '32px',\n//     maxWidth: '900px',\n//     margin: '40px auto',\n//     background: 'linear-gradient(135deg, #ffffff 0%, #f8fafc 100%)',\n//     boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.05)',\n//     borderRadius: '24px',\n//     fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n//     position: 'relative',\n//     overflow: 'hidden',\n//   },\n//   heading: {\n//     textAlign: 'center',\n//     background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n//     WebkitBackgroundClip: 'text',\n//     WebkitTextFillColor: 'transparent',\n//     backgroundClip: 'text',\n//     fontSize: '2.5rem',\n//     fontWeight: '700',\n//     marginBottom: '32px',\n//     letterSpacing: '-0.02em',\n//     position: 'relative',\n//   },\n//   list: {\n//     listStyle: 'none',\n//     padding: 0,\n//     margin: 0,\n//     display: 'grid',\n//     gap: '16px',\n//   },\n//   listItem: {\n//     marginBottom: '0',\n//     position: 'relative',\n//   },\n//   button: {\n//     background: 'linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)',\n//     color: '#ffffff',\n//     border: 'none',\n//     padding: '16px 24px',\n//     fontSize: '16px',\n//     fontWeight: '500',\n//     borderRadius: '16px',\n//     cursor: 'pointer',\n//     width: '100%',\n//     textAlign: 'left',\n//     transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n//     position: 'relative',\n//     overflow: 'hidden',\n//     boxShadow: '0 4px 15px rgba(79, 70, 229, 0.2)',\n//     backdropFilter: 'blur(10px)',\n//     letterSpacing: '0.01em',\n//     lineHeight: '1.5',\n//   },\n//   buttonSelected: {\n//     background: 'linear-gradient(135deg, #059669 0%, #0d9488 100%)',\n//     boxShadow: '0 8px 25px rgba(5, 150, 105, 0.3)',\n//     transform: 'translateY(-2px)',\n//   },\n//   message: {\n//     textAlign: 'center',\n//     color: '#6b7280',\n//     fontSize: '18px',\n//     fontWeight: '500',\n//     padding: '60px 20px',\n//     background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\n//     borderRadius: '20px',\n//     margin: '40px auto',\n//     maxWidth: '600px',\n//     boxShadow: '0 10px 30px rgba(0, 0, 0, 0.08)',\n//     border: '1px solid rgba(255, 255, 255, 0.2)',\n//   },\n//   detailsContainer: {\n//     marginTop: '32px',\n//     padding: '24px',\n//     background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(248, 250, 252, 0.9) 100%)',\n//     borderRadius: '20px',\n//     border: '1px solid rgba(255, 255, 255, 0.2)',\n//     boxShadow: '0 10px 30px rgba(0, 0, 0, 0.08)',\n//     backdropFilter: 'blur(10px)',\n//     position: 'relative',\n//     overflow: 'hidden',\n//   },\n// };\n\n// export default AccountDashboard;\n\nimport React, { useEffect, useState } from 'react';\nimport { getAllAccounts } from '../utils/api';\nimport AccountDetails from './AccountDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountDashboard() {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getAllAccounts().then(response => {\n      setAccounts(response.data);\n      setLoading(false);\n    }).catch(() => {\n      setError('Failed to load accounts');\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"message\",\n    children: \"Loading accounts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"message error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-heading\",\n      children: \"Account Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"account-list\",\n      children: accounts.map(acc => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"account-list-item\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedAccountId(acc.accountId),\n          className: `account-button ${selectedAccountId === acc.accountId ? 'selected' : ''}`,\n          onMouseEnter: e => {\n            if (selectedAccountId !== acc.accountId) {\n              e.currentTarget.classList.add('hovered');\n            }\n          },\n          onMouseLeave: e => {\n            if (selectedAccountId !== acc.accountId) {\n              e.currentTarget.classList.remove('hovered');\n            }\n          },\n          children: [acc.accountHolderName, \" - \", acc.accountNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)\n      }, acc.accountId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), selectedAccountId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-container\",\n      children: /*#__PURE__*/_jsxDEV(AccountDetails, {\n        accountId: selectedAccountId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountDashboard, \"dDTfXPu7rO8EOpPWOgoDY2CLq38=\");\n_c = AccountDashboard;\nexport default AccountDashboard;\nvar _c;\n$RefreshReg$(_c, \"AccountDashboard\");","map":{"version":3,"names":["React","useEffect","useState","getAllAccounts","AccountDetails","jsxDEV","_jsxDEV","AccountDashboard","_s","accounts","setAccounts","selectedAccountId","setSelectedAccountId","loading","setLoading","error","setError","then","response","data","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","acc","onClick","accountId","onMouseEnter","e","currentTarget","classList","add","onMouseLeave","remove","accountHolderName","accountNumber","_c","$RefreshReg$"],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/AccountDashboard.js"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\r\n// // import { getAllAccounts } from '../utils/api';\r\n// // import AccountDetails from './AccountDetails'; // assuming you have this\r\n\r\n// // function AccountDashboard() {\r\n// //   const [accounts, setAccounts] = useState([]);\r\n// //   const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [error, setError] = useState(null);\r\n\r\n// //   useEffect(() => {\r\n// //     getAllAccounts()\r\n// //       .then(response => {\r\n// //         setAccounts(response.data);\r\n// //         setLoading(false);\r\n// //       })\r\n// //       .catch(() => {\r\n// //         setError('Failed to load accounts');\r\n// //         setLoading(false);\r\n// //       });\r\n// //   }, []);\r\n\r\n// //   if (loading) return <p>Loading accounts...</p>;\r\n// //   if (error) return <p>{error}</p>;\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h1>Account Dashboard</h1>\r\n// //       <ul>\r\n// //         {accounts.map(acc => (\r\n// //           <li key={acc.accountId}>\r\n// //             <button onClick={() => setSelectedAccountId(acc.accountId)}>\r\n// //               {acc.accountHolderName} - {acc.accountNumber}\r\n// //             </button>\r\n// //           </li>\r\n// //         ))}\r\n// //       </ul>\r\n\r\n// //       {selectedAccountId && <AccountDetails accountId={selectedAccountId} />}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default AccountDashboard;\r\n// import React, { useEffect, useState } from 'react';\r\n// import { getAllAccounts } from '../utils/api';\r\n// import AccountDetails from './AccountDetails';\r\n//  // assuming you have this\r\n\r\n// function AccountDashboard() {\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     getAllAccounts()\r\n//       .then(response => {\r\n//         setAccounts(response.data);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch(() => {\r\n//         setError('Failed to load accounts');\r\n//         setLoading(false);\r\n//       });\r\n//   }, []);\r\n\r\n//   if (loading) return <p style={styles.message}>Loading accounts...</p>;\r\n//   if (error) return <p style={styles.message}>{error}</p>;\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h1 style={styles.heading}>Account Dashboard</h1>\r\n//       <ul style={styles.list}>\r\n//         {accounts.map(acc => (\r\n//           <li key={acc.accountId} style={styles.listItem}>\r\n//             <button\r\n//               onClick={() => setSelectedAccountId(acc.accountId)}\r\n//               style={{\r\n//                 ...styles.button,\r\n//                 ...(selectedAccountId === acc.accountId ? styles.buttonSelected : {}),\r\n//               }}\r\n//               onMouseEnter={(e) => {\r\n//                 if (selectedAccountId !== acc.accountId) {\r\n//                   e.target.style.backgroundColor = '#3730a3';\r\n//                   e.target.style.transform = 'translateY(-2px)';\r\n//                   e.target.style.boxShadow = '0 8px 25px rgba(79, 70, 229, 0.3)';\r\n//                 }\r\n//               }}\r\n//               onMouseLeave={(e) => {\r\n//                 if (selectedAccountId !== acc.accountId) {\r\n//                   e.target.style.backgroundColor = '#4f46e5';\r\n//                   e.target.style.transform = 'translateY(0)';\r\n//                   e.target.style.boxShadow = '0 4px 15px rgba(79, 70, 229, 0.2)';\r\n//                 }\r\n//               }}\r\n//             >\r\n//               {acc.accountHolderName} - {acc.accountNumber}\r\n//             </button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       {selectedAccountId && (\r\n//         <div style={styles.detailsContainer}>\r\n//           <AccountDetails accountId={selectedAccountId} />\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // Enhanced inline style object with attractive modern design\r\n// const styles = {\r\n//   container: {\r\n//     padding: '32px',\r\n//     maxWidth: '900px',\r\n//     margin: '40px auto',\r\n//     background: 'linear-gradient(135deg, #ffffff 0%, #f8fafc 100%)',\r\n//     boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.05)',\r\n//     borderRadius: '24px',\r\n//     fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\r\n//     position: 'relative',\r\n//     overflow: 'hidden',\r\n//   },\r\n//   heading: {\r\n//     textAlign: 'center',\r\n//     background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n//     WebkitBackgroundClip: 'text',\r\n//     WebkitTextFillColor: 'transparent',\r\n//     backgroundClip: 'text',\r\n//     fontSize: '2.5rem',\r\n//     fontWeight: '700',\r\n//     marginBottom: '32px',\r\n//     letterSpacing: '-0.02em',\r\n//     position: 'relative',\r\n//   },\r\n//   list: {\r\n//     listStyle: 'none',\r\n//     padding: 0,\r\n//     margin: 0,\r\n//     display: 'grid',\r\n//     gap: '16px',\r\n//   },\r\n//   listItem: {\r\n//     marginBottom: '0',\r\n//     position: 'relative',\r\n//   },\r\n//   button: {\r\n//     background: 'linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%)',\r\n//     color: '#ffffff',\r\n//     border: 'none',\r\n//     padding: '16px 24px',\r\n//     fontSize: '16px',\r\n//     fontWeight: '500',\r\n//     borderRadius: '16px',\r\n//     cursor: 'pointer',\r\n//     width: '100%',\r\n//     textAlign: 'left',\r\n//     transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n//     position: 'relative',\r\n//     overflow: 'hidden',\r\n//     boxShadow: '0 4px 15px rgba(79, 70, 229, 0.2)',\r\n//     backdropFilter: 'blur(10px)',\r\n//     letterSpacing: '0.01em',\r\n//     lineHeight: '1.5',\r\n//   },\r\n//   buttonSelected: {\r\n//     background: 'linear-gradient(135deg, #059669 0%, #0d9488 100%)',\r\n//     boxShadow: '0 8px 25px rgba(5, 150, 105, 0.3)',\r\n//     transform: 'translateY(-2px)',\r\n//   },\r\n//   message: {\r\n//     textAlign: 'center',\r\n//     color: '#6b7280',\r\n//     fontSize: '18px',\r\n//     fontWeight: '500',\r\n//     padding: '60px 20px',\r\n//     background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\r\n//     borderRadius: '20px',\r\n//     margin: '40px auto',\r\n//     maxWidth: '600px',\r\n//     boxShadow: '0 10px 30px rgba(0, 0, 0, 0.08)',\r\n//     border: '1px solid rgba(255, 255, 255, 0.2)',\r\n//   },\r\n//   detailsContainer: {\r\n//     marginTop: '32px',\r\n//     padding: '24px',\r\n//     background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(248, 250, 252, 0.9) 100%)',\r\n//     borderRadius: '20px',\r\n//     border: '1px solid rgba(255, 255, 255, 0.2)',\r\n//     boxShadow: '0 10px 30px rgba(0, 0, 0, 0.08)',\r\n//     backdropFilter: 'blur(10px)',\r\n//     position: 'relative',\r\n//     overflow: 'hidden',\r\n//   },\r\n// };\r\n\r\n// export default AccountDashboard;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAllAccounts } from '../utils/api';\r\nimport AccountDetails from './AccountDetails';\r\n\r\nfunction AccountDashboard() {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getAllAccounts()\r\n      .then(response => {\r\n        setAccounts(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setError('Failed to load accounts');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) return <p className=\"message\">Loading accounts...</p>;\r\n  if (error) return <p className=\"message error\">{error}</p>;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1 className=\"dashboard-heading\">Account Dashboard</h1>\r\n      <ul className=\"account-list\">\r\n        {accounts.map(acc => (\r\n          <li key={acc.accountId} className=\"account-list-item\">\r\n            <button\r\n              onClick={() => setSelectedAccountId(acc.accountId)}\r\n              className={`account-button ${\r\n                selectedAccountId === acc.accountId ? 'selected' : ''\r\n              }`}\r\n              onMouseEnter={e => {\r\n                if (selectedAccountId !== acc.accountId) {\r\n                  e.currentTarget.classList.add('hovered');\r\n                }\r\n              }}\r\n              onMouseLeave={e => {\r\n                if (selectedAccountId !== acc.accountId) {\r\n                  e.currentTarget.classList.remove('hovered');\r\n                }\r\n              }}\r\n            >\r\n              {acc.accountHolderName} - {acc.accountNumber}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {selectedAccountId && (\r\n        <div className=\"details-container\">\r\n          <AccountDetails accountId={selectedAccountId} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountDashboard;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}