{"ast":null,"code":"// // import React, { useEffect, useState } from 'react';\n// // import { getAccountDetails, getTransactionHistory } from '../utils/api';\n\n// // function AccountDetails({ accountId }) {\n// //   const [account, setAccount] = useState(null);\n// //   const [transactions, setTransactions] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [error, setError] = useState(null);\n\n// //   useEffect(() => {\n// //     async function fetchData() {\n// //       try {\n// //         setLoading(true);\n// //         setError(null);\n\n// //         const accountRes = await getAccountDetails(accountId);\n// //         const transactionsRes = await getTransactionHistory(accountId);\n\n// //         console.log(accountRes.data); // Check key names here\n\n// //         setAccount(accountRes.data);\n// //         setTransactions(transactionsRes.data);\n// //       } catch (err) {\n// //         setError('Failed to load data');\n// //         console.error(err);\n// //       } finally {\n// //         setLoading(false);\n// //       }\n// //     }\n\n// //     fetchData();\n// //   }, [accountId]);\n\n// //   if (loading) return <p>Loading...</p>;\n// //   if (error) return <p>{error}</p>;\n// //   if (!account) return <p>Account not found</p>;\n\n// //   return (\n// //     <div>\n// //       <h2>Account Details</h2>\n// //       <p><strong>Account Number:</strong> {account.accountNumber || account.account_number || 'N/A'}</p>\n// //       <p><strong>Account Holder:</strong> {account.accountHolder || account.holderName || 'N/A'}</p> {/* Updated here */}\n// //       <p><strong>Account Type:</strong> {account.accountType || account.account_type || 'N/A'}</p>\n// //       <p><strong>Balance:</strong> ${Number(account.balance ?? 0).toFixed(2)}</p>\n// //       <p><strong>Created Date:</strong> {account.createdDate || account.created_date ? new Date(account.createdDate || account.created_date).toLocaleDateString() : 'N/A'}</p>\n\n// //       <h3>Transaction History</h3>\n// //       {transactions.length === 0 ? (\n// //         <p>No transactions found.</p>\n// //       ) : (\n// //         <table border=\"1\" cellPadding=\"5\" cellSpacing=\"0\" style={{ width: '100%', marginTop: '1rem' }}>\n// //           <thead>\n// //             <tr>\n// //               <th>Date</th>\n// //               <th>Type</th>\n// //               <th>Amount</th>\n// //               <th>Description</th>\n// //               <th>Recipient Account</th>\n// //             </tr>\n// //           </thead>\n// //           <tbody>\n// //             {transactions.map(txn => (\n// //               <tr key={txn.transactionId || txn.id}>\n// //                 <td>{txn.transactionDate || txn.date ? new Date(txn.transactionDate || txn.date).toLocaleString() : 'N/A'}</td>\n// //                 <td>{txn.transactionType || txn.type || 'N/A'}</td>\n// //                 <td>${Number(txn.amount ?? 0).toFixed(2)}</td>\n// //                 <td>{txn.description || '-'}</td>\n// //                 <td>{txn.recipientAccountId || txn.recipient_account || txn.recipientAccount || '-'}</td>\n// //               </tr>\n// //             ))}\n// //           </tbody>\n// //         </table>\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// // export default AccountDetails;\n\n// import React, { useEffect, useState } from 'react';\n// import { getAccountDetails, getTransactionHistory } from '../utils/api';\n\n// function AccountDetails({ accountId }) {\n//   const [account, setAccount] = useState(null);\n//   const [transactions, setTransactions] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       try {\n//         setLoading(true);\n//         setError(null);\n\n//         const accountRes = await getAccountDetails(accountId);\n//         const transactionsRes = await getTransactionHistory(accountId);\n\n//         setAccount(accountRes.data);\n//         setTransactions(transactionsRes.data);\n//       } catch (err) {\n//         setError('Failed to load data');\n//         console.error(err);\n//       } finally {\n//         setLoading(false);\n//       }\n//     }\n\n//     fetchData();\n//   }, [accountId]);\n\n//   if (loading) return <p style={styles.message}>Loading...</p>;\n//   if (error) return <p style={styles.message}>{error}</p>;\n//   if (!account) return <p style={styles.message}>Account not found</p>;\n\n//   return (\n//     <div style={styles.container}>\n//       <h2 style={styles.heading}>Account Details</h2>\n//       <p><strong>Account Number:</strong> {account.accountNumber || account.account_number || 'N/A'}</p>\n//       <p><strong>Account Holder:</strong> {account.accountHolder || account.holderName || 'N/A'}</p>\n//       <p><strong>Account Type:</strong> {account.accountType || account.account_type || 'N/A'}</p>\n//       <p><strong>Balance:</strong> ${Number(account.balance ?? 0).toFixed(2)}</p>\n//       <p><strong>Created Date:</strong> {account.createdDate || account.created_date ? new Date(account.createdDate || account.created_date).toLocaleDateString() : 'N/A'}</p>\n\n//       <h3 style={styles.subHeading}>Transaction History</h3>\n//       {transactions.length === 0 ? (\n//         <p style={styles.message}>No transactions found.</p>\n//       ) : (\n//         <table style={styles.table}>\n//           <thead>\n//             <tr>\n//               <th style={styles.th}>Date</th>\n//               <th style={styles.th}>Type</th>\n//               <th style={styles.th}>Amount</th>\n//               <th style={styles.th}>Description</th>\n//               <th style={styles.th}>Recipient Account</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {transactions.map(txn => (\n//               <tr key={txn.transactionId || txn.id}>\n//                 <td style={styles.td}>{txn.transactionDate || txn.date ? new Date(txn.transactionDate || txn.date).toLocaleString() : 'N/A'}</td>\n//                 <td style={styles.td}>{txn.transactionType || txn.type || 'N/A'}</td>\n//                 <td style={styles.td}>${Number(txn.amount ?? 0).toFixed(2)}</td>\n//                 <td style={styles.td}>{txn.description || '-'}</td>\n//                 <td style={styles.td}>{txn.recipientAccountId || txn.recipient_account || txn.recipientAccount || '-'}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n// }\n\n// // Inline styles\n// const styles = {\n//   container: {\n//     marginTop: '20px',\n//     padding: '20px',\n//     backgroundColor: '#f8fafc',\n//     border: '1px solid #e2e8f0',\n//     borderRadius: '8px',\n//     fontFamily: 'Arial, sans-serif',\n//   },\n//   heading: {\n//     fontSize: '22px',\n//     color: '#1e293b',\n//     marginBottom: '16px',\n//   },\n//   subHeading: {\n//     fontSize: '18px',\n//     marginTop: '24px',\n//     marginBottom: '12px',\n//     color: '#334155',\n//   },\n//   message: {\n//     color: '#666',\n//     fontSize: '16px',\n//     textAlign: 'center',\n//     margin: '12px 0',\n//   },\n//   table: {\n//     width: '100%',\n//     borderCollapse: 'collapse',\n//     marginTop: '1rem',\n//   },\n//   th: {\n//     backgroundColor: '#e0e7ff',\n//     color: '#1e3a8a',\n//     padding: '8px',\n//     textAlign: 'left',\n//     borderBottom: '1px solid #cbd5e1',\n//   },\n//   td: {\n//     padding: '8px',\n//     borderBottom: '1px solid #e2e8f0',\n//   },\n// };\n\n// export default AccountDetails;","map":{"version":3,"names":[],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/AccountDetails.js"],"sourcesContent":["// // import React, { useEffect, useState } from 'react';\r\n// // import { getAccountDetails, getTransactionHistory } from '../utils/api';\r\n\r\n// // function AccountDetails({ accountId }) {\r\n// //   const [account, setAccount] = useState(null);\r\n// //   const [transactions, setTransactions] = useState([]);\r\n// //   const [loading, setLoading] = useState(true);\r\n// //   const [error, setError] = useState(null);\r\n\r\n// //   useEffect(() => {\r\n// //     async function fetchData() {\r\n// //       try {\r\n// //         setLoading(true);\r\n// //         setError(null);\r\n\r\n// //         const accountRes = await getAccountDetails(accountId);\r\n// //         const transactionsRes = await getTransactionHistory(accountId);\r\n\r\n// //         console.log(accountRes.data); // Check key names here\r\n\r\n// //         setAccount(accountRes.data);\r\n// //         setTransactions(transactionsRes.data);\r\n// //       } catch (err) {\r\n// //         setError('Failed to load data');\r\n// //         console.error(err);\r\n// //       } finally {\r\n// //         setLoading(false);\r\n// //       }\r\n// //     }\r\n\r\n// //     fetchData();\r\n// //   }, [accountId]);\r\n\r\n// //   if (loading) return <p>Loading...</p>;\r\n// //   if (error) return <p>{error}</p>;\r\n// //   if (!account) return <p>Account not found</p>;\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Account Details</h2>\r\n// //       <p><strong>Account Number:</strong> {account.accountNumber || account.account_number || 'N/A'}</p>\r\n// //       <p><strong>Account Holder:</strong> {account.accountHolder || account.holderName || 'N/A'}</p> {/* Updated here */}\r\n// //       <p><strong>Account Type:</strong> {account.accountType || account.account_type || 'N/A'}</p>\r\n// //       <p><strong>Balance:</strong> ${Number(account.balance ?? 0).toFixed(2)}</p>\r\n// //       <p><strong>Created Date:</strong> {account.createdDate || account.created_date ? new Date(account.createdDate || account.created_date).toLocaleDateString() : 'N/A'}</p>\r\n\r\n// //       <h3>Transaction History</h3>\r\n// //       {transactions.length === 0 ? (\r\n// //         <p>No transactions found.</p>\r\n// //       ) : (\r\n// //         <table border=\"1\" cellPadding=\"5\" cellSpacing=\"0\" style={{ width: '100%', marginTop: '1rem' }}>\r\n// //           <thead>\r\n// //             <tr>\r\n// //               <th>Date</th>\r\n// //               <th>Type</th>\r\n// //               <th>Amount</th>\r\n// //               <th>Description</th>\r\n// //               <th>Recipient Account</th>\r\n// //             </tr>\r\n// //           </thead>\r\n// //           <tbody>\r\n// //             {transactions.map(txn => (\r\n// //               <tr key={txn.transactionId || txn.id}>\r\n// //                 <td>{txn.transactionDate || txn.date ? new Date(txn.transactionDate || txn.date).toLocaleString() : 'N/A'}</td>\r\n// //                 <td>{txn.transactionType || txn.type || 'N/A'}</td>\r\n// //                 <td>${Number(txn.amount ?? 0).toFixed(2)}</td>\r\n// //                 <td>{txn.description || '-'}</td>\r\n// //                 <td>{txn.recipientAccountId || txn.recipient_account || txn.recipientAccount || '-'}</td>\r\n// //               </tr>\r\n// //             ))}\r\n// //           </tbody>\r\n// //         </table>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default AccountDetails;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { getAccountDetails, getTransactionHistory } from '../utils/api';\r\n \r\n\r\n// function AccountDetails({ accountId }) {\r\n//   const [account, setAccount] = useState(null);\r\n//   const [transactions, setTransactions] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       try {\r\n//         setLoading(true);\r\n//         setError(null);\r\n\r\n//         const accountRes = await getAccountDetails(accountId);\r\n//         const transactionsRes = await getTransactionHistory(accountId);\r\n\r\n//         setAccount(accountRes.data);\r\n//         setTransactions(transactionsRes.data);\r\n//       } catch (err) {\r\n//         setError('Failed to load data');\r\n//         console.error(err);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     }\r\n\r\n//     fetchData();\r\n//   }, [accountId]);\r\n\r\n//   if (loading) return <p style={styles.message}>Loading...</p>;\r\n//   if (error) return <p style={styles.message}>{error}</p>;\r\n//   if (!account) return <p style={styles.message}>Account not found</p>;\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2 style={styles.heading}>Account Details</h2>\r\n//       <p><strong>Account Number:</strong> {account.accountNumber || account.account_number || 'N/A'}</p>\r\n//       <p><strong>Account Holder:</strong> {account.accountHolder || account.holderName || 'N/A'}</p>\r\n//       <p><strong>Account Type:</strong> {account.accountType || account.account_type || 'N/A'}</p>\r\n//       <p><strong>Balance:</strong> ${Number(account.balance ?? 0).toFixed(2)}</p>\r\n//       <p><strong>Created Date:</strong> {account.createdDate || account.created_date ? new Date(account.createdDate || account.created_date).toLocaleDateString() : 'N/A'}</p>\r\n\r\n//       <h3 style={styles.subHeading}>Transaction History</h3>\r\n//       {transactions.length === 0 ? (\r\n//         <p style={styles.message}>No transactions found.</p>\r\n//       ) : (\r\n//         <table style={styles.table}>\r\n//           <thead>\r\n//             <tr>\r\n//               <th style={styles.th}>Date</th>\r\n//               <th style={styles.th}>Type</th>\r\n//               <th style={styles.th}>Amount</th>\r\n//               <th style={styles.th}>Description</th>\r\n//               <th style={styles.th}>Recipient Account</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {transactions.map(txn => (\r\n//               <tr key={txn.transactionId || txn.id}>\r\n//                 <td style={styles.td}>{txn.transactionDate || txn.date ? new Date(txn.transactionDate || txn.date).toLocaleString() : 'N/A'}</td>\r\n//                 <td style={styles.td}>{txn.transactionType || txn.type || 'N/A'}</td>\r\n//                 <td style={styles.td}>${Number(txn.amount ?? 0).toFixed(2)}</td>\r\n//                 <td style={styles.td}>{txn.description || '-'}</td>\r\n//                 <td style={styles.td}>{txn.recipientAccountId || txn.recipient_account || txn.recipientAccount || '-'}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // Inline styles\r\n// const styles = {\r\n//   container: {\r\n//     marginTop: '20px',\r\n//     padding: '20px',\r\n//     backgroundColor: '#f8fafc',\r\n//     border: '1px solid #e2e8f0',\r\n//     borderRadius: '8px',\r\n//     fontFamily: 'Arial, sans-serif',\r\n//   },\r\n//   heading: {\r\n//     fontSize: '22px',\r\n//     color: '#1e293b',\r\n//     marginBottom: '16px',\r\n//   },\r\n//   subHeading: {\r\n//     fontSize: '18px',\r\n//     marginTop: '24px',\r\n//     marginBottom: '12px',\r\n//     color: '#334155',\r\n//   },\r\n//   message: {\r\n//     color: '#666',\r\n//     fontSize: '16px',\r\n//     textAlign: 'center',\r\n//     margin: '12px 0',\r\n//   },\r\n//   table: {\r\n//     width: '100%',\r\n//     borderCollapse: 'collapse',\r\n//     marginTop: '1rem',\r\n//   },\r\n//   th: {\r\n//     backgroundColor: '#e0e7ff',\r\n//     color: '#1e3a8a',\r\n//     padding: '8px',\r\n//     textAlign: 'left',\r\n//     borderBottom: '1px solid #cbd5e1',\r\n//   },\r\n//   td: {\r\n//     padding: '8px',\r\n//     borderBottom: '1px solid #e2e8f0',\r\n//   },\r\n// };\r\n\r\n// export default AccountDetails;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}