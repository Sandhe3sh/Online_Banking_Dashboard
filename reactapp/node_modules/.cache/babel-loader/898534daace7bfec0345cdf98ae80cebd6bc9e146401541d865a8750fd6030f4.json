{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishnu\\\\project\\\\OnlineBankingDashboard\\\\cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb\\\\reactapp\\\\src\\\\components\\\\DepositForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { depositMoney } from '../utils/api';\n\n// function DepositForm() {\n//   const [accountId, setAccountId] = useState('');\n//   const [amount, setAmount] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await depositMoney({\n//         accountId: parseInt(accountId),\n//         amount: parseFloat(amount),\n//         description,\n//       });\n//       setMessage(`Deposit successful! New balance: ${response.data.balance}`);\n//     } catch (error) {\n//       setMessage(`Deposit failed: ${error.response?.data?.message || error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Deposit Money</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"number\"\n//           placeholder=\"Account ID\"\n//           value={accountId}\n//           onChange={(e) => setAccountId(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"number\"\n//           placeholder=\"Amount\"\n//           value={amount}\n//           onChange={(e) => setAmount(e.target.value)}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Description\"\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           required\n//         />\n//         <button type=\"submit\">Deposit</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default DepositForm;\n\nimport React, { useState } from 'react';\nimport { depositMoney } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DepositForm() {\n  _s();\n  const [accountId, setAccountId] = useState('');\n  const [date, setDate] = useState('');\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    if (!date) {\n      setMessage('Please select a date.');\n      return;\n    }\n    try {\n      const response = await depositMoney({\n        accountId: parseInt(accountId),\n        amount: parseFloat(amount),\n        description,\n        date\n      });\n      setMessage(`Deposit successful! New balance: ${response.data.balance}`);\n\n      // Reset form\n      setAccountId('');\n      setDate('');\n      setAmount('');\n      setDescription('');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(`Deposit failed: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deposit Money\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '1rem',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          fontWeight: 'bold'\n        },\n        children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: \"Deposit\",\n          readOnly: true,\n          style: {\n            width: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true,\n          style: {\n            width: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [\"Account ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Account ID\",\n          value: accountId,\n          onChange: e => setAccountId(e.target.value),\n          required: true,\n          style: {\n            width: '120px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          placeholder: \"Amount\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true,\n          style: {\n            width: '120px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          flex: '1'\n        },\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          height: '38px'\n        },\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(DepositForm, \"QsLq72ZQYomPSyLfnEkZwqLzbIo=\");\n_c = DepositForm;\nexport default DepositForm;\nvar _c;\n$RefreshReg$(_c, \"DepositForm\");","map":{"version":3,"names":["React","useState","depositMoney","jsxDEV","_jsxDEV","DepositForm","_s","accountId","setAccountId","date","setDate","amount","setAmount","description","setDescription","message","setMessage","handleSubmit","e","preventDefault","response","parseInt","parseFloat","data","balance","error","_error$response","_error$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","display","alignItems","gap","flexWrap","flexDirection","fontWeight","type","value","readOnly","width","onChange","target","required","placeholder","min","step","flex","height","_c","$RefreshReg$"],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/DepositForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { depositMoney } from '../utils/api';\r\n\r\n// function DepositForm() {\r\n//   const [accountId, setAccountId] = useState('');\r\n//   const [amount, setAmount] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await depositMoney({\r\n//         accountId: parseInt(accountId),\r\n//         amount: parseFloat(amount),\r\n//         description,\r\n//       });\r\n//       setMessage(`Deposit successful! New balance: ${response.data.balance}`);\r\n//     } catch (error) {\r\n//       setMessage(`Deposit failed: ${error.response?.data?.message || error.message}`);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Deposit Money</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Account ID\"\r\n//           value={accountId}\r\n//           onChange={(e) => setAccountId(e.target.value)}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Amount\"\r\n//           value={amount}\r\n//           onChange={(e) => setAmount(e.target.value)}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Description\"\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           required\r\n//         />\r\n//         <button type=\"submit\">Deposit</button>\r\n//       </form>\r\n//       {message && <p>{message}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default DepositForm;\r\n\r\n import React, { useState } from 'react';\r\nimport { depositMoney } from '../utils/api';\r\n\r\nfunction DepositForm() {\r\n  const [accountId, setAccountId] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n\r\n    if (!date) {\r\n      setMessage('Please select a date.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await depositMoney({\r\n        accountId: parseInt(accountId),\r\n        amount: parseFloat(amount),\r\n        description,\r\n        date,\r\n      });\r\n      setMessage(`Deposit successful! New balance: ${response.data.balance}`);\r\n\r\n      // Reset form\r\n      setAccountId('');\r\n      setDate('');\r\n      setAmount('');\r\n      setDescription('');\r\n    } catch (error) {\r\n      setMessage(`Deposit failed: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Deposit Money</h2>\r\n      <form \r\n        onSubmit={handleSubmit} \r\n        style={{ display: 'flex', alignItems: 'center', gap: '1rem', flexWrap: 'wrap' }}\r\n      >\r\n        <label style={{ display: 'flex', flexDirection: 'column', fontWeight: 'bold' }}>\r\n          Type:\r\n          <input type=\"text\" value=\"Deposit\" readOnly style={{ width: '100px' }} />\r\n        </label>\r\n\r\n        <label style={{ display: 'flex', flexDirection: 'column' }}>\r\n          Date:\r\n          <input\r\n            type=\"date\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            required\r\n            style={{ width: '150px' }}\r\n          />\r\n        </label>\r\n\r\n        <label style={{ display: 'flex', flexDirection: 'column' }}>\r\n          Account ID:\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Account ID\"\r\n            value={accountId}\r\n            onChange={(e) => setAccountId(e.target.value)}\r\n            required\r\n            style={{ width: '120px' }}\r\n          />\r\n        </label>\r\n\r\n        <label style={{ display: 'flex', flexDirection: 'column' }}>\r\n          Amount:\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            placeholder=\"Amount\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            required\r\n            style={{ width: '120px' }}\r\n          />\r\n        </label>\r\n\r\n        <label style={{ display: 'flex', flexDirection: 'column', flex: '1' }}>\r\n          Description:\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            required\r\n            style={{ width: '100%' }}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" style={{ height: '38px' }}>Deposit</button>\r\n      </form>\r\n\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DepositForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}