{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { registerUser } from '../utils/api';\n\n// const styles = {\n//   container: {\n//     maxWidth: '400px',\n//     margin: '50px auto',\n//     padding: 25,\n//     background: '#fff',\n//     boxShadow: '0 0 15px rgba(0,0,0,0.1)',\n//     borderRadius: 8,\n//     fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n//   },\n//   heading: {\n//     textAlign: 'center',\n//     marginBottom: 20,\n//     color: '#333',\n//   },\n//   label: {\n//     display: 'block',\n//     marginBottom: 5,\n//     fontWeight: '600',\n//     color: '#555',\n//   },\n//   input: {\n//     display: 'block',\n//     width: '100%',\n//     marginBottom: 15,\n//     padding: 10,\n//     borderRadius: 6,\n//     border: '1px solid #ccc',\n//     fontSize: '1rem',\n//     outline: 'none',\n//     transition: 'border-color 0.3s ease',\n//   },\n//   inputFocus: {\n//     borderColor: '#28a745',\n//   },\n//   select: {\n//     display: 'block',\n//     width: '100%',\n//     marginBottom: 15,\n//     padding: 10,\n//     borderRadius: 6,\n//     border: '1px solid #ccc',\n//     fontSize: '1rem',\n//   },\n//   button: {\n//     padding: '10px 15px',\n//     backgroundColor: '#28a745',\n//     border: 'none',\n//     color: 'white',\n//     cursor: 'pointer',\n//     width: '100%',\n//     borderRadius: 5,\n//     fontSize: '1rem',\n//     transition: 'background-color 0.3s ease',\n//   },\n//   buttonHover: {\n//     backgroundColor: '#218838',\n//   },\n//   message: {\n//     marginTop: 10,\n//     fontWeight: 600,\n//     textAlign: 'center',\n//   },\n//   switchText: {\n//     marginTop: 15,\n//     textAlign: 'center',\n//     color: '#555',\n//     fontSize: '0.9rem',\n//   },\n//   switchButton: {\n//     background: 'none',\n//     border: 'none',\n//     color: '#007BFF',\n//     cursor: 'pointer',\n//     textDecoration: 'underline',\n//     padding: 0,\n//     fontSize: '1em',\n//   },\n// };\n\n// const RegisterForm = () => {\n//   const navigate = useNavigate();\n//   const [form, setForm] = useState({\n//     username: '',\n//     password: '',\n//     confirmPassword: '',\n//     email: '',\n//     role: '',\n//   });\n//   const [message, setMessage] = useState('');\n//   const [inputFocus, setInputFocus] = useState({});\n//   const [buttonHover, setButtonHover] = useState(false);\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleFocus = (field) => {\n//     setInputFocus({ ...inputFocus, [field]: true });\n//   };\n\n//   const handleBlur = (field) => {\n//     setInputFocus({ ...inputFocus, [field]: false });\n//   };\n\n//   const handleRegister = async (e) => {\n//     e.preventDefault();\n\n//     if (form.password !== form.confirmPassword) {\n//       setMessage(\"Passwords don't match\");\n//       return;\n//     }\n\n//     const { username, password, email, role } = form;\n//     const payload = { username, password, email, role };\n\n//     try {\n//       console.log('Register payload:', payload); // Debug\n//       await registerUser(payload);\n//       setMessage('User registered successfully. Redirecting to login...');\n//       setTimeout(() => navigate('/'), 2000);\n//     } catch (error) {\n//       console.error('Registration error:', error);\n//       if (error.response) {\n//         // Server responded with a status outside 2xx\n//         setMessage(error.response.data.message || 'Registration failed. Please try again.');\n//       } else if (error.request) {\n//         // Request made but no response received\n//         setMessage('No response from server. Please check your connection.');\n//       } else {\n//         // Something else happened\n//         setMessage(error.message || 'Registration failed.');\n//       }\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2 style={styles.heading}>Register New User</h2>\n//       <form onSubmit={handleRegister} noValidate>\n//         <label style={styles.label} htmlFor=\"username\">Username*</label>\n//         <input\n//           id=\"username\"\n//           type=\"text\"\n//           name=\"username\"\n//           placeholder=\"Enter username\"\n//           value={form.username}\n//           onChange={handleChange}\n//           required\n//           onFocus={() => handleFocus('username')}\n//           onBlur={() => handleBlur('username')}\n//           style={{\n//             ...styles.input,\n//             ...(inputFocus.username ? styles.inputFocus : {}),\n//           }}\n//           autoComplete=\"username\"\n//           aria-required=\"true\"\n//         />\n\n//         <label style={styles.label} htmlFor=\"password\">Password*</label>\n//         <input\n//           id=\"password\"\n//           type=\"password\"\n//           name=\"password\"\n//           placeholder=\"Enter password\"\n//           value={form.password}\n//           onChange={handleChange}\n//           required\n//           onFocus={() => handleFocus('password')}\n//           onBlur={() => handleBlur('password')}\n//           style={{\n//             ...styles.input,\n//             ...(inputFocus.password ? styles.inputFocus : {}),\n//           }}\n//           autoComplete=\"new-password\"\n//           aria-required=\"true\"\n//         />\n\n//         <label style={styles.label} htmlFor=\"confirmPassword\">Confirm Password*</label>\n//         <input\n//           id=\"confirmPassword\"\n//           type=\"password\"\n//           name=\"confirmPassword\"\n//           placeholder=\"Re-enter password\"\n//           value={form.confirmPassword}\n//           onChange={handleChange}\n//           required\n//           onFocus={() => handleFocus('confirmPassword')}\n//           onBlur={() => handleBlur('confirmPassword')}\n//           style={{\n//             ...styles.input,\n//             ...(inputFocus.confirmPassword ? styles.inputFocus : {}),\n//           }}\n//           autoComplete=\"new-password\"\n//           aria-required=\"true\"\n//         />\n\n//         <label style={styles.label} htmlFor=\"email\">Email*</label>\n//         <input\n//           id=\"email\"\n//           type=\"email\"\n//           name=\"email\"\n//           placeholder=\"Enter email\"\n//           value={form.email}\n//           onChange={handleChange}\n//           required\n//           onFocus={() => handleFocus('email')}\n//           onBlur={() => handleBlur('email')}\n//           style={{\n//             ...styles.input,\n//             ...(inputFocus.email ? styles.inputFocus : {}),\n//           }}\n//           autoComplete=\"email\"\n//           aria-required=\"true\"\n//         />\n\n//         <label style={styles.label} htmlFor=\"role\">Role*</label>\n//         <select\n//           id=\"role\"\n//           name=\"role\"\n//           value={form.role}\n//           onChange={handleChange}\n//           required\n//           style={styles.select}\n//           aria-required=\"true\"\n//         >\n//           <option value=\"\" disabled>Select role</option>\n//           <option value=\"USER\">USER</option>\n//           <option value=\"ADMIN\">ADMIN</option>\n//         </select>\n\n//         <button\n//           type=\"submit\"\n//           style={{\n//             ...styles.button,\n//             ...(buttonHover ? { backgroundColor: '#218838' } : {}),\n//           }}\n//           onMouseEnter={() => setButtonHover(true)}\n//           onMouseLeave={() => setButtonHover(false)}\n//           aria-label=\"Register\"\n//         >\n//           Register\n//         </button>\n//       </form>\n\n//       {message && (\n//         <p\n//           role=\"alert\"\n//           style={{\n//             ...styles.message,\n//             color: message.toLowerCase().includes('success') ? 'green' : 'red',\n//           }}\n//         >\n//           {message}\n//         </p>\n//       )}\n\n//       <p style={styles.switchText}>\n//         Already have an account?{' '}\n//         <button\n//           onClick={() => navigate('/')}\n//           style={styles.switchButton}\n//           aria-label=\"Navigate to Login\"\n//           type=\"button\"\n//         >\n//           Login here\n//         </button>\n//       </p>\n//     </div>\n//   );\n// };\n\n// export default RegisterForm;","map":{"version":3,"names":[],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/RegisterForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { registerUser } from '../utils/api';\r\n\r\n// const styles = {\r\n//   container: {\r\n//     maxWidth: '400px',\r\n//     margin: '50px auto',\r\n//     padding: 25,\r\n//     background: '#fff',\r\n//     boxShadow: '0 0 15px rgba(0,0,0,0.1)',\r\n//     borderRadius: 8,\r\n//     fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n//   },\r\n//   heading: {\r\n//     textAlign: 'center',\r\n//     marginBottom: 20,\r\n//     color: '#333',\r\n//   },\r\n//   label: {\r\n//     display: 'block',\r\n//     marginBottom: 5,\r\n//     fontWeight: '600',\r\n//     color: '#555',\r\n//   },\r\n//   input: {\r\n//     display: 'block',\r\n//     width: '100%',\r\n//     marginBottom: 15,\r\n//     padding: 10,\r\n//     borderRadius: 6,\r\n//     border: '1px solid #ccc',\r\n//     fontSize: '1rem',\r\n//     outline: 'none',\r\n//     transition: 'border-color 0.3s ease',\r\n//   },\r\n//   inputFocus: {\r\n//     borderColor: '#28a745',\r\n//   },\r\n//   select: {\r\n//     display: 'block',\r\n//     width: '100%',\r\n//     marginBottom: 15,\r\n//     padding: 10,\r\n//     borderRadius: 6,\r\n//     border: '1px solid #ccc',\r\n//     fontSize: '1rem',\r\n//   },\r\n//   button: {\r\n//     padding: '10px 15px',\r\n//     backgroundColor: '#28a745',\r\n//     border: 'none',\r\n//     color: 'white',\r\n//     cursor: 'pointer',\r\n//     width: '100%',\r\n//     borderRadius: 5,\r\n//     fontSize: '1rem',\r\n//     transition: 'background-color 0.3s ease',\r\n//   },\r\n//   buttonHover: {\r\n//     backgroundColor: '#218838',\r\n//   },\r\n//   message: {\r\n//     marginTop: 10,\r\n//     fontWeight: 600,\r\n//     textAlign: 'center',\r\n//   },\r\n//   switchText: {\r\n//     marginTop: 15,\r\n//     textAlign: 'center',\r\n//     color: '#555',\r\n//     fontSize: '0.9rem',\r\n//   },\r\n//   switchButton: {\r\n//     background: 'none',\r\n//     border: 'none',\r\n//     color: '#007BFF',\r\n//     cursor: 'pointer',\r\n//     textDecoration: 'underline',\r\n//     padding: 0,\r\n//     fontSize: '1em',\r\n//   },\r\n// };\r\n\r\n// const RegisterForm = () => {\r\n//   const navigate = useNavigate();\r\n//   const [form, setForm] = useState({\r\n//     username: '',\r\n//     password: '',\r\n//     confirmPassword: '',\r\n//     email: '',\r\n//     role: '',\r\n//   });\r\n//   const [message, setMessage] = useState('');\r\n//   const [inputFocus, setInputFocus] = useState({});\r\n//   const [buttonHover, setButtonHover] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleFocus = (field) => {\r\n//     setInputFocus({ ...inputFocus, [field]: true });\r\n//   };\r\n\r\n//   const handleBlur = (field) => {\r\n//     setInputFocus({ ...inputFocus, [field]: false });\r\n//   };\r\n\r\n//   const handleRegister = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (form.password !== form.confirmPassword) {\r\n//       setMessage(\"Passwords don't match\");\r\n//       return;\r\n//     }\r\n\r\n//     const { username, password, email, role } = form;\r\n//     const payload = { username, password, email, role };\r\n\r\n//     try {\r\n//       console.log('Register payload:', payload); // Debug\r\n//       await registerUser(payload);\r\n//       setMessage('User registered successfully. Redirecting to login...');\r\n//       setTimeout(() => navigate('/'), 2000);\r\n//     } catch (error) {\r\n//       console.error('Registration error:', error);\r\n//       if (error.response) {\r\n//         // Server responded with a status outside 2xx\r\n//         setMessage(error.response.data.message || 'Registration failed. Please try again.');\r\n//       } else if (error.request) {\r\n//         // Request made but no response received\r\n//         setMessage('No response from server. Please check your connection.');\r\n//       } else {\r\n//         // Something else happened\r\n//         setMessage(error.message || 'Registration failed.');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2 style={styles.heading}>Register New User</h2>\r\n//       <form onSubmit={handleRegister} noValidate>\r\n//         <label style={styles.label} htmlFor=\"username\">Username*</label>\r\n//         <input\r\n//           id=\"username\"\r\n//           type=\"text\"\r\n//           name=\"username\"\r\n//           placeholder=\"Enter username\"\r\n//           value={form.username}\r\n//           onChange={handleChange}\r\n//           required\r\n//           onFocus={() => handleFocus('username')}\r\n//           onBlur={() => handleBlur('username')}\r\n//           style={{\r\n//             ...styles.input,\r\n//             ...(inputFocus.username ? styles.inputFocus : {}),\r\n//           }}\r\n//           autoComplete=\"username\"\r\n//           aria-required=\"true\"\r\n//         />\r\n\r\n//         <label style={styles.label} htmlFor=\"password\">Password*</label>\r\n//         <input\r\n//           id=\"password\"\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           placeholder=\"Enter password\"\r\n//           value={form.password}\r\n//           onChange={handleChange}\r\n//           required\r\n//           onFocus={() => handleFocus('password')}\r\n//           onBlur={() => handleBlur('password')}\r\n//           style={{\r\n//             ...styles.input,\r\n//             ...(inputFocus.password ? styles.inputFocus : {}),\r\n//           }}\r\n//           autoComplete=\"new-password\"\r\n//           aria-required=\"true\"\r\n//         />\r\n\r\n//         <label style={styles.label} htmlFor=\"confirmPassword\">Confirm Password*</label>\r\n//         <input\r\n//           id=\"confirmPassword\"\r\n//           type=\"password\"\r\n//           name=\"confirmPassword\"\r\n//           placeholder=\"Re-enter password\"\r\n//           value={form.confirmPassword}\r\n//           onChange={handleChange}\r\n//           required\r\n//           onFocus={() => handleFocus('confirmPassword')}\r\n//           onBlur={() => handleBlur('confirmPassword')}\r\n//           style={{\r\n//             ...styles.input,\r\n//             ...(inputFocus.confirmPassword ? styles.inputFocus : {}),\r\n//           }}\r\n//           autoComplete=\"new-password\"\r\n//           aria-required=\"true\"\r\n//         />\r\n\r\n//         <label style={styles.label} htmlFor=\"email\">Email*</label>\r\n//         <input\r\n//           id=\"email\"\r\n//           type=\"email\"\r\n//           name=\"email\"\r\n//           placeholder=\"Enter email\"\r\n//           value={form.email}\r\n//           onChange={handleChange}\r\n//           required\r\n//           onFocus={() => handleFocus('email')}\r\n//           onBlur={() => handleBlur('email')}\r\n//           style={{\r\n//             ...styles.input,\r\n//             ...(inputFocus.email ? styles.inputFocus : {}),\r\n//           }}\r\n//           autoComplete=\"email\"\r\n//           aria-required=\"true\"\r\n//         />\r\n\r\n//         <label style={styles.label} htmlFor=\"role\">Role*</label>\r\n//         <select\r\n//           id=\"role\"\r\n//           name=\"role\"\r\n//           value={form.role}\r\n//           onChange={handleChange}\r\n//           required\r\n//           style={styles.select}\r\n//           aria-required=\"true\"\r\n//         >\r\n//           <option value=\"\" disabled>Select role</option>\r\n//           <option value=\"USER\">USER</option>\r\n//           <option value=\"ADMIN\">ADMIN</option>\r\n//         </select>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           style={{\r\n//             ...styles.button,\r\n//             ...(buttonHover ? { backgroundColor: '#218838' } : {}),\r\n//           }}\r\n//           onMouseEnter={() => setButtonHover(true)}\r\n//           onMouseLeave={() => setButtonHover(false)}\r\n//           aria-label=\"Register\"\r\n//         >\r\n//           Register\r\n//         </button>\r\n//       </form>\r\n\r\n//       {message && (\r\n//         <p\r\n//           role=\"alert\"\r\n//           style={{\r\n//             ...styles.message,\r\n//             color: message.toLowerCase().includes('success') ? 'green' : 'red',\r\n//           }}\r\n//         >\r\n//           {message}\r\n//         </p>\r\n//       )}\r\n\r\n//       <p style={styles.switchText}>\r\n//         Already have an account?{' '}\r\n//         <button\r\n//           onClick={() => navigate('/')}\r\n//           style={styles.switchButton}\r\n//           aria-label=\"Navigate to Login\"\r\n//           type=\"button\"\r\n//         >\r\n//           Login here\r\n//         </button>\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RegisterForm;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}