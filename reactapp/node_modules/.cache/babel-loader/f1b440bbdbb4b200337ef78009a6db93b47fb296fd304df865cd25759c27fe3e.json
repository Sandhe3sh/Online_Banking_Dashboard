{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishnu\\\\project\\\\OnlineBankingDashboard\\\\cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb\\\\reactapp\\\\src\\\\components\\\\AccountDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { getAllAccounts } from '../utils/api';\n// import AccountDetails from './AccountDetails'; // assuming you have this\n\n// function AccountDashboard() {\n//   const [accounts, setAccounts] = useState([]);\n//   const [selectedAccountId, setSelectedAccountId] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     getAllAccounts()\n//       .then(response => {\n//         setAccounts(response.data);\n//         setLoading(false);\n//       })\n//       .catch(() => {\n//         setError('Failed to load accounts');\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) return <p>Loading accounts...</p>;\n//   if (error) return <p>{error}</p>;\n\n//   return (\n//     <div>\n//       <h1>Account Dashboard</h1>\n//       <ul>\n//         {accounts.map(acc => (\n//           <li key={acc.accountId}>\n//             <button onClick={() => setSelectedAccountId(acc.accountId)}>\n//               {acc.accountHolderName} - {acc.accountNumber}\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       {selectedAccountId && <AccountDetails accountId={selectedAccountId} />}\n//     </div>\n//   );\n// }\n\n// export default AccountDashboard;\n\nimport React, { useEffect, useState } from 'react';\nimport { getAllAccounts } from '../utils/api';\nimport AccountDetails from './AccountDetails';\n// assuming you have this\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountDashboard() {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getAllAccounts().then(response => {\n      setAccounts(response.data);\n      setLoading(false);\n    }).catch(() => {\n      setError('Failed to load accounts');\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: styles.message,\n    children: \"Loading accounts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: styles.message,\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.heading,\n      children: \"Account Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: styles.list,\n      children: accounts.map(acc => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.listItem,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedAccountId(acc.accountId),\n          style: styles.button,\n          children: [acc.accountHolderName, \" - \", acc.accountNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, acc.accountId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), selectedAccountId && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.detailsContainer,\n      children: /*#__PURE__*/_jsxDEV(AccountDetails, {\n        accountId: selectedAccountId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n// Inline style object\n_s(AccountDashboard, \"dDTfXPu7rO8EOpPWOgoDY2CLq38=\");\n_c = AccountDashboard;\nconst styles = {\n  container: {\n    padding: '20px',\n    maxWidth: '800px',\n    margin: '40px auto',\n    backgroundColor: '#ffffff',\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\n    borderRadius: '8px',\n    fontFamily: 'Arial, sans-serif'\n  },\n  heading: {\n    textAlign: 'center',\n    color: '#333',\n    marginBottom: '24px'\n  },\n  list: {\n    listStyle: 'none',\n    padding: 0\n  },\n  listItem: {\n    marginBottom: '12px'\n  },\n  button: {\n    backgroundColor: '#4f46e5',\n    color: '#ffffff',\n    border: 'none',\n    padding: '10px 16px',\n    fontSize: '16px',\n    borderRadius: '6px',\n    cursor: 'pointer',\n    width: '100%',\n    textAlign: 'left',\n    transition: 'background-color 0.3s ease'\n  },\n  message: {\n    textAlign: 'center',\n    color: '#666',\n    fontSize: '16px'\n  },\n  detailsContainer: {\n    marginTop: '20px'\n  }\n};\nexport default AccountDashboard;\nvar _c;\n$RefreshReg$(_c, \"AccountDashboard\");","map":{"version":3,"names":["React","useEffect","useState","getAllAccounts","AccountDetails","jsxDEV","_jsxDEV","AccountDashboard","_s","accounts","setAccounts","selectedAccountId","setSelectedAccountId","loading","setLoading","error","setError","then","response","data","catch","style","styles","message","children","fileName","_jsxFileName","lineNumber","columnNumber","container","heading","list","map","acc","listItem","onClick","accountId","button","accountHolderName","accountNumber","detailsContainer","_c","padding","maxWidth","margin","backgroundColor","boxShadow","borderRadius","fontFamily","textAlign","color","marginBottom","listStyle","border","fontSize","cursor","width","transition","marginTop","$RefreshReg$"],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/AccountDashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { getAllAccounts } from '../utils/api';\r\n// import AccountDetails from './AccountDetails'; // assuming you have this\r\n\r\n// function AccountDashboard() {\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     getAllAccounts()\r\n//       .then(response => {\r\n//         setAccounts(response.data);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch(() => {\r\n//         setError('Failed to load accounts');\r\n//         setLoading(false);\r\n//       });\r\n//   }, []);\r\n\r\n//   if (loading) return <p>Loading accounts...</p>;\r\n//   if (error) return <p>{error}</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Account Dashboard</h1>\r\n//       <ul>\r\n//         {accounts.map(acc => (\r\n//           <li key={acc.accountId}>\r\n//             <button onClick={() => setSelectedAccountId(acc.accountId)}>\r\n//               {acc.accountHolderName} - {acc.accountNumber}\r\n//             </button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       {selectedAccountId && <AccountDetails accountId={selectedAccountId} />}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AccountDashboard;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAllAccounts } from '../utils/api';\r\nimport AccountDetails from './AccountDetails';\r\n // assuming you have this\r\n\r\nfunction AccountDashboard() {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getAllAccounts()\r\n      .then(response => {\r\n        setAccounts(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setError('Failed to load accounts');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) return <p style={styles.message}>Loading accounts...</p>;\r\n  if (error) return <p style={styles.message}>{error}</p>;\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.heading}>Account Dashboard</h1>\r\n      <ul style={styles.list}>\r\n        {accounts.map(acc => (\r\n          <li key={acc.accountId} style={styles.listItem}>\r\n            <button\r\n              onClick={() => setSelectedAccountId(acc.accountId)}\r\n              style={styles.button}\r\n            >\r\n              {acc.accountHolderName} - {acc.accountNumber}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {selectedAccountId && (\r\n        <div style={styles.detailsContainer}>\r\n          <AccountDetails accountId={selectedAccountId} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Inline style object\r\nconst styles = {\r\n  container: {\r\n    padding: '20px',\r\n    maxWidth: '800px',\r\n    margin: '40px auto',\r\n    backgroundColor: '#ffffff',\r\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\r\n    borderRadius: '8px',\r\n    fontFamily: 'Arial, sans-serif',\r\n  },\r\n  heading: {\r\n    textAlign: 'center',\r\n    color: '#333',\r\n    marginBottom: '24px',\r\n  },\r\n  list: {\r\n    listStyle: 'none',\r\n    padding: 0,\r\n  },\r\n  listItem: {\r\n    marginBottom: '12px',\r\n  },\r\n  button: {\r\n    backgroundColor: '#4f46e5',\r\n    color: '#ffffff',\r\n    border: 'none',\r\n    padding: '10px 16px',\r\n    fontSize: '16px',\r\n    borderRadius: '6px',\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    textAlign: 'left',\r\n    transition: 'background-color 0.3s ease',\r\n  },\r\n  message: {\r\n    textAlign: 'center',\r\n    color: '#666',\r\n    fontSize: '16px',\r\n  },\r\n  detailsContainer: {\r\n    marginTop: '20px',\r\n  },\r\n};\r\n\r\nexport default AccountDashboard;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}