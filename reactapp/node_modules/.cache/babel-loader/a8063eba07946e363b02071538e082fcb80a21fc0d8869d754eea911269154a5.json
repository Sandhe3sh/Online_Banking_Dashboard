{"ast":null,"code":"// // import React, { useState } from 'react';\n// // import { withdrawMoney } from '../utils/api';\n\n// // function WithdrawForm() {\n// //   const [accountId, setAccountId] = useState('');\n// //   const [amount, setAmount] = useState('');\n// //   const [description, setDescription] = useState('');\n// //   const [message, setMessage] = useState('');\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setMessage('');\n// //     try {\n// //       const response = await withdrawMoney({\n// //         accountId: parseInt(accountId),\n// //         amount: parseFloat(amount),\n// //         description,\n// //       });\n// //       setMessage(`Withdrawal successful! New balance: ${response.data.balance}`);\n// //     } catch (error) {\n// //       setMessage(`Withdrawal failed: ${error.response?.data?.message || error.message}`);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Withdraw Money</h2>\n// //       <form onSubmit={handleSubmit}>\n// //         <input\n// //           type=\"number\"\n// //           placeholder=\"Account ID\"\n// //           value={accountId}\n// //           onChange={(e) => setAccountId(e.target.value)}\n// //           required\n// //         />\n// //         <input\n// //           type=\"number\"\n// //           placeholder=\"Amount\"\n// //           value={amount}\n// //           onChange={(e) => setAmount(e.target.value)}\n// //           required\n// //         />\n// //         <input\n// //           type=\"text\"\n// //           placeholder=\"Description\"\n// //           value={description}\n// //           onChange={(e) => setDescription(e.target.value)}\n// //           required\n// //         />\n// //         <button type=\"submit\">Withdraw</button>\n// //       </form>\n// //       {message && <p>{message}</p>}\n// //     </div>\n// //   );\n// // }\n\n// // export default WithdrawForm;\n\n// import React, { useState } from 'react';\n// import { withdrawMoney } from '../utils/api';\n\n// function WithdrawForm() {\n//   const [accountId, setAccountId] = useState('');\n//   const [date, setDate] = useState('');\n//   const [amount, setAmount] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setMessage('');\n\n//     if (!date) {\n//       setMessage('Please select a date.');\n//       return;\n//     }\n\n//     try {\n//       const response = await withdrawMoney({\n//         accountId: parseInt(accountId),\n//         amount: parseFloat(amount),\n//         description,\n//         date, // pass date if your API supports it\n//       });\n//       setMessage(`Withdrawal successful! New balance: ${response.data.balance}`);\n//       // Reset form fields if needed\n//       setAccountId('');\n//       setDate('');\n//       setAmount('');\n//       setDescription('');\n//     } catch (error) {\n//       setMessage(`Withdrawal failed: ${error.response?.data?.message || error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Withdraw Money</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>\n//             Type: <br />\n//             <input type=\"text\" value=\"Withdraw\" readOnly />\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             Date: <br />\n//             <input\n//               type=\"date\"\n//               value={date}\n//               onChange={(e) => setDate(e.target.value)}\n//               required\n//             />\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             Account ID: <br />\n//             <input\n//               type=\"number\"\n//               placeholder=\"Account ID\"\n//               value={accountId}\n//               onChange={(e) => setAccountId(e.target.value)}\n//               required\n//             />\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             Amount: <br />\n//             <input\n//               type=\"number\"\n//               placeholder=\"Amount\"\n//               value={amount}\n//               onChange={(e) => setAmount(e.target.value)}\n//               required\n//               min=\"0.01\"\n//               step=\"0.01\"\n//             />\n//           </label>\n//         </div>\n//         <div>\n//           <label>\n//             Description: <br />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Description\"\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               required\n//             />\n//           </label>\n//         </div>\n//         <button type=\"submit\">Withdraw</button>\n//       </form>\n//       {message && <p>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default WithdrawForm;\n\n// import React, { useState } from 'react';\n// import { withdrawMoney } from '../utils/api';\n\n// function WithdrawForm() {\n//   const [accountId, setAccountId] = useState('');\n//   const [date, setDate] = useState('');\n//   const [amount, setAmount] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [message, setMessage] = useState('');\n\n//   const styles = {\n//     form: {\n//       maxWidth: '400px',\n//       margin: '20px auto',\n//       padding: '20px',\n//       border: '1px solid #ddd',\n//       borderRadius: '8px',\n//       backgroundColor: '#fafafa',\n//       boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n//       fontFamily: 'Arial, sans-serif',\n//     },\n//     formGroup: {\n//       marginBottom: '15px',\n//     },\n//     label: {\n//       fontWeight: '600',\n//       color: '#333',\n//       display: 'block',\n//       marginBottom: '5px',\n//     },\n//     input: {\n//       width: '100%',\n//       padding: '8px 10px',\n//       border: '1px solid #ccc',\n//       borderRadius: '5px',\n//       fontSize: '14px',\n//       boxSizing: 'border-box',\n//     },\n//     inputFocus: {\n//       borderColor: '#007bff',\n//       outline: 'none',\n//     },\n//     inputReadonly: {\n//       backgroundColor: '#e9ecef',\n//       cursor: 'not-allowed',\n//     },\n//     button: {\n//       backgroundColor: '#007bff',\n//       border: 'none',\n//       padding: '10px 18px',\n//       color: 'white',\n//       fontWeight: '600',\n//       fontSize: '16px',\n//       borderRadius: '5px',\n//       cursor: 'pointer',\n//       width: '100%',\n//     },\n//     buttonHover: {\n//       backgroundColor: '#0056b3',\n//     },\n//     message: {\n//       maxWidth: '400px',\n//       margin: '10px auto 0',\n//       fontWeight: '600',\n//       color: '#333',\n//     },\n//   };\n\n//   return (\n//     <div>\n//       <h2 style={{ textAlign: 'center' }}>Withdraw Money</h2>\n//       <form\n//         onSubmit={async (e) => {\n//           e.preventDefault();\n//           setMessage('');\n//           if (!date) {\n//             setMessage('Please select a date.');\n//             return;\n//           }\n//           try {\n//             const response = await withdrawMoney({\n//               accountId: parseInt(accountId),\n//               amount: parseFloat(amount),\n//               description,\n//               date,\n//             });\n//             setMessage(`Withdrawal successful! New balance: ${response.data.balance}`);\n//             setAccountId('');\n//             setDate('');\n//             setAmount('');\n//             setDescription('');\n//           } catch (error) {\n//             setMessage(`Withdrawal failed: ${error.response?.data?.message || error.message}`);\n//           }\n//         }}\n//         style={styles.form}\n//       >\n//         <div style={styles.formGroup}>\n//           <label style={styles.label}>Type:</label>\n//           <input\n//             type=\"text\"\n//             value=\"Withdraw\"\n//             readOnly\n//             style={{ ...styles.input, ...styles.inputReadonly }}\n//           />\n//         </div>\n\n//         <div style={styles.formGroup}>\n//           <label style={styles.label}>Date:</label>\n//           <input\n//             type=\"date\"\n//             value={date}\n//             onChange={(e) => setDate(e.target.value)}\n//             required\n//             style={styles.input}\n//           />\n//         </div>\n\n//         <div style={styles.formGroup}>\n//           <label style={styles.label}>Account ID:</label>\n//           <input\n//             type=\"number\"\n//             placeholder=\"Account ID\"\n//             value={accountId}\n//             onChange={(e) => setAccountId(e.target.value)}\n//             required\n//             style={styles.input}\n//           />\n//         </div>\n\n//         <div style={styles.formGroup}>\n//           <label style={styles.label}>Amount:</label>\n//           <input\n//             type=\"number\"\n//             placeholder=\"Amount\"\n//             value={amount}\n//             onChange={(e) => setAmount(e.target.value)}\n//             required\n//             min=\"0.01\"\n//             step=\"0.01\"\n//             style={styles.input}\n//           />\n//         </div>\n\n//         <div style={styles.formGroup}>\n//           <label style={styles.label}>Description:</label>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Description\"\n//             value={description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             required\n//             style={styles.input}\n//           />\n//         </div>\n\n//         <button type=\"submit\" style={styles.button}>\n//           Withdraw\n//         </button>\n//       </form>\n\n//       {message && <p style={styles.message}>{message}</p>}\n//     </div>\n//   );\n// }\n\n// export default WithdrawForm;","map":{"version":3,"names":[],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/WithdrawForm.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import { withdrawMoney } from '../utils/api';\r\n\r\n// // function WithdrawForm() {\r\n// //   const [accountId, setAccountId] = useState('');\r\n// //   const [amount, setAmount] = useState('');\r\n// //   const [description, setDescription] = useState('');\r\n// //   const [message, setMessage] = useState('');\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setMessage('');\r\n// //     try {\r\n// //       const response = await withdrawMoney({\r\n// //         accountId: parseInt(accountId),\r\n// //         amount: parseFloat(amount),\r\n// //         description,\r\n// //       });\r\n// //       setMessage(`Withdrawal successful! New balance: ${response.data.balance}`);\r\n// //     } catch (error) {\r\n// //       setMessage(`Withdrawal failed: ${error.response?.data?.message || error.message}`);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Withdraw Money</h2>\r\n// //       <form onSubmit={handleSubmit}>\r\n// //         <input\r\n// //           type=\"number\"\r\n// //           placeholder=\"Account ID\"\r\n// //           value={accountId}\r\n// //           onChange={(e) => setAccountId(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <input\r\n// //           type=\"number\"\r\n// //           placeholder=\"Amount\"\r\n// //           value={amount}\r\n// //           onChange={(e) => setAmount(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <input\r\n// //           type=\"text\"\r\n// //           placeholder=\"Description\"\r\n// //           value={description}\r\n// //           onChange={(e) => setDescription(e.target.value)}\r\n// //           required\r\n// //         />\r\n// //         <button type=\"submit\">Withdraw</button>\r\n// //       </form>\r\n// //       {message && <p>{message}</p>}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default WithdrawForm;\r\n\r\n// import React, { useState } from 'react';\r\n// import { withdrawMoney } from '../utils/api';\r\n\r\n// function WithdrawForm() {\r\n//   const [accountId, setAccountId] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [amount, setAmount] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setMessage('');\r\n\r\n//     if (!date) {\r\n//       setMessage('Please select a date.');\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await withdrawMoney({\r\n//         accountId: parseInt(accountId),\r\n//         amount: parseFloat(amount),\r\n//         description,\r\n//         date, // pass date if your API supports it\r\n//       });\r\n//       setMessage(`Withdrawal successful! New balance: ${response.data.balance}`);\r\n//       // Reset form fields if needed\r\n//       setAccountId('');\r\n//       setDate('');\r\n//       setAmount('');\r\n//       setDescription('');\r\n//     } catch (error) {\r\n//       setMessage(`Withdrawal failed: ${error.response?.data?.message || error.message}`);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Withdraw Money</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>\r\n//             Type: <br />\r\n//             <input type=\"text\" value=\"Withdraw\" readOnly />\r\n//           </label>\r\n//         </div>\r\n//         <div>\r\n//           <label>\r\n//             Date: <br />\r\n//             <input\r\n//               type=\"date\"\r\n//               value={date}\r\n//               onChange={(e) => setDate(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n//         <div>\r\n//           <label>\r\n//             Account ID: <br />\r\n//             <input\r\n//               type=\"number\"\r\n//               placeholder=\"Account ID\"\r\n//               value={accountId}\r\n//               onChange={(e) => setAccountId(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n//         <div>\r\n//           <label>\r\n//             Amount: <br />\r\n//             <input\r\n//               type=\"number\"\r\n//               placeholder=\"Amount\"\r\n//               value={amount}\r\n//               onChange={(e) => setAmount(e.target.value)}\r\n//               required\r\n//               min=\"0.01\"\r\n//               step=\"0.01\"\r\n//             />\r\n//           </label>\r\n//         </div>\r\n//         <div>\r\n//           <label>\r\n//             Description: <br />\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Description\"\r\n//               value={description}\r\n//               onChange={(e) => setDescription(e.target.value)}\r\n//               required\r\n//             />\r\n//           </label>\r\n//         </div>\r\n//         <button type=\"submit\">Withdraw</button>\r\n//       </form>\r\n//       {message && <p>{message}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default WithdrawForm;\r\n\r\n// import React, { useState } from 'react';\r\n// import { withdrawMoney } from '../utils/api';\r\n\r\n// function WithdrawForm() {\r\n//   const [accountId, setAccountId] = useState('');\r\n//   const [date, setDate] = useState('');\r\n//   const [amount, setAmount] = useState('');\r\n//   const [description, setDescription] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n\r\n//   const styles = {\r\n//     form: {\r\n//       maxWidth: '400px',\r\n//       margin: '20px auto',\r\n//       padding: '20px',\r\n//       border: '1px solid #ddd',\r\n//       borderRadius: '8px',\r\n//       backgroundColor: '#fafafa',\r\n//       boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n//       fontFamily: 'Arial, sans-serif',\r\n//     },\r\n//     formGroup: {\r\n//       marginBottom: '15px',\r\n//     },\r\n//     label: {\r\n//       fontWeight: '600',\r\n//       color: '#333',\r\n//       display: 'block',\r\n//       marginBottom: '5px',\r\n//     },\r\n//     input: {\r\n//       width: '100%',\r\n//       padding: '8px 10px',\r\n//       border: '1px solid #ccc',\r\n//       borderRadius: '5px',\r\n//       fontSize: '14px',\r\n//       boxSizing: 'border-box',\r\n//     },\r\n//     inputFocus: {\r\n//       borderColor: '#007bff',\r\n//       outline: 'none',\r\n//     },\r\n//     inputReadonly: {\r\n//       backgroundColor: '#e9ecef',\r\n//       cursor: 'not-allowed',\r\n//     },\r\n//     button: {\r\n//       backgroundColor: '#007bff',\r\n//       border: 'none',\r\n//       padding: '10px 18px',\r\n//       color: 'white',\r\n//       fontWeight: '600',\r\n//       fontSize: '16px',\r\n//       borderRadius: '5px',\r\n//       cursor: 'pointer',\r\n//       width: '100%',\r\n//     },\r\n//     buttonHover: {\r\n//       backgroundColor: '#0056b3',\r\n//     },\r\n//     message: {\r\n//       maxWidth: '400px',\r\n//       margin: '10px auto 0',\r\n//       fontWeight: '600',\r\n//       color: '#333',\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2 style={{ textAlign: 'center' }}>Withdraw Money</h2>\r\n//       <form\r\n//         onSubmit={async (e) => {\r\n//           e.preventDefault();\r\n//           setMessage('');\r\n//           if (!date) {\r\n//             setMessage('Please select a date.');\r\n//             return;\r\n//           }\r\n//           try {\r\n//             const response = await withdrawMoney({\r\n//               accountId: parseInt(accountId),\r\n//               amount: parseFloat(amount),\r\n//               description,\r\n//               date,\r\n//             });\r\n//             setMessage(`Withdrawal successful! New balance: ${response.data.balance}`);\r\n//             setAccountId('');\r\n//             setDate('');\r\n//             setAmount('');\r\n//             setDescription('');\r\n//           } catch (error) {\r\n//             setMessage(`Withdrawal failed: ${error.response?.data?.message || error.message}`);\r\n//           }\r\n//         }}\r\n//         style={styles.form}\r\n//       >\r\n//         <div style={styles.formGroup}>\r\n//           <label style={styles.label}>Type:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value=\"Withdraw\"\r\n//             readOnly\r\n//             style={{ ...styles.input, ...styles.inputReadonly }}\r\n//           />\r\n//         </div>\r\n\r\n//         <div style={styles.formGroup}>\r\n//           <label style={styles.label}>Date:</label>\r\n//           <input\r\n//             type=\"date\"\r\n//             value={date}\r\n//             onChange={(e) => setDate(e.target.value)}\r\n//             required\r\n//             style={styles.input}\r\n//           />\r\n//         </div>\r\n\r\n//         <div style={styles.formGroup}>\r\n//           <label style={styles.label}>Account ID:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             placeholder=\"Account ID\"\r\n//             value={accountId}\r\n//             onChange={(e) => setAccountId(e.target.value)}\r\n//             required\r\n//             style={styles.input}\r\n//           />\r\n//         </div>\r\n\r\n//         <div style={styles.formGroup}>\r\n//           <label style={styles.label}>Amount:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             placeholder=\"Amount\"\r\n//             value={amount}\r\n//             onChange={(e) => setAmount(e.target.value)}\r\n//             required\r\n//             min=\"0.01\"\r\n//             step=\"0.01\"\r\n//             style={styles.input}\r\n//           />\r\n//         </div>\r\n\r\n//         <div style={styles.formGroup}>\r\n//           <label style={styles.label}>Description:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Description\"\r\n//             value={description}\r\n//             onChange={(e) => setDescription(e.target.value)}\r\n//             required\r\n//             style={styles.input}\r\n//           />\r\n//         </div>\r\n\r\n//         <button type=\"submit\" style={styles.button}>\r\n//           Withdraw\r\n//         </button>\r\n//       </form>\r\n\r\n//       {message && <p style={styles.message}>{message}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default WithdrawForm;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}