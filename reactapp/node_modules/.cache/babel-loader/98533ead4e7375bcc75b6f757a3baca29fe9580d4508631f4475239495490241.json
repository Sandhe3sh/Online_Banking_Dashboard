{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishnu\\\\project\\\\OnlineBankingDashboard\\\\cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb\\\\reactapp\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { loginUser } from '../utils/api';\n\n// const styles = {\n//   container: {\n//     maxWidth: '400px',\n//     margin: '50px auto',\n//     padding: '30px 25px',\n//     background: '#fff',\n//     boxShadow: '0 0 15px rgba(0,0,0,0.1)',\n//     borderRadius: '8px',\n//     fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n//   },\n//   heading: {\n//     textAlign: 'center',\n//     marginBottom: '20px',\n//     color: '#333',\n//   },\n//   form: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//   },\n//   input: {\n//     padding: '12px 15px',\n//     marginBottom: '15px',\n//     border: '1px solid #ccc',\n//     borderRadius: '6px',\n//     fontSize: '1rem',\n//     outline: 'none',\n//     transition: 'border-color 0.3s ease',\n//   },\n//   inputFocus: {\n//     borderColor: '#007BFF',\n//   },\n//   button: {\n//     padding: '12px 15px',\n//     backgroundColor: '#007BFF',\n//     border: 'none',\n//     borderRadius: '6px',\n//     color: 'white',\n//     fontSize: '1rem',\n//     cursor: 'pointer',\n//     transition: 'background-color 0.3s ease',\n//   },\n//   buttonHover: {\n//     backgroundColor: '#0056b3',\n//   },\n//   message: {\n//     textAlign: 'center',\n//     marginTop: '10px',\n//     fontWeight: '600',\n//   },\n//   messageSuccess: {\n//     color: '#28a745',\n//   },\n//   messageError: {\n//     color: '#d9534f',\n//   },\n//   switchText: {\n//     textAlign: 'center',\n//     color: '#555',\n//     marginTop: '15px',\n//     fontSize: '0.9rem',\n//   },\n//   switchButton: {\n//     background: 'none',\n//     border: 'none',\n//     color: '#007BFF',\n//     cursor: 'pointer',\n//     textDecoration: 'underline',\n//     fontSize: '0.9rem',\n//     padding: 0,\n//   },\n// };\n\n// const LoginForm = () => {\n//   const navigate = useNavigate();\n//   const [form, setForm] = useState({ username: '', password: '' });\n//   const [message, setMessage] = useState('');\n//   const [isSuccess, setIsSuccess] = useState(false);\n//   const [inputFocus, setInputFocus] = useState({ username: false, password: false });\n//   const [buttonHover, setButtonHover] = useState(false);\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     setMessage('');\n//     try {\n//       const response = await loginUser(form);\n//       const user = response.data;\n\n//       if (!user || !user.role) {\n//         setMessage('Login failed: No role assigned');\n//         setIsSuccess(false);\n//         return;\n//       }\n\n//       // Normalize role to uppercase to avoid case issues\n//       const role = user.role.toUpperCase();\n\n//       console.log('User logged in:', user);  // Debug role and data\n\n//       setMessage(`Welcome ${user.username}, Role: ${role}`);\n//       setIsSuccess(true);\n//       localStorage.setItem('user', JSON.stringify(user));\n\n//       // Navigate based on normalized role\n//       if (role === 'ADMIN') {\n//         navigate('/admin-dashboard');\n//       } else if (role === 'USER') {\n//         navigate('/user-dashboard');\n//       } else {\n//         setMessage('Login succeeded, but role is unknown');\n//       }\n//     } catch (error) {\n//       const errMsg = error?.response?.data?.message || 'Login failed: Invalid credentials';\n//       setMessage(errMsg);\n//       setIsSuccess(false);\n//     }\n//   };\n\n//   const handleFocus = (field) => {\n//     setInputFocus({ ...inputFocus, [field]: true });\n//   };\n\n//   const handleBlur = (field) => {\n//     setInputFocus({ ...inputFocus, [field]: false });\n//   };\n\n//   return (\n//     <div style={styles.container} role=\"main\" aria-labelledby=\"login-heading\">\n//       <h2 id=\"login-heading\" style={styles.heading}>Login</h2>\n//       <form style={styles.form} onSubmit={handleLogin} noValidate>\n//         <input\n//           type=\"text\"\n//           name=\"username\"\n//           placeholder=\"Username\"\n//           onChange={handleChange}\n//           required\n//           autoComplete=\"username\"\n//           aria-label=\"Username\"\n//           onFocus={() => handleFocus('username')}\n//           onBlur={() => handleBlur('username')}\n//           style={{\n//             ...styles.input,\n//             ...(inputFocus.username ? styles.inputFocus : {}),\n//           }}\n//         />\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           placeholder=\"Password\"\n//           onChange={handleChange}\n//           required\n//           autoComplete=\"current-password\"\n//           aria-label=\"Password\"\n//           onFocus={() => handleFocus('password')}\n//           onBlur={() => handleBlur('password')}\n//           style={{\n//             ...styles.input,\n//             ...(inputFocus.password ? styles.inputFocus : {}),\n//           }}\n//         />\n//         <button\n//           type=\"submit\"\n//           style={{\n//             ...styles.button,\n//             ...(buttonHover ? styles.buttonHover : {}),\n//           }}\n//           onMouseEnter={() => setButtonHover(true)}\n//           onMouseLeave={() => setButtonHover(false)}\n//           aria-label=\"Login\"\n//         >\n//           Login\n//         </button>\n//       </form>\n\n//       {message && (\n//         <p\n//           role=\"alert\"\n//           style={{\n//             ...styles.message,\n//             ...(isSuccess ? styles.messageSuccess : styles.messageError),\n//           }}\n//         >\n//           {message}\n//         </p>\n//       )}\n\n//       <p style={styles.switchText}>\n//         Don't have an account?{' '}\n//         <button\n//           style={styles.switchButton}\n//           onClick={() => navigate('/register')}\n//           aria-label=\"Navigate to Register\"\n//           type=\"button\"\n//         >\n//           Register here\n//         </button>\n//       </p>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { loginUser } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    maxWidth: '400px',\n    margin: '50px auto',\n    padding: '30px 25px',\n    background: '#fff',\n    boxShadow: '0 0 15px rgba(0,0,0,0.1)',\n    borderRadius: '8px',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\n  },\n  heading: {\n    textAlign: 'center',\n    marginBottom: '20px',\n    color: '#333'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  input: {\n    padding: '12px 15px',\n    marginBottom: '15px',\n    border: '1px solid #ccc',\n    borderRadius: '6px',\n    fontSize: '1rem',\n    outline: 'none',\n    transition: 'border-color 0.3s ease'\n  },\n  inputFocus: {\n    borderColor: '#007BFF'\n  },\n  button: {\n    padding: '12px 15px',\n    backgroundColor: '#007BFF',\n    border: 'none',\n    borderRadius: '6px',\n    color: 'white',\n    fontSize: '1rem',\n    cursor: 'pointer',\n    transition: 'background-color 0.3s ease'\n  },\n  buttonHover: {\n    backgroundColor: '#0056b3'\n  },\n  message: {\n    textAlign: 'center',\n    marginTop: '10px',\n    fontWeight: '600'\n  },\n  messageSuccess: {\n    color: '#28a745'\n  },\n  messageError: {\n    color: '#d9534f'\n  },\n  switchText: {\n    textAlign: 'center',\n    color: '#555',\n    marginTop: '15px',\n    fontSize: '0.9rem'\n  },\n  switchButton: {\n    background: 'none',\n    border: 'none',\n    color: '#007BFF',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n    fontSize: '0.9rem',\n    padding: 0\n  }\n};\nconst LoginForm = ({\n  onLogin\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    username: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [inputFocus, setInputFocus] = useState({\n    username: false,\n    password: false\n  });\n  const [buttonHover, setButtonHover] = useState(false);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    setMessage('');\n    try {\n      const response = await loginUser(form);\n      const user = response.data;\n      if (!user || !user.role) {\n        setMessage('Login failed: No role assigned.');\n        setIsSuccess(false);\n        return;\n      }\n      const role = user.role.toUpperCase();\n      console.log('Logged in:', user);\n\n      // Save user and notify App.js\n      localStorage.setItem('user', JSON.stringify(user));\n      onLogin(user); // Updates App.js state\n\n      setMessage(`Welcome ${user.username}!`);\n      setIsSuccess(true);\n\n      // Navigate to dashboard\n      // Navigate to dashboard\n      if (role === 'ADMIN') {\n        navigate('/admin-dashboard');\n      } else if (role === 'USER') {\n        navigate('/accounts'); // âœ… redirect user to /accounts instead of /user-dashboard\n      } else {\n        setMessage('Login succeeded, but unknown role.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errMsg = (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed: Invalid credentials.';\n      setMessage(errMsg);\n      setIsSuccess(false);\n    }\n  };\n  const handleFocus = field => {\n    setInputFocus({\n      ...inputFocus,\n      [field]: true\n    });\n  };\n  const handleBlur = field => {\n    setInputFocus({\n      ...inputFocus,\n      [field]: false\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    role: \"main\",\n    \"aria-labelledby\": \"login-heading\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"login-heading\",\n      style: styles.heading,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: styles.form,\n      onSubmit: handleLogin,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        onChange: handleChange,\n        value: form.username,\n        required: true,\n        autoComplete: \"username\",\n        \"aria-label\": \"Username\",\n        onFocus: () => handleFocus('username'),\n        onBlur: () => handleBlur('username'),\n        style: {\n          ...styles.input,\n          ...(inputFocus.username ? styles.inputFocus : {})\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: handleChange,\n        value: form.password,\n        required: true,\n        autoComplete: \"current-password\",\n        \"aria-label\": \"Password\",\n        onFocus: () => handleFocus('password'),\n        onBlur: () => handleBlur('password'),\n        style: {\n          ...styles.input,\n          ...(inputFocus.password ? styles.inputFocus : {})\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          ...styles.button,\n          ...(buttonHover ? styles.buttonHover : {})\n        },\n        onMouseEnter: () => setButtonHover(true),\n        onMouseLeave: () => setButtonHover(false),\n        \"aria-label\": \"Login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"alert\",\n      style: {\n        ...styles.message,\n        ...(isSuccess ? styles.messageSuccess : styles.messageError)\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.switchText,\n      children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.switchButton,\n        onClick: () => navigate('/register'),\n        \"aria-label\": \"Navigate to Register\",\n        type: \"button\",\n        children: \"Register here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"ktu70CySAp2S5c1raRSXvO8ROyI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","loginUser","jsxDEV","_jsxDEV","styles","container","maxWidth","margin","padding","background","boxShadow","borderRadius","fontFamily","heading","textAlign","marginBottom","color","form","display","flexDirection","input","border","fontSize","outline","transition","inputFocus","borderColor","button","backgroundColor","cursor","buttonHover","message","marginTop","fontWeight","messageSuccess","messageError","switchText","switchButton","textDecoration","LoginForm","onLogin","_s","navigate","setForm","username","password","setMessage","isSuccess","setIsSuccess","setInputFocus","setButtonHover","handleChange","e","target","name","value","handleLogin","preventDefault","response","user","data","role","toUpperCase","console","log","localStorage","setItem","JSON","stringify","error","_error$response","_error$response$data","errMsg","handleFocus","field","handleBlur","style","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","type","placeholder","onChange","required","autoComplete","onFocus","onBlur","onMouseEnter","onMouseLeave","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/LoginForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { loginUser } from '../utils/api';\r\n\r\n// const styles = {\r\n//   container: {\r\n//     maxWidth: '400px',\r\n//     margin: '50px auto',\r\n//     padding: '30px 25px',\r\n//     background: '#fff',\r\n//     boxShadow: '0 0 15px rgba(0,0,0,0.1)',\r\n//     borderRadius: '8px',\r\n//     fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n//   },\r\n//   heading: {\r\n//     textAlign: 'center',\r\n//     marginBottom: '20px',\r\n//     color: '#333',\r\n//   },\r\n//   form: {\r\n//     display: 'flex',\r\n//     flexDirection: 'column',\r\n//   },\r\n//   input: {\r\n//     padding: '12px 15px',\r\n//     marginBottom: '15px',\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: '6px',\r\n//     fontSize: '1rem',\r\n//     outline: 'none',\r\n//     transition: 'border-color 0.3s ease',\r\n//   },\r\n//   inputFocus: {\r\n//     borderColor: '#007BFF',\r\n//   },\r\n//   button: {\r\n//     padding: '12px 15px',\r\n//     backgroundColor: '#007BFF',\r\n//     border: 'none',\r\n//     borderRadius: '6px',\r\n//     color: 'white',\r\n//     fontSize: '1rem',\r\n//     cursor: 'pointer',\r\n//     transition: 'background-color 0.3s ease',\r\n//   },\r\n//   buttonHover: {\r\n//     backgroundColor: '#0056b3',\r\n//   },\r\n//   message: {\r\n//     textAlign: 'center',\r\n//     marginTop: '10px',\r\n//     fontWeight: '600',\r\n//   },\r\n//   messageSuccess: {\r\n//     color: '#28a745',\r\n//   },\r\n//   messageError: {\r\n//     color: '#d9534f',\r\n//   },\r\n//   switchText: {\r\n//     textAlign: 'center',\r\n//     color: '#555',\r\n//     marginTop: '15px',\r\n//     fontSize: '0.9rem',\r\n//   },\r\n//   switchButton: {\r\n//     background: 'none',\r\n//     border: 'none',\r\n//     color: '#007BFF',\r\n//     cursor: 'pointer',\r\n//     textDecoration: 'underline',\r\n//     fontSize: '0.9rem',\r\n//     padding: 0,\r\n//   },\r\n// };\r\n\r\n// const LoginForm = () => {\r\n//   const navigate = useNavigate();\r\n//   const [form, setForm] = useState({ username: '', password: '' });\r\n//   const [message, setMessage] = useState('');\r\n//   const [isSuccess, setIsSuccess] = useState(false);\r\n//   const [inputFocus, setInputFocus] = useState({ username: false, password: false });\r\n//   const [buttonHover, setButtonHover] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     setMessage('');\r\n//     try {\r\n//       const response = await loginUser(form);\r\n//       const user = response.data;\r\n\r\n//       if (!user || !user.role) {\r\n//         setMessage('Login failed: No role assigned');\r\n//         setIsSuccess(false);\r\n//         return;\r\n//       }\r\n\r\n//       // Normalize role to uppercase to avoid case issues\r\n//       const role = user.role.toUpperCase();\r\n\r\n//       console.log('User logged in:', user);  // Debug role and data\r\n\r\n//       setMessage(`Welcome ${user.username}, Role: ${role}`);\r\n//       setIsSuccess(true);\r\n//       localStorage.setItem('user', JSON.stringify(user));\r\n\r\n//       // Navigate based on normalized role\r\n//       if (role === 'ADMIN') {\r\n//         navigate('/admin-dashboard');\r\n//       } else if (role === 'USER') {\r\n//         navigate('/user-dashboard');\r\n//       } else {\r\n//         setMessage('Login succeeded, but role is unknown');\r\n//       }\r\n//     } catch (error) {\r\n//       const errMsg = error?.response?.data?.message || 'Login failed: Invalid credentials';\r\n//       setMessage(errMsg);\r\n//       setIsSuccess(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleFocus = (field) => {\r\n//     setInputFocus({ ...inputFocus, [field]: true });\r\n//   };\r\n\r\n//   const handleBlur = (field) => {\r\n//     setInputFocus({ ...inputFocus, [field]: false });\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container} role=\"main\" aria-labelledby=\"login-heading\">\r\n//       <h2 id=\"login-heading\" style={styles.heading}>Login</h2>\r\n//       <form style={styles.form} onSubmit={handleLogin} noValidate>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"username\"\r\n//           placeholder=\"Username\"\r\n//           onChange={handleChange}\r\n//           required\r\n//           autoComplete=\"username\"\r\n//           aria-label=\"Username\"\r\n//           onFocus={() => handleFocus('username')}\r\n//           onBlur={() => handleBlur('username')}\r\n//           style={{\r\n//             ...styles.input,\r\n//             ...(inputFocus.username ? styles.inputFocus : {}),\r\n//           }}\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           placeholder=\"Password\"\r\n//           onChange={handleChange}\r\n//           required\r\n//           autoComplete=\"current-password\"\r\n//           aria-label=\"Password\"\r\n//           onFocus={() => handleFocus('password')}\r\n//           onBlur={() => handleBlur('password')}\r\n//           style={{\r\n//             ...styles.input,\r\n//             ...(inputFocus.password ? styles.inputFocus : {}),\r\n//           }}\r\n//         />\r\n//         <button\r\n//           type=\"submit\"\r\n//           style={{\r\n//             ...styles.button,\r\n//             ...(buttonHover ? styles.buttonHover : {}),\r\n//           }}\r\n//           onMouseEnter={() => setButtonHover(true)}\r\n//           onMouseLeave={() => setButtonHover(false)}\r\n//           aria-label=\"Login\"\r\n//         >\r\n//           Login\r\n//         </button>\r\n//       </form>\r\n\r\n//       {message && (\r\n//         <p\r\n//           role=\"alert\"\r\n//           style={{\r\n//             ...styles.message,\r\n//             ...(isSuccess ? styles.messageSuccess : styles.messageError),\r\n//           }}\r\n//         >\r\n//           {message}\r\n//         </p>\r\n//       )}\r\n\r\n//       <p style={styles.switchText}>\r\n//         Don't have an account?{' '}\r\n//         <button\r\n//           style={styles.switchButton}\r\n//           onClick={() => navigate('/register')}\r\n//           aria-label=\"Navigate to Register\"\r\n//           type=\"button\"\r\n//         >\r\n//           Register here\r\n//         </button>\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { loginUser } from '../utils/api';\r\n\r\nconst styles = {\r\n  container: {\r\n    maxWidth: '400px',\r\n    margin: '50px auto',\r\n    padding: '30px 25px',\r\n    background: '#fff',\r\n    boxShadow: '0 0 15px rgba(0,0,0,0.1)',\r\n    borderRadius: '8px',\r\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n  },\r\n  heading: {\r\n    textAlign: 'center',\r\n    marginBottom: '20px',\r\n    color: '#333',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  input: {\r\n    padding: '12px 15px',\r\n    marginBottom: '15px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '6px',\r\n    fontSize: '1rem',\r\n    outline: 'none',\r\n    transition: 'border-color 0.3s ease',\r\n  },\r\n  inputFocus: {\r\n    borderColor: '#007BFF',\r\n  },\r\n  button: {\r\n    padding: '12px 15px',\r\n    backgroundColor: '#007BFF',\r\n    border: 'none',\r\n    borderRadius: '6px',\r\n    color: 'white',\r\n    fontSize: '1rem',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s ease',\r\n  },\r\n  buttonHover: {\r\n    backgroundColor: '#0056b3',\r\n  },\r\n  message: {\r\n    textAlign: 'center',\r\n    marginTop: '10px',\r\n    fontWeight: '600',\r\n  },\r\n  messageSuccess: {\r\n    color: '#28a745',\r\n  },\r\n  messageError: {\r\n    color: '#d9534f',\r\n  },\r\n  switchText: {\r\n    textAlign: 'center',\r\n    color: '#555',\r\n    marginTop: '15px',\r\n    fontSize: '0.9rem',\r\n  },\r\n  switchButton: {\r\n    background: 'none',\r\n    border: 'none',\r\n    color: '#007BFF',\r\n    cursor: 'pointer',\r\n    textDecoration: 'underline',\r\n    fontSize: '0.9rem',\r\n    padding: 0,\r\n  },\r\n};\r\n\r\nconst LoginForm = ({ onLogin }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [form, setForm] = useState({ username: '', password: '' });\r\n  const [message, setMessage] = useState('');\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const [inputFocus, setInputFocus] = useState({ username: false, password: false });\r\n  const [buttonHover, setButtonHover] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n\r\n    try {\r\n      const response = await loginUser(form);\r\n      const user = response.data;\r\n\r\n      if (!user || !user.role) {\r\n        setMessage('Login failed: No role assigned.');\r\n        setIsSuccess(false);\r\n        return;\r\n      }\r\n\r\n      const role = user.role.toUpperCase();\r\n      console.log('Logged in:', user);\r\n\r\n      // Save user and notify App.js\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      onLogin(user); // Updates App.js state\r\n\r\n      setMessage(`Welcome ${user.username}!`);\r\n      setIsSuccess(true);\r\n\r\n      // Navigate to dashboard\r\n      // Navigate to dashboard\r\nif (role === 'ADMIN') {\r\n  navigate('/admin-dashboard');\r\n} else if (role === 'USER') {\r\n  navigate('/accounts'); // âœ… redirect user to /accounts instead of /user-dashboard\r\n} else {\r\n  setMessage('Login succeeded, but unknown role.');\r\n}\r\n\r\n    } catch (error) {\r\n      const errMsg = error?.response?.data?.message || 'Login failed: Invalid credentials.';\r\n      setMessage(errMsg);\r\n      setIsSuccess(false);\r\n    }\r\n  };\r\n\r\n  const handleFocus = (field) => {\r\n    setInputFocus({ ...inputFocus, [field]: true });\r\n  };\r\n\r\n  const handleBlur = (field) => {\r\n    setInputFocus({ ...inputFocus, [field]: false });\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container} role=\"main\" aria-labelledby=\"login-heading\">\r\n      <h2 id=\"login-heading\" style={styles.heading}>Login</h2>\r\n\r\n      <form style={styles.form} onSubmit={handleLogin} noValidate>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          onChange={handleChange}\r\n          value={form.username}\r\n          required\r\n          autoComplete=\"username\"\r\n          aria-label=\"Username\"\r\n          onFocus={() => handleFocus('username')}\r\n          onBlur={() => handleBlur('username')}\r\n          style={{\r\n            ...styles.input,\r\n            ...(inputFocus.username ? styles.inputFocus : {}),\r\n          }}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={handleChange}\r\n          value={form.password}\r\n          required\r\n          autoComplete=\"current-password\"\r\n          aria-label=\"Password\"\r\n          onFocus={() => handleFocus('password')}\r\n          onBlur={() => handleBlur('password')}\r\n          style={{\r\n            ...styles.input,\r\n            ...(inputFocus.password ? styles.inputFocus : {}),\r\n          }}\r\n        />\r\n\r\n        <button\r\n          type=\"submit\"\r\n          style={{\r\n            ...styles.button,\r\n            ...(buttonHover ? styles.buttonHover : {}),\r\n          }}\r\n          onMouseEnter={() => setButtonHover(true)}\r\n          onMouseLeave={() => setButtonHover(false)}\r\n          aria-label=\"Login\"\r\n        >\r\n          Login\r\n        </button>\r\n      </form>\r\n\r\n      {message && (\r\n        <p\r\n          role=\"alert\"\r\n          style={{\r\n            ...styles.message,\r\n            ...(isSuccess ? styles.messageSuccess : styles.messageError),\r\n          }}\r\n        >\r\n          {message}\r\n        </p>\r\n      )}\r\n\r\n      <p style={styles.switchText}>\r\n        Don't have an account?{' '}\r\n        <button\r\n          style={styles.switchButton}\r\n          onClick={() => navigate('/register')}\r\n          aria-label=\"Navigate to Register\"\r\n          type=\"button\"\r\n        >\r\n          Register here\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}