{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishnu\\\\project\\\\OnlineBankingDashboard\\\\cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb\\\\reactapp\\\\src\\\\components\\\\AccountDashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { getAllAccounts } from '../utils/api';\n// import AccountDetails from './AccountDetails'; // assuming you have this\n\n// function AccountDashboard() {\n//   const [accounts, setAccounts] = useState([]);\n//   const [selectedAccountId, setSelectedAccountId] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     getAllAccounts()\n//       .then(response => {\n//         setAccounts(response.data);\n//         setLoading(false);\n//       })\n//       .catch(() => {\n//         setError('Failed to load accounts');\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) return <p>Loading accounts...</p>;\n//   if (error) return <p>{error}</p>;\n\n//   return (\n//     <div>\n//       <h1>Account Dashboard</h1>\n//       <ul>\n//         {accounts.map(acc => (\n//           <li key={acc.accountId}>\n//             <button onClick={() => setSelectedAccountId(acc.accountId)}>\n//               {acc.accountHolderName} - {acc.accountNumber}\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       {selectedAccountId && <AccountDetails accountId={selectedAccountId} />}\n//     </div>\n//   );\n// }\n\n// export default AccountDashboard;\nimport React, { useEffect, useState } from 'react';\nimport { getAllAccounts } from '../utils/api';\nimport AccountDetails from './AccountDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountDashboard() {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getAllAccounts().then(accounts => {\n      setAccounts(accounts);\n      setLoading(false);\n    }).catch(() => {\n      setError('Failed to load accounts');\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: styles.message,\n    children: \"Loading accounts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      ...styles.message,\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.heading,\n      children: \"Account Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: styles.list,\n      children: accounts.length > 0 ? accounts.map(acc => {\n        var _acc$balance$toFixed, _acc$balance;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          style: styles.listItem,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedAccountId(acc.accountId),\n            style: styles.button,\n            children: [acc.accountHolderName, \" - \", acc.accountNumber, \" - Balance: $\", (_acc$balance$toFixed = (_acc$balance = acc.balance) === null || _acc$balance === void 0 ? void 0 : _acc$balance.toFixed(2)) !== null && _acc$balance$toFixed !== void 0 ? _acc$balance$toFixed : '0.00']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, acc.accountId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No accounts found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), selectedAccountId && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.detailsContainer,\n      children: /*#__PURE__*/_jsxDEV(AccountDetails, {\n        accountId: selectedAccountId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountDashboard, \"dDTfXPu7rO8EOpPWOgoDY2CLq38=\");\n_c = AccountDashboard;\nconst styles = {\n  container: {\n    padding: '20px',\n    maxWidth: '800px',\n    margin: '40px auto',\n    backgroundColor: '#ffffff',\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\n    borderRadius: '8px',\n    fontFamily: 'Arial, sans-serif'\n  },\n  heading: {\n    textAlign: 'center',\n    color: '#333',\n    marginBottom: '24px'\n  },\n  list: {\n    listStyle: 'none',\n    padding: 0\n  },\n  listItem: {\n    marginBottom: '12px'\n  },\n  button: {\n    backgroundColor: '#4f46e5',\n    color: '#ffffff',\n    border: 'none',\n    padding: '10px 16px',\n    fontSize: '16px',\n    borderRadius: '6px',\n    cursor: 'pointer',\n    width: '100%',\n    textAlign: 'left',\n    transition: 'background-color 0.3s ease'\n  },\n  message: {\n    textAlign: 'center',\n    color: '#666',\n    fontSize: '16px'\n  },\n  detailsContainer: {\n    marginTop: '20px'\n  }\n};\nexport default AccountDashboard;\nvar _c;\n$RefreshReg$(_c, \"AccountDashboard\");","map":{"version":3,"names":["React","useEffect","useState","getAllAccounts","AccountDetails","jsxDEV","_jsxDEV","AccountDashboard","_s","accounts","setAccounts","selectedAccountId","setSelectedAccountId","loading","setLoading","error","setError","then","catch","style","styles","message","children","fileName","_jsxFileName","lineNumber","columnNumber","color","container","heading","list","length","map","acc","_acc$balance$toFixed","_acc$balance","listItem","onClick","accountId","button","accountHolderName","accountNumber","balance","toFixed","detailsContainer","_c","padding","maxWidth","margin","backgroundColor","boxShadow","borderRadius","fontFamily","textAlign","marginBottom","listStyle","border","fontSize","cursor","width","transition","marginTop","$RefreshReg$"],"sources":["C:/Users/vishnu/project/OnlineBankingDashboard/cdb0d0e7-4378-4b7b-82f4-1f4a189e249a-c94bf074-6f2d-47ef-ab4a-7c014a3ee3bb/reactapp/src/components/AccountDashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { getAllAccounts } from '../utils/api';\r\n// import AccountDetails from './AccountDetails'; // assuming you have this\r\n\r\n// function AccountDashboard() {\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     getAllAccounts()\r\n//       .then(response => {\r\n//         setAccounts(response.data);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch(() => {\r\n//         setError('Failed to load accounts');\r\n//         setLoading(false);\r\n//       });\r\n//   }, []);\r\n\r\n//   if (loading) return <p>Loading accounts...</p>;\r\n//   if (error) return <p>{error}</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Account Dashboard</h1>\r\n//       <ul>\r\n//         {accounts.map(acc => (\r\n//           <li key={acc.accountId}>\r\n//             <button onClick={() => setSelectedAccountId(acc.accountId)}>\r\n//               {acc.accountHolderName} - {acc.accountNumber}\r\n//             </button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       {selectedAccountId && <AccountDetails accountId={selectedAccountId} />}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AccountDashboard;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAllAccounts } from '../utils/api';\r\nimport AccountDetails from './AccountDetails';\r\n\r\nfunction AccountDashboard() {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getAllAccounts()\r\n      .then(accounts => {\r\n        setAccounts(accounts);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setError('Failed to load accounts');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) return <p style={styles.message}>Loading accounts...</p>;\r\n  if (error) return <p style={{ ...styles.message, color: 'red' }}>{error}</p>;\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.heading}>Account Dashboard</h1>\r\n      <ul style={styles.list}>\r\n        {accounts.length > 0 ? (\r\n          accounts.map(acc => (\r\n            <li key={acc.accountId} style={styles.listItem}>\r\n              <button\r\n                onClick={() => setSelectedAccountId(acc.accountId)}\r\n                style={styles.button}\r\n              >\r\n                {acc.accountHolderName} - {acc.accountNumber} - Balance: ${acc.balance?.toFixed(2) ?? '0.00'}\r\n              </button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No accounts found.</p>\r\n        )}\r\n      </ul>\r\n\r\n      {selectedAccountId && (\r\n        <div style={styles.detailsContainer}>\r\n          <AccountDetails accountId={selectedAccountId} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    padding: '20px',\r\n    maxWidth: '800px',\r\n    margin: '40px auto',\r\n    backgroundColor: '#ffffff',\r\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\r\n    borderRadius: '8px',\r\n    fontFamily: 'Arial, sans-serif',\r\n  },\r\n  heading: {\r\n    textAlign: 'center',\r\n    color: '#333',\r\n    marginBottom: '24px',\r\n  },\r\n  list: {\r\n    listStyle: 'none',\r\n    padding: 0,\r\n  },\r\n  listItem: {\r\n    marginBottom: '12px',\r\n  },\r\n  button: {\r\n    backgroundColor: '#4f46e5',\r\n    color: '#ffffff',\r\n    border: 'none',\r\n    padding: '10px 16px',\r\n    fontSize: '16px',\r\n    borderRadius: '6px',\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    textAlign: 'left',\r\n    transition: 'background-color 0.3s ease',\r\n  },\r\n  message: {\r\n    textAlign: 'center',\r\n    color: '#666',\r\n    fontSize: '16px',\r\n  },\r\n  detailsContainer: {\r\n    marginTop: '20px',\r\n  },\r\n};\r\n\r\nexport default AccountDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}